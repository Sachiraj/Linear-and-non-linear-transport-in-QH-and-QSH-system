(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2801990,      54716]
NotebookOptionsPosition[   2705216,      53618]
NotebookOutlinePosition[   2705705,      53636]
CellTagsIndexPosition[   2705662,      53633]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Linear Chiral ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["eV", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["eV", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "91554e10-a6d6-4321-9b60-119a6679edef"],
 ")(Voltage probe)"
}], "Title",
 CellChangeTimes->{{3.913068786025873*^9, 3.91306880520476*^9}, {
  3.913068948118886*^9, 
  3.913068952747737*^9}},ExpressionUUID->"23418549-6c9e-4878-857f-\
d4b9f3817912"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", 
   RowBox[{"1.05", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "34"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ae", "=", 
   RowBox[{"1.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "22"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"0.1", "*", "kb", "*", 
    RowBox[{"T", "/", "hb"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"kb", " ", "*", "T"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "ec", ")"}], "^", "2"}], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", "=", 
   RowBox[{"ec", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lp", "=", 
   RowBox[{"ec", "/", "h"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lh", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12uu", "=", 
   RowBox[{"TX", " ", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13uu", "=", 
   RowBox[{"TX", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21uu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23uu", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31uu", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32uu", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33uu", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", " ", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"2", "*", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]T", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"kb", "*", "\[Delta]T"}], ")"}], "2"], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Pi]", "*", "kb"}], 
       RowBox[{
        SqrtBox["3"], "ec"}]], ")"}], "2"], "T"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vg", "=", 
   RowBox[{"0.4", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "=", 
    RowBox[{"x1", "*", 
     RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"J1", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"G0", "*", "T1", "*", "T2", "*", "df"}], ",", 
      RowBox[{"{", 
       RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E2", "=", 
        RowBox[{"2", "ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E1", "=", 
        RowBox[{"ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"df", "=", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
           RowBox[{"(", "a", ")"}]}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
                RowBox[{"(", "a", ")"}]}], "]"}], "+", "1"}], ")"}], "^", 
            "2"}], " ", "a"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n0", "=", 
        RowBox[{"-", "\[Infinity]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n1", "=", "\[Infinity]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"G11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T12uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T13uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T31uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T32uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T12uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T13uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L23", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T23uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T31uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T32uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T12uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T13uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T31uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T12uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T13uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T31uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T32uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Gc", "=", 
        RowBox[{"G11", "-", 
         FractionBox[
          RowBox[{"G13", "*", 
           RowBox[{"(", "G31", ")"}]}], 
          RowBox[{"(", "G33", ")"}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LeT", "=", 
        RowBox[{"L11", "-", 
         FractionBox[
          RowBox[{"G13", "*", "L31"}], "G33"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LhV", "=", 
        RowBox[{"\[Pi]11", "-", 
         FractionBox[
          RowBox[{"\[Pi]13", "*", "G31"}], "G33"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LhT", "=", 
        RowBox[{"K11", "-", 
         FractionBox[
          RowBox[{"\[Pi]13", "*", "L31"}], "G33"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Sc", "=", 
        RowBox[{"LeT", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Pc", "=", 
        RowBox[{"LhV", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Kc", "=", 
        FractionBox[
         RowBox[{
          RowBox[{"LhT", "*", "Gc"}], "-", 
          RowBox[{"LhV", "*", "LeT"}]}], "Gc"]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"P", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"], 
          RowBox[{"4", "*", "Gc"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"], 
          RowBox[{"4", "*", "Gc"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         RowBox[{"Gc", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LeT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         RowBox[{"LhV", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LhT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"P1", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]1", "=", 
        RowBox[{
         FractionBox[
          RowBox[{"V", "*", "I1"}], "J1"], "*", "100"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        FractionBox[
         RowBox[{"T", 
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"]}], 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "Gc", "*", "LhT"}], "-", 
            RowBox[{"LeT", "*", "LhV"}]}], ")"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"T", "*", 
         FractionBox["LeT", "LhV"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        FractionBox[
         RowBox[{"LhV", "*", "LeT"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gc", "*", "LhT"}], "-", 
           RowBox[{"LeT", "*", "LhV"}]}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]m", "=", 
        FractionBox[
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Z", "=", 
        FractionBox[
         RowBox[{"Gc", "*", 
          SuperscriptBox["Sc", "2"], "*", "T"}], "Kc"]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Pm", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Gc", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["LhT", "LhV"], ")"}], "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"Gc", "*", "LhT"}], "-", 
                   RowBox[{"LeT", "*", "LhV"}]}], 
                  RowBox[{"Gc", "*", "LhT"}]]]}], ")"}], "2"]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"LeT", "*", "LhT"}], "LhV"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"Gc", "*", "LhT"}], "-", 
                  RowBox[{"LeT", "*", "LhV"}]}], 
                 RowBox[{"Gc", "*", "LhT"}]]]}], ")"}]}]}], ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "x2", ",", 
            RowBox[{"P", "/", "P0"}], ",", 
            RowBox[{"P1", "/", "P"}], ",", "\[Eta]1", ",", 
            RowBox[{"P1", "/", "P0"}], ",", "\[Eta]", ",", "\[Eta]m", ",", 
            RowBox[{"Pm", "/", "P0"}], ",", "Z"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", "0", ",", "0.020", ",", "0.0001"}], "}"}]}], "]"}], 
   ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check1.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.913068113613612*^9, 3.9130681140370626`*^9}, 
   3.913068573688446*^9, {3.913714676021555*^9, 3.9137146950827923`*^9}, {
   3.913714880292901*^9, 3.913714884121035*^9}, {3.913716336320682*^9, 
   3.91371633794042*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"77ffaeb3-8a34-4d8a-afc8-147f2f9a8f42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"49.201277`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9130681554094963`*^9, 3.9130686481636467`*^9, 
  3.913415989115555*^9, 3.91371479328015*^9, 3.913714947644206*^9, 
  3.91371640798125*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"ddb7d42d-7cc0-475d-bad7-f653a58a53fa"],

Cell[BoxData["\<\"check1.dat\"\>"], "Output",
 CellChangeTimes->{3.9130681554094963`*^9, 3.9130686481636467`*^9, 
  3.913415989115555*^9, 3.91371479328015*^9, 3.913714947644206*^9, 
  3.9137164080642138`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"ff9b382b-a74f-4657-8afa-34ed8e04d526"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Linear Chiral ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["eV", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["eV", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "af3af96f-05e7-472e-9e7b-73b9841ff9ed"],
 ")(Voltage temperature probe)"
}], "Title",
 CellChangeTimes->{{3.91306882210247*^9, 3.913068828442381*^9}, {
  3.913068963244667*^9, 
  3.913068975883685*^9}},ExpressionUUID->"151cb62e-e9af-4e8f-b776-\
fbdea6a760ce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ae", "=", 
   RowBox[{"1.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "22"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"0.1", "*", "kb", "*", 
    RowBox[{"T", "/", "hb"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"kb", " ", "*", "T"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "ec", ")"}], "^", "2"}], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", "=", 
   RowBox[{"ec", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lp", "=", 
   RowBox[{"ec", "/", "h"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lh", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12uu", "=", 
   RowBox[{"TX", " ", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13uu", "=", 
   RowBox[{"TX", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21uu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23uu", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31uu", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32uu", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33uu", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", " ", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"2", "*", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]T", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"kb", "*", "\[Delta]T"}], ")"}], "2"], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Pi]", "*", "kb"}], 
       RowBox[{
        SqrtBox["3"], "ec"}]], ")"}], "2"], "T"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vg", "=", 
   RowBox[{"10.40", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "=", 
    RowBox[{"x1", "*", 
     RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"J1", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"G0", "*", "T1", "*", "T2", "*", "df"}], ",", 
      RowBox[{"{", 
       RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E2", "=", 
        RowBox[{"2", "ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E1", "=", 
        RowBox[{"ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"df", "=", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
           RowBox[{"(", "a", ")"}]}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
                RowBox[{"(", "a", ")"}]}], "]"}], "+", "1"}], ")"}], "^", 
            "2"}], " ", "a"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n0", "=", 
        RowBox[{"-", "\[Infinity]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n1", "=", "\[Infinity]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"G11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T12uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T13uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T31uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T32uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu"}], ")"}], "*", "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T12uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T13uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L23", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T23uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T31uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"L32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T32uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T12uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T13uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T31uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Pi]33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T12uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T13uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T31uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "T32uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Gc", "=", 
        RowBox[{"G11", "+", 
         FractionBox[
          RowBox[{"G13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"L13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LeT", "=", 
        RowBox[{"L11", "+", 
         FractionBox[
          RowBox[{"G13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "K31"}], "-", 
             RowBox[{"L31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"L13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "K31"}], "-", 
             RowBox[{"L31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LhV", "=", 
        RowBox[{"\[Pi]11", "+", 
         FractionBox[
          RowBox[{"\[Pi]13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"K13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LhT", "=", 
        RowBox[{"K11", "+", 
         FractionBox[
          RowBox[{"\[Pi]13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "K31"}], "-", 
             RowBox[{"L31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"K13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "K31"}], "-", 
             RowBox[{"L31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sc", "=", 
        RowBox[{"LeT", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Pc", "=", 
        RowBox[{"LhV", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Kc", "=", 
        FractionBox[
         RowBox[{
          RowBox[{"LhT", "*", "Gc"}], "-", 
          RowBox[{"LhV", "*", "LeT"}]}], "Gc"]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"P", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"], 
          RowBox[{"4", "*", "Gc"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         RowBox[{"Gc", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LeT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         RowBox[{"LhV", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LhT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"P1", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]1", "=", 
        RowBox[{
         FractionBox[
          RowBox[{"V", "*", "I1"}], "J1"], "*", "100"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        FractionBox[
         RowBox[{"T", 
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"]}], 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "Gc", "*", "LhT"}], "-", 
            RowBox[{"LeT", "*", "LhV"}]}], ")"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"T", "*", 
         FractionBox["LeT", "LhV"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        FractionBox[
         RowBox[{"LhV", "*", "LeT"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gc", "*", "LhT"}], "-", 
           RowBox[{"LeT", "*", "LhV"}]}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]m", "=", 
        FractionBox[
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Z", "=", 
        FractionBox[
         RowBox[{"Gc", "*", 
          SuperscriptBox["Sc", "2"], "*", "T"}], "Kc"]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Pm", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Gc", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["LhT", "LhV"], ")"}], "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"Gc", "*", "LhT"}], "-", 
                   RowBox[{"LeT", "*", "LhV"}]}], 
                  RowBox[{"Gc", "*", "LhT"}]]]}], ")"}], "2"]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"LeT", "*", "LhT"}], "LhV"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"Gc", "*", "LhT"}], "-", 
                  RowBox[{"LeT", "*", "LhV"}]}], 
                 RowBox[{"Gc", "*", "LhT"}]]]}], ")"}]}]}], ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", 
            RowBox[{"P", "/", "P0"}], ",", 
            RowBox[{"P1", "/", "P"}], ",", "\[Eta]1", ",", 
            RowBox[{"P1", "/", "P0"}], ",", "\[Eta]", ",", "\[Eta]m", ",", 
            RowBox[{"Pm", "/", "P0"}], ",", "Z"}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", "0", ",", "0.238", ",", "0.001"}], "}"}]}], "]"}], 
   ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check2.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.913068179678877*^9, 3.913068180075706*^9}, {
   3.913714981181283*^9, 3.9137149984440727`*^9}, {3.913715043076091*^9, 
   3.913715044323503*^9}, 3.913715122088627*^9, {3.913715259101611*^9, 
   3.913715267585964*^9}, 3.913715450461879*^9, {3.9137155260609303`*^9, 
   3.913715528203813*^9}, {3.913715572597933*^9, 3.9137155742150497`*^9}, {
   3.9137156441872997`*^9, 3.913715647786653*^9}, {3.91371582876941*^9, 
   3.913715829208358*^9}, {3.913715963521963*^9, 3.913715964044034*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e106e667-1885-441f-810c-a81ba9346d02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000030444191395255156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.673004166454519`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715989247332*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f4446db9-d854-4fb9-9446-631ed742990b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000030444191395255156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.673004166454519`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715989317368*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0ce9e71b-cf58-46e9-8c8c-df1fc0dcc010"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.734988003370955`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"9.261218264989847`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.851321520509628`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715989449177*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"97bb9539-6fcd-4c6c-aeeb-77bcd0340e9d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.734988003370955`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"9.261218264989847`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.851321520509628`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715989533828*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1eb8b6f7-b96d-4d90-906c-0433885e26db"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.000030443991234924633`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.872537813146719`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715989601843*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"13af2a81-0fc8-49a8-aef1-c82774727175"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.000030443991234924633`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.872537813146719`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715989669208*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"19d9b9f3-8675-4648-a7fb-943f6c344dc7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137159897422333`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2578c962-e01f-4f36-ac2b-c44fdbefbfb0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137159898121243`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"80dc369c-6582-478d-b08a-f155534ab608"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715989882513*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e2830f1f-e243-4cc6-a6fe-9c157d64b49f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137159899502783`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4c0cc226-0ff0-49ed-abf5-2f25aaddf831"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715990017453*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"da08b233-63c7-4458-bce6-2d96d705a597"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715990084063*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"507a6cdb-b677-42d8-948f-90cbf38ad553"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715990155191*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"dc9181d7-f9bd-43b8-8aea-082457dcc82c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715990222595*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4c2eb0c5-cef0-456a-af26-0bd9bcdfa3f0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"izero\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913715990289448*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4207ce57-53a4-4fe3-88aa-031353577ebb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"izero\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137159903583317`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8b01a546-8296-495c-877d-be8aa9bb56f6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000030444191395255156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.673004166454519`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716001641591*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6a3634ba-a00b-48ce-85f6-4b27a1eefdf7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000030444191395255156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.673004166454519`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160017764072`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"18ffcee8-a96d-4b1d-bd55-55c7d5ed857e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.734988003370955`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"9.261218264989847`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.851321520509628`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160018841133`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2773e158-dbbe-4014-bb77-cd5e3c0c9dbf"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.734988003370955`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"9.261218264989847`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.851321520509628`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716001996273*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e910ca21-5c83-4392-87fe-b1e9e6f960ad"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.000030443991234924633`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.872537813146719`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716002091691*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d7ea4a7f-8b8f-4836-b424-8f23f896b0d4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.000030443991234924633`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.872537813146719`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716002166308*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"549c1995-173e-4bdf-af00-97636bcb6ea9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160022488422`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"54b33267-c73a-470f-8a34-bfdb2eef48ba"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716002319036*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2c0f66e8-6114-4a54-b449-4cae10a709ea"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716002389876*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"bde2b687-08b8-42b3-9ad7-5a37916b47fc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716002459715*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"1f1f6ca7-3ccc-44fa-8e6f-2061505e9f37"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716002528248*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"66df9073-2591-4d77-b7bf-6cfb618e59a0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160025970497`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6de2eea3-be99-4a43-af7d-cfdb543b9405"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716002666223*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c201e575-494b-475c-aef1-d860ea827199"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716002741333*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5b7658ef-82c2-4ac3-816e-3026f6995570"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"izero\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160029610367`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"38469875-1466-4f05-90b0-c3202f21295c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"izero\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160030495234`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"450fd966-ab4a-4d65-b4ea-e5299ad31abe"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000030444191395255156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.673004166454519`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716012023698*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"99f64762-c6c8-4d74-af00-ca15e4992b7b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.734988003370955`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"9.261218264989847`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.851321520509628`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160121769876`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5a432d5d-7a10-4c13-9a20-464765116926"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.000030443991234924633`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.872537813146719`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716012280555*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"96ee6626-1f0f-46b0-8005-33d445c9abd2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000030444191395255156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.673004166454519`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716012410037*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"48115e11-0ac4-4a1e-9463-f0a903468f81"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716012514443*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4c4951ef-d367-4c96-a8e6-39ea522d2e73"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.734988003370955`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"9.261218264989847`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.851321520509628`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160125935*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"94741d27-5952-4463-9f7b-f323be41e0fa"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716012674142*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"15ceb828-ab44-4fae-8960-40755db2b041"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.000030443991234924633`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.872537813146719`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716012751123*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8bed0475-b006-4089-9cf3-e84af93cf177"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716012819202*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5a0cca9c-caa1-481f-8ecc-57d2e3477d66"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716012890583*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"29ca0888-62b3-4209-a7c8-3d66a0f4df82"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160129580812`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"971bd0fd-8bda-4705-8d7f-2c681e9e2010"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716013028029*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"67b8ee78-f7df-4b23-a564-bd4679314099"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"izero\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716013144307*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b8ced62b-227a-4917-b30d-7b898086b802"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160132325373`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e6c2eecd-2586-4647-ae19-191b0c48dfb4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716013327733*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"1d6ab8f1-f7cb-4151-9b90-273dc54ba238"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"izero\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160134047613`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2a739e45-de3f-4971-ade1-24df9ada7821"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000030444191395255156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.673004166454519`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91371602294692*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5d57f484-c28d-4515-bb8b-d27d68d65b21"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.734988003370955`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"9.261218264989847`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.851321520509628`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160230973377`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"cc142198-f54b-47fb-bd2f-9496d65fe8a6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.000030443991234924633`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.872537813146719`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91371602321316*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8444adc0-07a3-4c9d-b5cd-2bf728a8b4d6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716023315913*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"05e9e6fe-0c26-4786-a28f-8aa408436178"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000030444191395255156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.673004166454519`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716023418343*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9f0bdc5a-7619-432f-b711-eb2e321ff40f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716023497834*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9c04c66b-312b-4cf1-b6a7-e5a26ddaaf7b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.734988003370955`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"9.261218264989847`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.851321520509628`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716023579587*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"0241c389-25cc-4b33-ac78-29fd0f71cb57"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160236532297`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"eb7d3fa3-87ed-4dfb-ab12-8522f552e80c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.000030443991234924633`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.872537813146719`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160237334347`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"02dfaf9d-91b1-4e1f-ba39-75c4ca0ad7ac"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160238046293`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"3d8795e9-d818-425e-961d-4c67c452c29a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716023875411*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"079785b8-9e58-4ec5-b940-55a68f9e6f5a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"izero\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160239424667`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"cc51a3ac-fc91-43f1-9753-675e244287c2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716024020042*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"afa0ef18-91ea-4566-81e2-a175071b0850"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160241182203`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c1657453-c1ac-4d4e-bb04-2030d3ccd619"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716024214115*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b6766c26-0e94-46a5-857f-245b7d0193d1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"izero\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160242863407`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"19cf1d66-2744-4f91-a6be-bec965841bf6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000030444191395255156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.673004166454519`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160349699993`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c7410554-58d5-4575-968a-ccb25101d41d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.734988003370955`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"9.261218264989847`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.851321520509628`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160350928926`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"bbcad05e-03b6-4c48-9bae-0a88d6afa557"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.000030443991234924633`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.872537813146719`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716035201248*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"363cc33b-a1f7-4a25-a1f3-3cbcc6b3b857"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716035326701*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"317449d0-6a61-4240-8992-9bd65e630c6a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.000030444191395255156`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.673004166454519`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716035456881*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4b5ef509-5965-45ae-8202-ac4e947b7afc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716035650724*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"198265e2-b4fe-44a4-b815-6f1df414341c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.734988003370955`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"9.261218264989847`*^-10\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.851321520509628`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91371603572407*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e3c54a32-7293-4b1b-8b85-6b082fedb54c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716035798587*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f0ae9177-a1f0-4fa4-8a37-a2e3f87223bc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.379790058455296`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.000030443991234924633`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.872537813146719`*^-9\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716035872575*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c5934749-ee9b-4bc7-836a-7e3ee3510289"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716035946538*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"27c67ae7-2675-4b36-8919-e33260ecf246"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716036020113*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2a09f1f0-d71b-48bc-be7b-5bc605ff2c46"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"izero\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716036091979*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"92d8d5f9-fb34-4fdd-96e0-b6e439eb51eb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716036181131*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2e301d7c-3e4a-4f3c-b679-d33932871180"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160362758408`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a60418d3-2b45-4e18-956a-bb2dc2167059"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "izero"}], "MessageName"], " ", ":", 
  "  ", "\<\"Integral and error estimates are 0 on all integration \
subregions. Try increasing the value of the MinRecursion option. If value of \
integral may be 0, specify a finite value for the AccuracyGoal \
option.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716036372964*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"68576f63-9277-47d5-a1a9-b36ba662bfc9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"izero\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137160364575653`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2e802233-48dc-458d-ab2a-b121841c2069"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"63.663316`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913068239347515*^9, 3.913416030076007*^9, 
  3.9137152184868813`*^9, 3.9137153181389236`*^9, 3.9137155615492487`*^9, 
  3.913715606604475*^9, 3.913715745717825*^9, 3.9137159136992407`*^9, 
  3.913716047337995*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"d5c63d61-f381-46f6-85ae-db3dfd950831"],

Cell[BoxData["\<\"check2.dat\"\>"], "Output",
 CellChangeTimes->{3.913068239347515*^9, 3.913416030076007*^9, 
  3.9137152184868813`*^9, 3.9137153181389236`*^9, 3.9137155615492487`*^9, 
  3.913715606604475*^9, 3.913715745717825*^9, 3.9137159136992407`*^9, 
  3.9137160474745007`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"0e07272b-882f-44dc-8188-906025f0da3e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Linear Helical ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["eV", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["eV", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "0ffe1d5e-f4f2-404b-a57b-583b0fdc22e3"],
 ")(Voltage probe)"
}], "Title",
 CellChangeTimes->{{3.9130688655880747`*^9, 
  3.9130689173249397`*^9}},ExpressionUUID->"59b342ff-d4ef-44e9-97d0-\
801387c29d4e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ae", "=", 
   RowBox[{"1.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "22"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"0.1", "*", "kb", "*", 
    RowBox[{"T", "/", "hb"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"kb", " ", "*", "T"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "ec", ")"}], "^", "2"}], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", "=", 
   RowBox[{"ec", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lp", "=", 
   RowBox[{"ec", "/", "h"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lh", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12uu", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12dd", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13uu", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13dd", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21uu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21dd", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23uu", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23dd", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31uu", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31dd", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32uu", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32dd", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33uu", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", " ", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33dd", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"2", "*", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]T", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"kb", "*", "\[Delta]T"}], ")"}], "2"], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Pi]", "*", "kb"}], 
       RowBox[{
        SqrtBox["3"], "ec"}]], ")"}], "2"], "T"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vg", "=", 
   RowBox[{"1.5", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "=", 
    RowBox[{"x1", "*", 
     RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"J1", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"G0", "*", "T1", "*", "T2", "*", "df"}], ",", 
      RowBox[{"{", 
       RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E2", "=", 
        RowBox[{"2", "ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E1", "=", 
        RowBox[{"ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"df", "=", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
           RowBox[{"(", "a", ")"}]}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
                RowBox[{"(", "a", ")"}]}], "]"}], "+", "1"}], ")"}], "^", 
            "2"}], " ", "a"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n0", "=", 
        RowBox[{"-", "\[Infinity]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n1", "=", "\[Infinity]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"G11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "-", "T11uu", "-", "T11dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L23", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T23uu"}], "-", "T23dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Gc", "=", 
        RowBox[{"G11", "-", 
         FractionBox[
          RowBox[{"G13", "*", 
           RowBox[{"(", "G31", ")"}]}], 
          RowBox[{"(", "G33", ")"}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LeT", "=", 
        RowBox[{"L11", "-", 
         FractionBox[
          RowBox[{"G13", "*", "L31"}], "G33"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LhV", "=", 
        RowBox[{"\[Pi]11", "-", 
         FractionBox[
          RowBox[{"\[Pi]13", "*", "G31"}], "G33"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LhT", "=", 
        RowBox[{"K11", "-", 
         FractionBox[
          RowBox[{"\[Pi]13", "*", "L31"}], "G33"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Sc", "=", 
        RowBox[{"LeT", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Pc", "=", 
        RowBox[{"LhV", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Kc", "=", 
        FractionBox[
         RowBox[{
          RowBox[{"LhT", "*", "Gc"}], "-", 
          RowBox[{"LhV", "*", "LeT"}]}], "Gc"]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"I1", "=", 
        RowBox[{
         RowBox[{"Gc", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LeT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         RowBox[{"LhV", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LhT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"P1", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]1", "=", 
        RowBox[{
         FractionBox[
          RowBox[{"V", "*", "I1"}], "J1"], "*", "100"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"], 
          RowBox[{"4", "*", "Gc"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        FractionBox[
         RowBox[{"T", 
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"]}], 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "Gc", "*", "LhT"}], "-", 
            RowBox[{"LeT", "*", "LhV"}]}], ")"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"T", "*", 
         FractionBox["LeT", "LhV"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        FractionBox[
         RowBox[{"LhV", "*", "LeT"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gc", "*", "LhT"}], "-", 
           RowBox[{"LeT", "*", "LhV"}]}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]m", "=", 
        FractionBox[
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Z", "=", 
        FractionBox[
         RowBox[{"Gc", "*", 
          SuperscriptBox["Sc", "2"], "*", "T"}], "Kc"]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Jq", "=", 
        RowBox[{"LhT", 
         RowBox[{"(", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"Gc", "*", "LhT"}], "-", 
             RowBox[{"LeT", "*", "LhV"}]}], 
            RowBox[{"Gc", "*", "LhT"}]]], ")"}], "\[Delta]T"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[Eta]", "r"], "=", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}], 
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Pm", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Gc", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["LhT", "LhV"], ")"}], "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"Gc", "*", "LhT"}], "-", 
                   RowBox[{"LeT", "*", "LhV"}]}], 
                  RowBox[{"Gc", "*", "LhT"}]]]}], ")"}], "2"]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"LeT", "*", "LhT"}], "LhV"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"Gc", "*", "LhT"}], "-", 
                  RowBox[{"LeT", "*", "LhV"}]}], 
                 RowBox[{"Gc", "*", "LhT"}]]]}], ")"}]}]}], ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", 
            RowBox[{"P", "/", "P0"}], ",", 
            RowBox[{"P1", "/", "P"}], ",", "\[Eta]1", ",", 
            RowBox[{"P1", "/", "P0"}], ",", "\[Eta]", ",", "\[Eta]m", ",", 
            RowBox[{"Pm", "/", "P0"}], ",", "Z", ",", 
            RowBox[{"Jq", "*", 
             RowBox[{"h", "/", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["kb", "2"], "*", "\[Theta]", "*", 
                "\[Delta]T"}], ")"}]}]}], ",", 
            SubscriptBox["\[Eta]", "r"]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", "0", ",", "0.035", ",", "0.0001"}], "}"}]}], "]"}], 
   ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check3.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.913068262153981*^9, 3.913068262549926*^9}, 
   3.913068660945182*^9, {3.913716109827599*^9, 3.913716194409174*^9}, {
   3.913716250935367*^9, 3.913716252017116*^9}, {3.9137167831626577`*^9, 
   3.913716785181755*^9}, {3.913716848127573*^9, 3.91371684832463*^9}, {
   3.913716904949345*^9, 3.913716905251424*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e7603db1-8f2c-4adc-8e53-98390ebb75b3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"27.705698`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9130682893767242`*^9, 3.913068701117988*^9, 
  3.913416126772944*^9, 3.913716231480935*^9, 3.9137163035385437`*^9, 
  3.9137168251998653`*^9, 3.913716891370825*^9, 3.913716953201685*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"31f100f6-a2c9-419d-86d5-6bf08dc7fd8b"],

Cell[BoxData["\<\"check3.dat\"\>"], "Output",
 CellChangeTimes->{3.9130682893767242`*^9, 3.913068701117988*^9, 
  3.913416126772944*^9, 3.913716231480935*^9, 3.9137163035385437`*^9, 
  3.9137168251998653`*^9, 3.913716891370825*^9, 3.9137169533188667`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"5c7ddc76-9ea1-4283-8e66-4d54c8427291"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Linear Helical ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["eV", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["eV", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "0c804d33-b0dd-4eff-a4ca-be124330e3a4"],
 ")(Voltage-temperature probe)"
}], "Title",
 CellChangeTimes->{{3.913068928899308*^9, 
  3.913068933441029*^9}},ExpressionUUID->"cf77c7a3-5abd-474b-bdc8-\
482ab3eb5628"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ae", "=", 
   RowBox[{"1.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "22"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"0.1", "*", "kb", "*", 
    RowBox[{"T", "/", "hb"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"kb", " ", "*", "T"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "ec", ")"}], "^", "2"}], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", "=", 
   RowBox[{"ec", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lp", "=", 
   RowBox[{"ec", "/", "h"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lh", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12uu", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12dd", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13uu", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13dd", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21uu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21dd", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23uu", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23dd", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31uu", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31dd", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32uu", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32dd", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33uu", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", " ", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33dd", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"2", "*", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]T", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"kb", "*", "\[Delta]T"}], ")"}], "2"], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Pi]", "*", "kb"}], 
       RowBox[{
        SqrtBox["3"], "ec"}]], ")"}], "2"], "T"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vg", "=", 
   RowBox[{"10.20", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "=", 
    RowBox[{"x1", "*", 
     RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"J1", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"G0", "*", "T1", "*", "T2", "*", "df"}], ",", 
      RowBox[{"{", 
       RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E2", "=", 
        RowBox[{"2", "ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E1", "=", 
        RowBox[{"ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"df", "=", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
           RowBox[{"(", "a", ")"}]}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
                RowBox[{"(", "a", ")"}]}], "]"}], "+", "1"}], ")"}], "^", 
            "2"}], " ", "a"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n0", "=", 
        RowBox[{"-", "\[Infinity]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n1", "=", "\[Infinity]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"G11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "-", "T11uu", "-", "T11dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L23", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T23uu"}], "-", "T23dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Gc", "=", 
        RowBox[{"G11", "+", 
         FractionBox[
          RowBox[{"G13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"L13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LeT", "=", 
        RowBox[{"L11", "+", 
         FractionBox[
          RowBox[{"G13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "K31"}], "-", 
             RowBox[{"L31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"L13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "K31"}], "-", 
             RowBox[{"L31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LhV", "=", 
        RowBox[{"\[Pi]11", "+", 
         FractionBox[
          RowBox[{"\[Pi]13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"K13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LhT", "=", 
        RowBox[{"K11", "+", 
         FractionBox[
          RowBox[{"\[Pi]13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "K31"}], "-", 
             RowBox[{"L31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"K13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "K31"}], "-", 
             RowBox[{"L31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sc", "=", 
        RowBox[{"LeT", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Pc", "=", 
        RowBox[{"LhV", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Kc", "=", 
        FractionBox[
         RowBox[{
          RowBox[{"LhT", "*", "Gc"}], "-", 
          RowBox[{"LhV", "*", "LeT"}]}], "Gc"]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"P", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"], 
          RowBox[{"4", "*", "Gc"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         RowBox[{"Gc", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LeT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         RowBox[{"LhV", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LhT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"P1", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]1", "=", 
        RowBox[{
         FractionBox[
          RowBox[{"V", "*", "I1"}], "J1"], "*", "100"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        FractionBox[
         RowBox[{"T", 
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"]}], 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "Gc", "*", "LhT"}], "-", 
            RowBox[{"LeT", "*", "LhV"}]}], ")"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"T", "*", 
         FractionBox["LeT", "LhV"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        FractionBox[
         RowBox[{"LhV", "*", "LeT"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gc", "*", "LhT"}], "-", 
           RowBox[{"LeT", "*", "LhV"}]}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]m", "=", 
        FractionBox[
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Z", "=", 
        FractionBox[
         RowBox[{"Gc", "*", 
          SuperscriptBox["Sc", "2"], "*", "T"}], "Kc"]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Jq", "=", 
        RowBox[{"LhT", 
         RowBox[{"(", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"Gc", "*", "LhT"}], "-", 
             RowBox[{"LeT", "*", "LhV"}]}], 
            RowBox[{"Gc", "*", "LhT"}]]], ")"}], "\[Delta]T"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[Eta]", "r"], "=", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}], 
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Pm", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Gc", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["LhT", "LhV"], ")"}], "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"Gc", "*", "LhT"}], "-", 
                   RowBox[{"LeT", "*", "LhV"}]}], 
                  RowBox[{"Gc", "*", "LhT"}]]]}], ")"}], "2"]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"LeT", "*", "LhT"}], "LhV"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"Gc", "*", "LhT"}], "-", 
                  RowBox[{"LeT", "*", "LhV"}]}], 
                 RowBox[{"Gc", "*", "LhT"}]]]}], ")"}]}]}], ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", 
            RowBox[{"P", "/", "P0"}], ",", 
            RowBox[{"P1", "/", "P"}], ",", "\[Eta]1", ",", 
            RowBox[{"P1", "/", "P0"}], ",", "\[Eta]", ",", "\[Eta]m", ",", 
            RowBox[{"Pm", "/", "P0"}], ",", "Z", ",", 
            RowBox[{"Jq", "*", 
             RowBox[{"h", "/", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["kb", "2"], "*", "\[Theta]", "*", 
                "\[Delta]T"}], ")"}]}]}], ",", 
            SubscriptBox["\[Eta]", "r"]}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", "0", ",", "0.238", ",", "0.001"}], "}"}]}], "]"}], 
   ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check4.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.913068312526883*^9, 3.9130683129303017`*^9}, {
   3.913716430742935*^9, 3.913716496117572*^9}, 3.913716529051011*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"7060e226-f1b0-4d41-a9d7-c337dfc834d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00007436933166220751`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2845060553145816`*^-7\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716567467709*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fc299821-a18f-484a-8882-a4708356ccd9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00007436933166220751`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2845060553145816`*^-7\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137165675351152`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0f514667-f880-4596-8b4f-fb8b788ba895"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.174390624389`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3799636644285695`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.675290486467001`*^-11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716567638384*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"39a1059b-8cb5-442a-a20e-e7c15844e078"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.174390624389`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3799636644285695`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.675290486467001`*^-11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137165676859293`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"802495b6-d78f-4248-be8a-dd971b6b24ff"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00007436913150187698`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2865013917814972`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716567736026*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"14a92e86-6f26-48bf-960c-8f14f009d33a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00007436913150187698`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2865013917814972`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137165677878933`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2d192eaf-5b1d-4dc0-b8f2-bc8d88a4af40"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716567843199*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"74d8d4a4-0bfe-42b1-baa1-a05b5ffbb399"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716567897462*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"dc37e312-eda9-4005-bfaf-34f99f941257"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00007436933166220751`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2845060553145816`*^-7\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137165706959667`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b96645e1-8bce-4882-b830-d12983974258"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00007436933166220751`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2845060553145816`*^-7\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716570786138*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"dcf06e58-82bd-4919-90b3-4d5f564cb2d5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.174390624389`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3799636644285695`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.675290486467001`*^-11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91371657084706*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"223d441a-faf3-42be-b284-5f9775418eb7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.174390624389`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3799636644285695`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.675290486467001`*^-11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137165709550247`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2e0c9d04-fb97-4fd1-ae7f-8f4c7d1b6c63"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00007436913150187698`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2865013917814972`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716571025313*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d0efab93-60df-4409-8b08-ce7b8f99f078"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00007436913150187698`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2865013917814972`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716571084907*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"75d55d5a-f6fa-45f9-9f48-2f3c5fafae1c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716571145773*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7280f40a-d066-47ea-a3e4-4ca89eacd8d0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716571203785*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"684d5d8f-a1d3-46e6-976b-998ffae08732"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00007436933166220751`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2845060553145816`*^-7\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716573783956*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0da6d3a9-b6dc-4bba-a350-76448a962299"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.174390624389`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3799636644285695`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.675290486467001`*^-11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716573867003*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1ef8a292-7112-4920-9e55-b0023227be20"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00007436913150187698`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2865013917814972`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716573956161*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2d3abf55-38ae-4193-a5b6-4154a07debc6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716574046352*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"7b07f1ac-8922-41d2-a0f8-20831b649fdf"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00007436933166220751`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2845060553145816`*^-7\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137165741551943`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b2a4911b-e9e0-40be-90ed-1530206b13af"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.174390624389`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3799636644285695`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.675290486467001`*^-11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716574250805*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7765ef70-39c0-40ee-941f-b8c853594156"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00007436913150187698`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2865013917814972`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716574350483*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7e1f5922-1d38-4512-925e-63ecddcf54ac"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716574435809*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"373102d9-6986-4974-924e-b65bb4f6fb8b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00007436933166220751`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2845060553145816`*^-7\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716577008912*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c9590a23-86c7-4588-b96f-8f26ad058c75"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.174390624389`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3799636644285695`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.675290486467001`*^-11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716577094056*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b0950e6c-c0ef-4edf-91f2-d2c32a0bfb9c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00007436913150187698`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2865013917814972`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716577188957*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e81f7517-5b6c-4526-a261-782f202f3530"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716577274382*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"211e730c-401e-439a-9e22-7bab5be0760f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00007436933166220751`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2845060553145816`*^-7\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137165773831997`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"37abfab9-8d90-48ef-9d8a-9dc00f75e3a6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.174390624389`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3799636644285695`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.675290486467001`*^-11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716577485709*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3026f64c-32d6-4f2d-b01a-207b835cc6ee"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00007436913150187698`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2865013917814972`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91371657757839*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"76ff1d92-ceab-44ad-873b-71d9a5c81f1c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716577670178*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f3d0bd30-9c14-4795-b8bb-b66044468f7c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00007436933166220751`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2845060553145816`*^-7\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716580621523*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5f5688d3-fb6e-47d6-a628-dcbafe1e79a3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.174390624389`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3799636644285695`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.675290486467001`*^-11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716580722974*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1e894d5b-5379-413f-9d20-b9a295057d5c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00007436913150187698`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2865013917814972`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137165808201113`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"3290f5f0-b076-4dc2-82a4-2be4f7be2375"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137165809143963`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"53baad43-e204-4442-b9b7-5449d8be1b2c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.00007436933166220751`\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2845060553145816`*^-7\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716580997864*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9116df2f-8671-4c7a-88a3-371d95a5081a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"20.174390624389`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"1.3799636644285695`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.675290486467001`*^-11\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716581083372*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"db0ca85a-f7a9-40b2-9332-e6e75e0907d6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"10.132360516401228`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00007436913150187698`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2865013917814972`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137165811663313`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5892c67f-3b92-4f21-8f5f-f6295e1d6f77"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913716581249423*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"96a403e6-a5e2-435d-b635-eeac4c009815"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21.826588`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9130683668490267`*^9, 3.913416189327286*^9, 
  3.913716584198221*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"ac5b5ead-c133-43e1-bb6d-f0b4ae418b00"],

Cell[BoxData["\<\"check4.dat\"\>"], "Output",
 CellChangeTimes->{3.9130683668490267`*^9, 3.913416189327286*^9, 
  3.913716584310536*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"3517f685-8573-4c8d-bd0f-6e9570c2eee9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check1.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check2.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check3.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data4", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check4.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"A1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data1", ",", "data2", ",", "data3", ",", "data4"}], "}"}], ",", 
    
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0", ",", "1.001"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.00"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "\"\<0.50\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.00", ",", "\"\<1.00\>\""}], "}"}]}], "}"}], ",", 
         "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.50", ",", "\"\<0.50\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\"\<1.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<P/\!\(\*SubscriptBox[\(P\), \(max\)]\)\>\"", ",", "45", ",", 
         "Bold", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\[Eta]/\!\(\*SubscriptBox[\(\[Eta]\), \(c\)]\)\>\"", ",", "45", 
         ",", "Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"\"\<Label\>\"", ",", "Black", ",", "Bold", ",", "45"}], 
      "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue", ",", 
         RowBox[{"AbsoluteDashing", "[", "7.5", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red", ",", 
         RowBox[{"AbsoluteDashing", "[", "15", "]"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", "\"\<(a)\>\"", "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", "Black", ",", "35"}], "]"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.913068385902939*^9, 3.913068433649514*^9}, 
   3.9130684709909*^9, {3.913068502936861*^9, 3.913068533575221*^9}, {
   3.913068994975108*^9, 3.9130690321060543`*^9}, {3.913716610334955*^9, 
   3.9137166186757307`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"33463118-f26d-4417-8683-a1b290c73d45"],

Cell[BoxData[
 TemplateBox[{
  "General", "obspkg", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"PlotLegends`\\\\\\\"\\\"}]\\) is now \
obsolete. The legacy version being loaded may conflict with current \
functionality. See the Compatibility Guide for updating information.\"", 2, 
   51, 1, 24963614795485461729, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913716838704959*^9, 3.913716896596195*^9, 
  3.913716959394329*^9},
 CellLabel->
  "During evaluation of \
In[47]:=",ExpressionUUID->"02af5c70-25e9-40c1-8000-4ce8bf9c85b2"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], LineBox[CompressedData["
1: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
KVPX70KcEE+KiLwKviPUzTJ8S/G//fkfvLg8Yg==
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], AbsoluteDashing[7.5], LineBox[CompressedData["
1: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
fwzyi4g=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1:eJxdlnk01Vsfxt1EKEOqW5kiuWUsKanoIVeGTOEqZIpKyRBFGlT0VhdlLkqZ
GySlzJIhUyLzMQ/nOOc48y/ci4vc97z/vnut79rrWd+11977j+/neZROBdid
XiEgIEDw63/7/y/N3EteKYtx+P1Jx2dt8Ysoib2+zpeZgfiO9i3a4rfhWnok
d/jwa4TX6FQ3J/6JRu+YYKmG96i0qh/ZKR4PZa8wztOxIoQunRS9ZpuML47n
q6SmymCp8Qe5ITEVr+BO9//nEyyupHpL9T0DUyJfx+V6De6Miphrimci44pa
RnBoHQxv2u7p0srG/HBemYB/Pa6+SJgJsc3FzEHNGys8GlHRc/CubNBLxCYX
cq9YNSP/r2J2deJrtDP3iXnrtuC5pY+yd/EbvNer6foi04qbAaUaIn1vsTvC
wjRloQ3xmkKr8uffwamRdJbc2w77w/3928ULER+x+4kNqQNTTWKP/pH/AJP0
qySf6k48rmw88E3rI46Wf/HRf9EF6Z2ljWkoQlaH+LGWqG7g9X/2+9sW4yjt
RKy0Xw9E5QcT4FkC47kc5Q1WvVAdd+6SCirFQ+Fp8S41El5l5s+RI8qgus7Q
2ly4D5IeQSs+JpbjV/lY6tWxPni5W01H5lTAfttYx5mSfnxTGGl0KK4Eeceu
deLRA5i2qr6p0vgJtWoRb/xcB6FUFys3S6rClGpv6n3NIQj4MtIaJz8j+DfV
UdfFIYiYego8nq+GiWL4FW7jMDrVzbI/3qmBz8Yen31xIwhpuVMqK16L0dXq
7w4eH0Vy4LtPkcm1yPkZcXRBdgysn7Ef2PJ1qOQMGQSPjkHmADfF/kUdEjgy
xvY246C3xQRUan2Bv6eZtEXBOFbr6+gql37BjEPIGoU1ZIgNZnOiUA/Fphzt
dh8y3jRnJEw31WOutPu2az0Z+hzWdmfbBoRsF/zZrEDBG6pRfm1/A55t0Mle
e4WCY0LeW1Q9G3EhwuvSvg4K7lpK3I5jNoLmlxR4YPsE/nZe6pi72ASh/obH
Mjcm8PQ8Q8J9oQntNXPMvs4JpJhEH2iMaIbRDrWzQSpUpOun2Wuu/goXCVdJ
VigVWvKdTkmJX7ElOI5y6CsVvttHLRdlWxDlWD8euJmG14IhGqdyWpBeNi96
y4eG0lLz+WaNb3BJ1XS7UEJD9lOR9zuLv6Fm/tTIXkE6PKw97B8ZtKKNlHJv
2JqOntdL5KWGVkTqtJ/0SKXjXck9Fy/rNpAlhF1rKXR8Sn9d/ZXUBqaPwf1/
1SZByxGR2OX+HalGl0dlgibxWtz8yKPJ7/iR8tZ9XdkkjGXFfZYC2jHtT1/N
XOLrhb+CTs234+mXLRNPDRnocrLR8TbsAPeRE009koEvEvZKj+90gMFIlE6t
Z+D5aTvBluYORJd/Pz+xkomA5U0DS2s6QRIR44n9zoS26cWsncc60UIySZOM
YGIhaJv7qeROnFWOuDz1mQlq4IJE8kAn8nifw94vMJFPKS9sku9Cit7SK8u9
LMxJ7zBd8OyC1i8HBBv9WdBhi7Rr8OfG3+zKfbmXLOxmKpi7s7rgIFGqZzvK
gu169eJ4rW7Q7GbXea5nw2aaI10f1A35X3VlbMzZKLy29dRsSTeWj4cclbnB
Rqnk/awdi924t6n0Zd07NqbO9nc7owflx+e1zMhsmES3/h0T2YOkDQfIeWs5
SKqRFalu6sFGu+ufWYYcdN26Jja1uhfG4tWNqwI4eOqTvrTVthcbTVcs/JLG
gaHq/lGHpF4k/GtyYqCJg/1h8wV3+3tRqhtFfjDNgcTKaP8yORL+w/mevEWO
iydOaXIsDxIWFddffvg7F9nDvWWyuSTI9DjdHPTlovX96GErJglkoYwiwQQu
Ol+6VIRr9uFYCX29WCkXwlqEwvuLfThH08zgDnIhrrs/kFzcB7XEy44FP7mo
Vu57K73Qh6Tqqn2WW3jYX+LVZ3yoHznnhX9vAg+iUyGcSxH9cE+yubbFnYcL
K19wchv7UaefOuJwg4fEPZF9JLEBtHlNnD/7hIfB6mf5q2wGcFtUS/l4CQ8C
9bd99RIHMKoZJrytkweVrWXrzvUNgNxRv/47i4cSz8acVNlBxE1LWf8hSEAk
QUuhxX0QtATXD+UyBLLUAm4uZA+CWphntLiLgCVrRbMaYxAxNvOLm48QuFnk
MeesMYQh3yPkDc4ErvktrokOHEK3cPIU7wKBDz1GIpVFQ7ikSNXIDSfwwPU5
gzU/hKoynUS9WALBwqFvZQyG8b49ctvr5wRmNTUdLW4Pw+J0z/hsPgHBM/KU
sIZhPAhTaVaqIPCbSbrta1E+19aEDqo28u/bK5TZbzWC1QpfN0p2Eog0Suta
lTACswLZW52DBE6PvqHqkkagWeW/7uIEgcGPl0mnZUZRaVHXyWURMPLc+zLJ
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
n4Y=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"\[Eta]/\\!\\(\\*SubscriptBox[\\(\[Eta]\\), \\(c\\)]\\)\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"P/\\!\\(\\*SubscriptBox[\\(P\\), \\(max\\)]\\)\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
       FormBox["\"0.50\"", TraditionalForm]}, {1., 
       FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{0.5, 
       FormBox["\"0.50\"", TraditionalForm]}, {0, 
       FormBox["\"0.0\"", TraditionalForm]}, {1, 
       FormBox["\"1.00\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive["Label", 
    GrayLevel[0], Bold, 45],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->Directive[Bold, 
    GrayLevel[0], 35],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 1.001}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.913068437663886*^9, 3.913068472714039*^9, 3.913068534623885*^9, 
   3.9130687094425917`*^9, {3.9130689837671013`*^9, 3.913069032789279*^9}, 
   3.913416213139537*^9, 3.913591794480846*^9, 3.913715928371594*^9, 
   3.913716074573287*^9, 3.913716241277215*^9, 3.913716308998683*^9, 
   3.91371641932864*^9, {3.913716590179996*^9, 3.913716619701763*^9}, 
   3.91371683936304*^9, 3.913716897239747*^9, 3.913716960106661*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"a83f42ab-a02a-4f9c-9ec9-a2930d5e06b2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Non-linear chiral ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["eV", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["eV", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "8627be2b-19d7-4511-b46c-15d01f2c951e"],
 ")(Voltage probe)"
}], "Title",
 CellChangeTimes->{{3.9130691158264847`*^9, 
  3.9130691423491983`*^9}},ExpressionUUID->"04cbdae3-46b2-4977-874f-\
2e214fdbdb7c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T31", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{"-", "V"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V2"}]}], 
       RowBox[{"kb", "*", "T2"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V1"}]}], 
       RowBox[{"kb", "*", "T1"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V3"}]}], 
       RowBox[{"kb", "*", "T3"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T3", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"2", "Vg"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E1", "=", "Vg"}], ";", "\[IndentingNewLine]", 
       RowBox[{"E2", "=", 
        RowBox[{"2", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I3", "[", 
         RowBox[{"V3_", "?", "NumericQ"}], "]"}], ":=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T31", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T32", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<GaussKronrodRule\>\""}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"I4", "=", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"I3", "[", "V3", "]"}], "==", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"V3", ",", "Vg"}], "}"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"V3", "=", 
        RowBox[{"V3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T12", 
              RowBox[{"(", 
               RowBox[{"f1", "-", "f2"}], ")"}]}], "+", 
             RowBox[{"T13", 
              RowBox[{"(", 
               RowBox[{"f1", "-", "f3"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"G", "+", "V"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T12", 
               RowBox[{"(", 
                RowBox[{"f1", "-", "f2"}], ")"}]}], "+", 
              RowBox[{"T13", 
               RowBox[{"(", 
                RowBox[{"f1", "-", "f3"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        FractionBox["P", "J1"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"Vg", ",", "V3", ",", 
            RowBox[{"P", "/", 
             RowBox[{"(", "0.316493", ")"}]}], ",", 
            RowBox[{"2", "*", "\[Eta]"}]}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Vg", ",", "0", ",", "10", ",", "0.01"}], "}"}]}], "]"}], ";"}],
   "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check11.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9130691521278343`*^9, 3.913069189975643*^9}, {
  3.9130692264759808`*^9, 3.9130692766006527`*^9}, {3.9130693929075413`*^9, 
  3.913069395590561*^9}, {3.913069517676531*^9, 3.913069518220875*^9}, {
  3.913069618248962*^9, 3.913069642305809*^9}, {3.913069759903563*^9, 
  3.913069787489629*^9}, {3.913414623050009*^9, 3.913414628008217*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b4d4069a-8829-4ffa-88d0-e51367f34139"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135865789997053`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8b7bb6b1-57de-48db-bfed-848d1fe270ab"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586579090363*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3b6bb7d0-016c-472b-a804-9e8be1cfbd0b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.0790799597502083`*^-14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.0677276936101964`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586579250626*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"fa49471d-a644-4f1b-93bb-9abc8c43bf9c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.018533757646717`*^-12\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"5.759979732857716`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135865793343267`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4c217b03-79fb-46e9-946a-85a31e0a52fb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586579416122*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0457d648-16cd-4c27-953f-a4af379787f2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135865795001173`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"24aff8ff-2a68-44d0-b446-00ce2a425c42"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.0790799597502083`*^-14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.0677276936101964`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586579587351*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"7057492a-77ab-4824-9352-9896babe23e5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.018533757646717`*^-12\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"5.759979732857716`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586579655052*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6b0d9694-a811-4362-b037-0398d2806fe6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586579716228*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8665f341-060e-4c75-9dc4-fe1ee0ec6cd4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586579779216*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c77a10f1-d357-41b4-89e9-153d9b63d101"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586579836813*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a0e8f4a9-769e-416c-b075-7310f02a294f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586579896524*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f7cf9af8-ff0a-4ed6-8178-c9807a8d925a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"3.252606517456513`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.979446333402074`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586579953184*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2f75b546-038d-49d8-adde-24dbaca6c59e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"7.15573433840433`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.897897268971806`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135865800124207`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4dc47b10-0886-4245-bc40-97925ee21446"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586580067004*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e68d398e-d3f8-4fc4-97c5-064a72982e92"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358658013719*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"356f9a6e-ad6c-42d1-b688-0c5c631c6d1c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866112500973`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"df6305c4-7978-4502-aba6-f7adc7b27cea"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.280348219280137`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.3873390149307143`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586611403749*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8f59ea2e-0918-4ee0-b877-5f332f72df01"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866115252237`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d5078681-53ef-4b8f-b02a-3e222941741c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.280348219280137`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.3873390149307143`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586611628066*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4a9dd551-a2bc-4d7d-aa32-94d9b2a6d755"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586611870132*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1e004088-4266-47ba-b342-82e725dffd9d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866119675493`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"142e3cf5-7d32-42ae-bf88-36e82f95f446"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.0010716134398763`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.4508407771706493`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586612069132*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e423e607-3b33-4b21-982d-455938ab8daa"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586612169825*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"29156e93-9fe6-43c7-bd4a-0bb8c01b5d95"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586616089138*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d0c8d491-417e-4506-b6c3-1b6f89e85433"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.6017070282642365`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.58054329965166`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586616226508*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6496bce4-eec4-4c57-8913-5f932ce231b2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586616329565*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"04670668-bb96-4b33-95c7-80f6f89328a5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.6017070282642365`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.58054329965166`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586616481387*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"455f2c10-798b-40c3-87da-0e32bd233312"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866165833883`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9919783f-d17c-4283-b950-49248b6a1eba"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586616702261*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"442c72f7-face-4593-8137-b9e1ee004cbb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.4760467114137708`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"6.073840887892464`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586616776992*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a033a2e6-2531-4ad0-ba15-0f9a353662da"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586616865223*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"aee20cf8-5512-4703-afb5-66cb90bb7143"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586647929185*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b6148a56-35ff-4f38-a2f7-ff026b8c61d7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.691531893195265`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.5692234683036816`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586648078965*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5dc318b8-4b5d-4821-9093-5f6d45299db0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586648185334*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9bc88b70-11f3-4593-97c2-b39c8ccd8787"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.691531893195265`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.5692234683036816`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586648292651*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"385a4985-9e6c-409a-9d42-7162e9b98df4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586648415195*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d4d40030-de8d-405b-8d2d-0943d89b43b7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866485159273`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"05ad6eb4-5b0e-44e2-bdc8-eec676236d5d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.2349740370967699`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.9043422517662817`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586648613092*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d30dc24c-6250-417b-b172-e8a0440f1129"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586648711228*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6c0d9fa9-f836-4267-80c1-401d2e655063"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866547279177`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"47e6ab4a-66cb-47ba-b37f-29f82a6b6ea2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.504860026677271`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.1183619571634548`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866548413258`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6914b490-b0b4-46c1-be8e-74d01e64a7bc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866549427443`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"cb834396-0323-49a4-855f-1ea2db91609e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.504860026677271`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.1183619571634548`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586655038382*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e4b34f8b-e0d3-4c55-9443-ff4cd464d50d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866553706913`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a37295bb-8452-4110-983a-08c01696f6e6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586655491481*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"81848180-9b8b-4850-9561-a00939e43fb8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.053575067437034`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.0440828921496321`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586655597651*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ab5aac07-b507-4bcc-99e4-c9437ab45d79"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866556993732`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ecaab8dd-458d-44f5-ba09-57fdbfce1250"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586684871574*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8f3aad60-ade3-426f-8712-250bb82937c1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.537710709973884`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"4.2864528085487917`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358668507021*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8b27e79a-7e8a-4959-91e3-63d4a80390c5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586685146393*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4d79f557-f60c-40ee-8586-563938594cf6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.537710709973884`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"4.2864528085487917`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586685323097*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e2459064-51dd-4f1d-8cf2-6c5d5786ee33"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866856987743`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"02c63dd5-afc5-431b-ab54-aafacd2bbecf"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586685791518*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"26b66e8e-3e85-474f-b669-76621e13f87b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.7293024651143796`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.119165957118759`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586685872818*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4e6decb1-7f88-4312-84a0-bb86d5e5f48f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586685952517*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0ba86a0c-e225-40a9-b553-21dec2a43e80"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586692715329*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"43a024c3-da73-4f25-b4bc-41f81b2445fa"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.6270444125571042`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.6353576190403972`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586692888413*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ccdb8925-45de-4e22-b591-bd6b43717a2e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866933495293`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4501bc7d-b53e-4965-b200-9a2bbcb71fc3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.786293820930939`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.7106147504165681`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586693543502*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c07d906d-bb6c-4178-8b8a-0ccc5451af7d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866939438562`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"42aa6597-6dad-4d66-aba6-a719d00c39a1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135866940539217`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4244b40a-9e20-4e11-bf49-354b6e64957d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.1458803661024715`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.7150536862792634`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586694155648*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"bb7b5c28-f14a-4133-9253-37d3d0ae8219"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358669426877*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7a981d76-8a5f-465e-9b9d-067ce604fdf7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586724677559*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"529d03c6-5106-4973-840d-4787505c5f6f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.057231270643882`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"9.921707273802843`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135867248413754`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a9a20ad5-ed47-4e8f-b9a5-c83826fb7bbb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586725244626*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"998b0c8f-001f-491b-9d2e-08e0f9d029d5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"5.505714157152952`*^-21\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.938698088817201`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586725429325*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4e604e87-7d90-4cb2-a46d-ec4298049ebd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586725779449*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6756906e-04f4-4482-a96e-1c0e7a300c4d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586725870286*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2c7f9be8-8ab5-4061-807d-ed6ad7a2ddf5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.786738396466648`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"9.249102926258615`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586725970475*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"737a87b9-3e51-473f-9550-5fefc663c8c6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586726060575*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ba803974-68b8-4a4b-b464-a4ec2ca0b728"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586733871592*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c97f309c-4117-4d60-954a-09b7134a0c40"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"5.3257196558614134`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"4.8915652114995186`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586734068685*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ab398725-3a13-48c9-8ff2-edc67fea2d6d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358673458532*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"0b7c4a44-aa95-4fa1-b203-44af25fa64b5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.575093253061506`*^-20\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.6224514976765246`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586734799477*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c9a3fcd6-4cc2-49f7-8a26-16473b2b3506"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135867351753397`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8e8a328c-abfa-436c-b191-07b67e1c9bd9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586735284239*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"55ee21ec-0a1f-4b47-9217-7b77f8207875"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"8.84090638696676`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"4.664352556964045`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358673537893*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9a229687-741f-454b-8172-11c86fd2c4e1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135867354636517`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7a4df777-179c-4f41-8fa3-8d2529e4be73"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586769019841*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"56e41b5f-3dbf-43fb-bb41-22a8fea679ae"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"5.3932175938457404`*^-21\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.4230830744890084`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586769164019*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f64847a2-9f34-45da-9a7f-c186cb71ab57"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135867695804462`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e43e6ec6-1253-4107-8e48-c0521c8d842e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.1504614415460717`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.5580642715164805`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586769686969*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"bddaef7f-9e91-44c0-997b-ad69527c4cfd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586769793825*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6f90db54-ae2d-48e5-9b26-974bee3fafb2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586769875585*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"7a0a52fb-c818-4e70-9230-6b91ce85edf7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.7851784830426546`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.7955894514567453`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586770424231*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d25e7757-16fe-4a60-a71e-57e1294bca64"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586770508835*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"75b03b2e-16e1-4ea9-a8bf-a7b401f4b133"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135867788684397`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b1c8ebd9-9ba4-4496-a54a-8f6241e4e4ef"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586779344409*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f1732914-1959-4363-baf3-317e78063935"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586779425267*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"25c497c5-be4c-4a31-acca-def65b4cccef"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586779516094*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"861e86e1-c32e-4efc-8624-96b489222089"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135868078492193`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3cecb013-e438-468d-aeb4-3f8ff1af97db"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586807938733*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2263dbfd-896c-4eff-a5e6-e440a6cc2c5f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586808192843*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e9f1dfb6-f467-4743-ab39-702fb758af3d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586808263019*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"58bce6bc-fe40-47f5-9cce-f53787504098"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586809047851*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"aed36fab-f54b-45c2-8de4-dc80f23938b1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358680911805*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e9f4ae6d-ac29-4fb4-834e-16552319a7fe"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586809273197*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"88e57b92-1720-4a1b-8629-c72296a91870"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586809355172*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"078b0e2b-756e-47f0-82f7-9ee758b0ef77"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586838110093*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"afa11737-0d88-45f0-8aa2-62d839a02455"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135868381975183`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"219377d4-95e8-4d3f-989c-677b5779c8da"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586838717371*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c357057d-e19d-49a9-9201-f0d08e1437c8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135868388005953`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f665ba7b-8f5e-414e-8f12-d525e2fd451e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586838906425*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ee176387-36ec-4605-b5e8-39977de47e68"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586839002383*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"27ebf8be-91a6-4a18-8296-bbc83e0df285"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586839457253*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9276637b-8588-49c1-b392-9cebef37fb1b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586839534951*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"027e452e-8bf9-4084-9a94-b1992d34e536"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"295.908223`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.91306945395231*^9, 3.913069581032835*^9, 
  3.913069725955802*^9, 3.913069882855474*^9, 3.913414746476842*^9, 
  3.913586868953225*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"0b63e70a-7504-46bd-afa0-86526ff29ab8"],

Cell[BoxData["\<\"check11.dat\"\>"], "Output",
 CellChangeTimes->{3.91306945395231*^9, 3.913069581032835*^9, 
  3.913069725955802*^9, 3.913069882855474*^9, 3.913414746476842*^9, 
  3.913586869066592*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"cac04937-284c-49e2-91aa-e009b16c5075"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Non-linear chiral ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["eV", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["eV", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "2c72bc25-8867-44a9-9d70-52631ab9b18b"],
 ")(Voltage-temperature probe)"
}], "Title",
 CellChangeTimes->{{3.9134154246582623`*^9, 
  3.91341543012258*^9}},ExpressionUUID->"a85ae2e3-6212-43a2-a223-\
9e16b290e8a1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T31", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{"-", "V"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V2"}]}], 
       RowBox[{"kb", "*", "T2"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V1"}]}], 
       RowBox[{"kb", "*", "T1"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V3"}]}], 
       RowBox[{"kb", "*", "T3"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"2", "Vg"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E1", "=", "Vg"}], ";", "\[IndentingNewLine]", 
       RowBox[{"E2", "=", 
        RowBox[{"2", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I3", "[", 
         RowBox[{
          RowBox[{"V3_", "?", "NumericQ"}], ",", 
          RowBox[{"T3_", "?", "NumericQ"}]}], "]"}], ":=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T31", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T32", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"J3", "[", 
         RowBox[{
          RowBox[{"V3_", "?", "NumericQ"}], ",", 
          RowBox[{"T3_", "?", "NumericQ"}]}], "]"}], ":=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "G", ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T31", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
              RowBox[{"T32", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GlobalAdaptive\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"I4", "=", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"I3", "[", 
              RowBox[{"V3", ",", "T3"}], "]"}], "==", "0"}], ",", 
            RowBox[{
             RowBox[{"J3", "[", 
              RowBox[{"V3", ",", "T3"}], "]"}], "==", "0"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"V3", ",", "Vg"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"T3", ",", 
              RowBox[{"2", "*", "T2"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"AccuracyGoal", "->", "4"}], ",", 
          RowBox[{"PrecisionGoal", "->", "4"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"V3", "=", 
        RowBox[{"V3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"T3", "=", 
        RowBox[{"T3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T12", 
              RowBox[{"(", 
               RowBox[{"f1", "-", "f2"}], ")"}]}], "+", 
             RowBox[{"T13", 
              RowBox[{"(", 
               RowBox[{"f1", "-", "f3"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"G", "+", "V"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T12", 
               RowBox[{"(", 
                RowBox[{"f1", "-", "f2"}], ")"}]}], "+", 
              RowBox[{"T13", 
               RowBox[{"(", 
                RowBox[{"f1", "-", "f3"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        FractionBox["P", "J1"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"Vg", ",", "V3", ",", "T3", ",", 
            RowBox[{"P", "/", 
             RowBox[{"(", "0.316493", ")"}]}], ",", 
            RowBox[{"2", "*", "\[Eta]"}]}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Vg", ",", "0", ",", "10", ",", "0.01"}], "}"}]}], "]"}], ";"}],
   "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check12.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.913069950371293*^9, 3.913070016529582*^9}, {
   3.9130702908817873`*^9, 3.9130702917167*^9}, {3.913070808165883*^9, 
   3.913070821739456*^9}, {3.913071115534836*^9, 3.913071117439808*^9}, {
   3.913072595929729*^9, 3.913072612492326*^9}, {3.913072888451008*^9, 
   3.913072891097691*^9}, {3.913073150411524*^9, 3.913073177541939*^9}, {
   3.913073880942659*^9, 3.913073897857039*^9}, {3.9130740194213057`*^9, 
   3.913074019927391*^9}, {3.91307425858379*^9, 3.91307425924341*^9}, {
   3.913074452612687*^9, 3.913074470868535*^9}, {3.913074846302146*^9, 
   3.913074846499937*^9}, {3.913414651380418*^9, 3.913414656713463*^9}, 
   3.9134148488807898`*^9, {3.913503254665374*^9, 3.9135032584131117`*^9}, 
   3.913586924875654*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"6b35f932-2c98-46d8-b50d-10e4854d0872"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135869473154917`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"23548355-424e-45a4-8587-cde7f02a4e61"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"4.052523257019793`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.194332951900663`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586947559381*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7f59710b-f186-47cc-90dc-e1900fddf849"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135869477004223`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8cc8499a-2c1b-4683-8652-dc846bda9938"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"4.052523257019793`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.194332951900663`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586947836277*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a75ae0c0-6b90-4d06-835d-85cf8fdcf3dd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586947979216*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d1f14e8f-49de-4205-ab19-0582da0c1f75"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586948060995*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6ede4080-9274-4944-a897-f46062efe82d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135869481496487`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"533b978a-32af-45a8-9f89-60ff79b460a4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"9.342241749841813`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"7.807947652548611`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586948239729*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8b5e2122-8af4-4304-87a4-0d05b48284aa"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.7674718912715274`*^-13\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9765882571890787`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358694832837*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"661a3137-849c-4395-9d8a-4003685e2e34"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586948407846*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0ac2eb88-9623-427d-b7eb-7b74b916256a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135869484755907`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"177e86ef-9724-41d3-aae2-e079995ad071"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.519560341333482`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.945174881161651`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586948533698*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1ca81b08-9f45-4045-a571-6bc1b7e53e85"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586950016509*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"81185288-f7d5-476f-9e8a-1cd483284fc4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586950080613*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2a0ebf4c-9bae-487e-a7a6-68da333d8f6a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.503889000444017`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"5.797885742799592`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586950158762*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d9f44611-c929-446b-b550-a1a498d2d555"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358695022738*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8c214d5e-e343-4434-a3c6-f19869d4b816"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586998352537*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d4315901-4a31-44bb-8ff3-b96540af0794"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"7.703601917305018`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.237206040239482`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358699846106*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ceb2c506-f9ab-4198-b1b2-35e0ee40a8d2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586998560008*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3eea097b-46e0-463b-82e8-26310e1c9d44"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.1671974766848621`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.6843226826312476`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586998651887*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f5aaf5fc-e321-4c73-b21c-b6fff527835b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586999455256*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"1c9d3152-604b-4acf-9d15-3661e70ffc8c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586999550953*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4d00a1aa-c075-4363-987d-ddc2c784e2ff"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.6538203899016593`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.218088870995365`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586999646697*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"81c9a4fa-fc23-46cb-8d62-bb50f9cec172"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586999738908*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"10c437d8-2c46-4344-8fca-e5655b9feb13"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135870104356337`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"23d52d10-410b-4854-8500-7314c5042d8d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.909078233968063`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.633356171566254`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587010556612*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1a79ba20-26cc-46c0-b581-566ea5f921ae"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587010666699*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"34473c55-eafe-4b31-8192-8227fb71da66"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.2736404577240124`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.654426957746768`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587010745349*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"7c3ccba0-b708-46d5-b046-3612565414c8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587011813161*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8a71e051-51e7-4cb1-9236-6c426c440b66"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135870119137793`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"478bd31f-8785-4c1b-9e7f-484dd8524fe9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.2667424118459603`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.507358281333985`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135870120107727`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c84058e5-36e3-4316-9410-200ac6eab9b8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587012094984*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"decb7126-050c-4d92-9408-527eac18ac16"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358706951967*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"588c54b6-732b-4adb-9d95-829cc0261573"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.0854357535166454`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.1660525360785605`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587069670095*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4a407482-0b0d-4e83-a963-bd80c0a2ae27"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587069786448*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"14d41f7b-fc3f-4f5d-81c4-093a2a58de41"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.196455400985305`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2194088652182068`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135870698974*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"54a422b3-fee1-4508-a300-b0a2fecff7e7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135870711431932`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"81159c16-f622-4ebd-80b7-6a9b21e8cfc7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135870712286654`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8dcb6c8d-a067-4710-ab4d-59648c9f16e3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.260196620160838`*^-13\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2925550844114456`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135870713360567`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"23d2bd01-4e27-4209-85b1-446c157ca9eb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587071419568*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"44439c6b-169b-44c5-9d9f-d0ed955e3a6c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587097186893*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d0620e25-8867-48fc-af18-91ff9aeadadd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"8.575271708286394`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.1307117374380907`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135870972912197`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"79b77052-1d36-483b-8322-d9d101ac6cdb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587097414331*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ce29ee04-5b55-4cd5-9f58-7e2e51f75f1c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"9.356631841054801`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"5.9269351579984935`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135870975118713`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"32601b91-cc38-402f-b158-598d95d755d0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587098842149*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1922320c-a227-4cdb-9222-16198d6b4688"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587098952335*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f5869e87-21f0-4d75-9aa0-461f0f53e23b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.7542815222842213`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.023834956344487`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587099067834*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e0ea9f18-7456-4b01-a1af-d3ee8d8f760b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587099161615*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5b81b822-ef70-48b3-81c0-9b8e0ec4452e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587171702939*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7b7c271c-1eb7-4eca-a325-36476025ed8d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.513280578924551`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.105647145889824`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135871718655567`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"541aa145-e13e-4d7b-ae70-bdf2af5762dd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135871719810467`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"10238ce8-f781-40a8-96f3-c6556221bce6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.8341123679230706`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.1521464020867914`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587172076435*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a12d8ad5-91c7-44c8-a5fd-6eb49405ecaf"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587173419558*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"adf07126-90bb-4f1e-a4a2-11991175b1f9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587173511758*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f5611a86-8506-4e6b-a419-8872483cac40"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.591798673145966`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.0219237793188827`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587173609131*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9e3c7fdc-0e8e-4b12-8ad2-ee3f62eb4a73"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587173702024*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"db135527-9be7-4338-b3e0-7018e3a04084"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587201445043*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"448422b6-5688-49c1-9457-1e3e67523987"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.3254941209175895`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.5462714602955498`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587201558877*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0f20f1f9-049e-4241-baeb-dbdaa6138498"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135872016692753`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5c9561a4-0233-4188-aee7-dbf76005ccc5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.4663044568308917`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.1263674555391984`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587201758079*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a66a78e3-c420-47eb-a0a7-58f78149fc6c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587203632868*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0f719cd5-fbb1-4452-b780-1809cf0690dc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587203703726*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"afa00ba0-9904-42dc-a2c8-7f961b61f120"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.229404382238205`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.5228928241832285`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135872038260927`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"bce81b79-8954-4d3b-aadc-4d2d33868f74"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587203903616*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"55444ff0-af8e-4a00-9303-f45a9ab71d45"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587286659073*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"46ff758d-7eeb-40cb-b899-e8b11a7f8e6e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358728677392*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7046b945-322f-4ad8-b19b-bf0ac63a109d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.0325482847348043`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.3676660451309205`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587286894679*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"877c58c9-dd22-45c3-be5d-2b53f7b5d79b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587288703981*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ec9edae0-b88c-420a-8abb-38241e695fd9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587288805921*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c5e1df50-1a5a-4ee7-986a-3dffcf7467e2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.1163975857777755`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.4656138816873407`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587288889044*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4cdd1c44-81a9-4b80-9a36-7c86feb5ca97"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.574854762356408`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"7.691835654457856`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587290965601*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ed026fea-82bb-4c2a-9db2-14fcf75717b0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135872910852737`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a3a18b1a-f3fb-4997-86ef-1ead2d191f57"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587337080579*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"fa6a8dee-97be-42cf-a942-c680a3633d31"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.729080868835587`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.1114327088932826`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587337211369*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"52257903-0e4c-4720-96de-4116a4ccbd7b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587337312114*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"7c91af29-afd3-4ccb-a3fc-fe4ffc64c74f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.616474218224858`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.448662845992634`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587337404593*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"246bf145-728a-4eb8-a3ee-0a6300813a3f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358733944735*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a4a32790-f25f-432d-bdf8-1e320d60d22e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587339552327*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"89e353a4-0ec7-4d5f-a758-c1b6b2ec4058"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"8.112201993598329`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.164289494022232`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135873396732407`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b47987d4-6dd4-4df7-9fde-fe64bc9d3fbf"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135873397944393`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"fc755048-0686-4b11-8d4e-165cf6e684f4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587385988777*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"81182d37-ff90-4ccc-a72f-462017ca3301"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.88176176927505`*^-14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.318499287419529`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135873861769047`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d0c37e34-b2cf-4cef-82e4-f49a418e8009"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587386285866*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3e4ee9a0-8474-40d6-a8af-45597eac2e29"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.5717911346081762`*^-13\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9523419239637032`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135873863887978`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ea11bd3c-d6bf-4b6e-8da3-7f8f6dad92fa"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587388345941*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2401c213-92be-490f-8aca-8c9ad33bf220"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587388443928*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9e407dab-caf1-4890-917e-9fab9ea97f24"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587434218617*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"64132ee0-4486-4a31-b9c6-d002a059b8c1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135874343336573`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2d80579d-f9c3-4fcb-9598-94cce6aadc33"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.5451071044644394`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.4946806608283433`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135874344691963`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fb3f8ba4-88c0-44be-9441-941c268a8f0f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.0334606237395425`*^-14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.423244465849953`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587434543108*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a3acaa36-2318-4457-aa00-4dea3cfa7b36"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135874346184797`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ecce2d6c-25b8-4e2a-a053-c581006d78fb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135874368166523`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"64a3c562-8737-4cea-8958-5c1d3fcb349d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587436907579*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5fcb1ca4-076f-4b2b-997c-49e145e7c81e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.6310427719374486`*^-14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.62076214531001`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587436987548*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"939de0f9-db4d-4ce9-a60a-207d3acd045e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.375144481301244`*^-14\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.7862719726440006`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587439379066*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"dcf79727-466e-4b77-a540-7f96e06ed5ea"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587439452203*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b54a48eb-0f53-4bff-8c11-6413af538ee4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587522856498*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"0cb8a800-96ba-47f3-a7ff-40686d4c045c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.1353057400620518`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.4509094018997777`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135875229590063`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6f1196ca-b71f-4823-b078-20e2ca3bc326"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587525452916*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2c1ecba0-4570-4882-bbd8-8bff68a57baa"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135875278253393`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4a749095-f6d8-4cd4-9e6d-6defe5190267"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587527928494*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"71b735c6-80bc-4f76-bb34-81bb767c1bb5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.87123107927675`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.239390804384841`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587528041691*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4d39e12c-c199-4fc3-88e2-eec242f2f2de"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.752775427354353`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.9280733548120776`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587532668581*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"63a0fb14-db7b-4171-ae13-bfe09e332212"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587532742406*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"265b8b7f-0c35-4c41-abe9-57adf9b2b28e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135875758391857`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f439c32d-0484-40ab-affd-87aee8a94228"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.7754249111835109`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2613271261816338`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587575992917*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"78b9af4c-f533-4b5c-9162-616c55065143"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587590114246*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"62567bc0-cfb8-42bf-9654-5b24dd292502"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.2586008772085187`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.1827415045561948`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587590268046*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f1b62bbc-31f0-48d7-ad62-21dc8ad27ae2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587597745285*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a30a6b5e-98b2-41b2-8817-1cadc85c3904"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358759781699*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"3d6c2bc2-d337-4015-a505-d900fbdea969"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.785342483784956`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.1722619216396542`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135876075040817`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"424d32fc-cc0f-4052-99c4-a14a6b99f626"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587607587574*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ac3a8158-90db-4f21-97d6-ad0497356c53"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358771920578*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"134bbce4-6b1a-46b4-b076-f2d1d5cd7c65"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135877193127327`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d35c97fb-e1f4-4c09-964c-42a999a2177d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587719432913*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"70811f26-2c10-4405-9c30-f364d1db1129"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135877195449753`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"bcdec1ae-ee07-4294-83f1-ec2ca5b167be"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587732509164*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6f1af06d-5f3d-4803-8d6d-7129d8368567"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358773260774*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ac13420a-1f10-4365-8604-b214eb7daa5e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587732721467*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"be293b76-e233-42c6-9f63-5860745fcf70"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135877328305283`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"88825c02-c0a4-4013-8412-7d5bca3e1ad6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"950.273839`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913415396280675*^9, 3.913504069713902*^9, 
  3.9135878917362556`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"0ae4de7f-9778-4d69-94e3-d95baecf1544"],

Cell[BoxData["\<\"check12.dat\"\>"], "Output",
 CellChangeTimes->{3.913415396280675*^9, 3.913504069713902*^9, 
  3.913587891902678*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"278caa5b-5e9d-46fa-bed9-2f9b68a2a9e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Non-linear helical ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["eV", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["eV", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "ba91e94e-b6a7-4c7e-b00c-7dab3d1cf595"],
 ")(Voltage probe)"
}], "Title",
 CellChangeTimes->{{3.913415442237413*^9, 
  3.913415451963849*^9}},ExpressionUUID->"a6eb0f11-a253-41d5-85fc-\
0021bafb9648"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T31u", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31d", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32u", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32d", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12u", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12d", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13u", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13d", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31", "=", 
   RowBox[{"T31u", "+", "T31d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32", "=", 
   RowBox[{"T32u", "+", "T32d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12", "=", 
   RowBox[{"T12u", "+", "T12d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13", "=", 
   RowBox[{"T13u", "+", "T13d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{"-", "V"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V2"}]}], 
       RowBox[{"kb", "*", "T2"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V1"}]}], 
       RowBox[{"kb", "*", "T1"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V3"}]}], 
       RowBox[{"kb", "*", "T3"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T3", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"2", "*", "Vg"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E1", "=", "Vg"}], ";", "\[IndentingNewLine]", 
       RowBox[{"E2", "=", 
        RowBox[{"2", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I3", "[", 
         RowBox[{"V3_", "?", "NumericQ"}], "]"}], ":=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T31", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T32", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<GaussKronrodRule\>\""}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"I4", "=", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"I3", "[", "V3", "]"}], "==", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"V3", ",", "Vg"}], "}"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"V3", "=", 
        RowBox[{"V3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T12", 
              RowBox[{"(", 
               RowBox[{"f1", "-", "f2"}], ")"}]}], "+", 
             RowBox[{"T13", 
              RowBox[{"(", 
               RowBox[{"f1", "-", "f3"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"G", "+", "V"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T12", 
               RowBox[{"(", 
                RowBox[{"f1", "-", "f2"}], ")"}]}], "+", 
              RowBox[{"T13", 
               RowBox[{"(", 
                RowBox[{"f1", "-", "f3"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        FractionBox["P", "J1"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"Vg", ",", "V3", ",", 
            RowBox[{"P", "/", 
             RowBox[{"(", "0.316493", ")"}]}], ",", 
            RowBox[{"2", "*", "\[Eta]"}]}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Vg", ",", "0", ",", "10", ",", "0.01"}], "}"}]}], "]"}], ";"}],
   "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check13.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.911355926389474*^9, 3.911355954561207*^9}, {
  3.911357000672164*^9, 3.911357003736191*^9}, {3.91135749791651*^9, 
  3.9113575011310863`*^9}, {3.911358357835146*^9, 3.911358362442472*^9}, {
  3.911358944841055*^9, 3.9113589499152813`*^9}, {3.9113595418576183`*^9, 
  3.9113595479476643`*^9}, {3.911360292934018*^9, 3.911360295968882*^9}, {
  3.911737766894362*^9, 3.911737815075182*^9}, {3.913415467548542*^9, 
  3.9134154681070147`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e385791e-bde1-4192-9680-88664bcacbca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587926851705*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2673450c-4ee4-4f70-af3b-6054e5dc3960"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879269275637`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"dada178a-596c-4aa1-a8ef-159d4a94b4d9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.2574932374841428`*^-14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.91136712089925`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587927120903*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ec9d692b-dc88-4a24-a37f-2209991d988d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.0090266256156397`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.477172361486132`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587927203292*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b7ab9d9f-e124-4846-bc9e-274746806e42"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587927292933*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4e50c4db-d6d8-4d8c-9334-e0fda07fee92"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879273246*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"26321afa-3deb-4fa8-846b-1489e03d6583"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.2574932374841428`*^-14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.91136712089925`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587927392887*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e9486b49-4941-4f00-ab09-8272c49ec5b6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.0090266256156397`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.477172361486132`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879274143267`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"da08ad17-6efb-4e90-a5c9-efc80141ab53"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587927482955*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"863e73af-6b21-43cd-8bee-7ffb6583db54"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587927572461*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"24adcf23-adff-4a49-b7fc-06546f614b5e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"7.047314121155779`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"6.333921552052333`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587927640951*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e6332e5b-d3a6-47de-a9d4-d3b707446ad6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879276959753`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"dc7e7619-a871-47c6-a70c-c88807841adc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587927766362*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"42b4b407-bb04-4dee-a18a-06a1ccb752f9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587927852867*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"89343337-0454-442a-ae7c-f9962be802fb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.081113481353317`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.4836738827134466`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587927948546*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9cfbe53f-bd02-4f59-ba4b-03c53fc8899e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587928031588*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5de09d0f-efdd-48ee-acc8-eb8f43907fbf"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879564630833`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"bf3003c6-a990-4778-b4e8-b00025779b58"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.841970365638491`*^-14\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.8796935673229753`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587956622478*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d77ca834-8c00-4b81-a650-adca3dd17fa8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587956715557*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ee9aca8d-1d91-4f19-8cf5-07cd1d940c85"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.841970365638491`*^-14\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.8796935673229753`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358795681608*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2896e120-bf42-409d-9a77-569c452cbf2d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879569335527`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"bcb3c3a8-2646-4d64-8ff6-2cf30ae61534"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587957011784*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"947e350d-ba61-40ce-8bee-9d4a084769f2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.1795993749316196`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9052936078303864`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587957092844*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"658375bf-a0c2-4805-9505-b58bfe38b11f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587957176505*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"00342ed7-11cc-4b4b-a4cc-8968683c0256"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879598576612`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"11d05f90-b162-4f4e-9704-34fc7bdef6af"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.4935806497834436`*^-14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.489911174370951`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587960055818*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"32d2267b-74f3-4985-b134-1655f18b0fce"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358796016639*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ab5719c4-1455-452b-895e-3c884e6a6e75"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.4935806497834436`*^-14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.489911174370951`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879602795353`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"006e7a60-e47a-4f66-acfd-3272e565fd61"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587960386331*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"669e7d62-6130-4d5e-a28f-95da93570fa9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879604700603`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1376eea9-d929-4784-b1b3-dca4a4578d90"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.936508016598062`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"8.293812294425214`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587960556394*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9b3a30a5-73df-4d17-a0e7-aef492793dce"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587960633432*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"979ff743-5952-4956-bc73-f8fbb6e5f580"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587992141206*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8714fe83-c491-45c2-baf9-849cafc6d28e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.6215974649381607`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.387151963346573`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879923646727`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"86a9e10d-3568-46d3-a65a-12def6873686"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587992434208*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"0abcbb07-090a-4be9-a989-7976abd8bb5a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.6215974649381607`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.387151963346573`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587992636859*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f8c878ae-595c-4bbd-8a40-c5ab70262ff1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587992744652*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e66a9ad5-168e-4d85-acba-5f9883e40bf0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587992849593*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"aa498861-48ff-4b4f-81de-46a00799c021"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"3.5914196963582334`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.751682598580525`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879929263763`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"faaebe7b-5e7b-4cd4-878b-21181d1cdacb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587992997312*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5b9461cb-f1ae-4edd-9a2b-f778062f4b8f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879974816227`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"27e2e726-5883-4b45-b1ad-d701f50569ef"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.8541622190680904`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.99889827944305`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879976378202`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"3defb6df-6ec8-4391-ad4d-c75708fdac17"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879977428827`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f96d2d70-0df9-4afc-9ce2-1d9892515118"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.8541622190680904`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.99889827944305`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587997856132*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c5cbd147-fe7e-44f2-803a-7a1fad1cfb2d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587997962768*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2619c9ac-68d8-4fc4-a0e6-7703aaaae989"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913587998050353*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d713757e-e688-4181-aa0e-fe24ae452280"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.0442222173751015`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.1290309682142976`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358799813055*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4ba647aa-d87a-467f-beb9-5b00d46bfe75"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135879982168694`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e1c23dc0-495e-4f53-bfa1-099d501b6f99"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588031733787*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d5de9690-280c-47e7-b5f3-77e552c24a28"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.3956632847193376`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.333908992932462`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135880318828163`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fbb75680-34c5-41b8-8ea0-801fd0c1e2d2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358803200721*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d3c0c116-1f9d-41b7-bf8f-c4b837bbc25f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.3956632847193376`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.333908992932462`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588032099745*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b3eb4cff-6994-4fc8-a1dc-e93ef37b5d0c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588032450964*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"29c969bc-c843-4f49-bfd8-14ec7abf43f6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588032551444*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"19b90720-27f3-49fc-b342-e8951334115a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.886490721062696`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"9.969440947245316`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588032651412*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b4b02a75-7030-4f13-a988-726e6dce9a3e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135880327671833`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c1d95a10-60aa-4bc5-8c33-f6133638a88f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588038700018*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e5961fcd-387f-46a1-ab57-06aa81e20aae"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.560949372891667`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.2400518849395144`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588038846698*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b12093e4-0632-4f5c-b91e-e39d4a5503ad"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588038930152*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"82efae08-271e-4ef5-bd95-3054f7a3fa43"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.560949372891667`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.2400518849395144`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588039069415*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5fe1b02b-fcff-4d63-a07c-c8232922ea9b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588039513508*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"32f59e44-e195-480d-ab1b-31c268e94722"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358803958596*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6b6a1e33-5f0e-47af-a68f-6dfc0a1f0987"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.159958681705561`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"4.2087107694662236`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588039728862*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4e6fc859-2c9f-48d6-8881-650ba3b8147b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135880398063593`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ee4ef72c-2b4c-4f2a-99b4-d0b0fa588d5f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135880742767563`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"98507a4e-8594-4f23-8d44-d8a3cfdc1ec2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.0149361699853836`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.3568273059106762`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135880744909687`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"29ece002-b586-487f-bf0a-4480631c5ea8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588074920938*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ec4d57f0-6c5f-4e31-a989-4d5928b93464"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.730679010415267`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.5873340071024325`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588075049303*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fb77b3c8-866f-4ddc-926e-324da2b32f6b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588075418767*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b2ebf61a-f286-4f14-a16d-9f4c5800b2cc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135880755335407`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b3d57a62-cd2e-45af-914c-ec8d1526d21b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.38712954453735`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.6127374086370344`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588075625516*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f3534304-d24c-4bda-a6ac-52e463d899e9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135880757118*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8ff8761c-bf59-4476-b893-dc6a03af21eb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588084325582*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1c657c7e-97b5-44ac-beee-1c85823a64ab"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.1149071168234728`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"8.557471612168364`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588084484413*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"10daa104-bf31-436d-8ee0-cc8471fb5aa7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588084939554*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1e86db83-96fb-4b35-94f0-fdd556d2181d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.1091120386632078`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"8.501836853821327`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588085113405*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"29cb8b70-cefa-4c84-a8e6-2e8355aba51b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588085537689*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4c8f293e-69c9-40aa-ae73-2b59079f8330"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588085660129*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"dfb5e095-3b6d-49ac-a254-b37c2fee2ce1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.2595927356988546`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"8.951942881473817`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588085769093*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c4615bad-c6d8-4a35-a913-c135a7074cb1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588085867282*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a8000a40-6937-498b-b21d-ef1062fb251b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135881204488297`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c00c1439-64c6-455f-816a-3cfa4a3d2cd4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.563040485480201`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.168413414062166`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588120633806*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"776edcae-baf6-4888-ba31-5a0261ddc9b7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358812109865*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3a0173ab-cb5d-491e-87da-fbcdaa45c60e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"2.064642808932357`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.464108702057115`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135881212788477`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8c3d7330-12be-4c6e-9449-71b6e8819168"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588121355351*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fae4bacf-17d4-460d-9f5e-177790ff7a0b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588121428391*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"aa6d1fb3-0223-4153-895c-2ec314f8b735"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.648093298057973`*^-20\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"4.184810778178069`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588121974389*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c0571a40-1c4e-4c0b-b230-484f7befea1b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588122051038*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"098295a2-5500-4330-83bf-a0ee2d8cfe86"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588131603979*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f3db26ab-11a6-4b08-a8ca-337c83c1d5fd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.815165136186364`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8417200164898856`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135881317385073`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b4b101e7-655d-4844-a03b-b270434976cb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588132325234*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"72566e3d-710e-4d00-9338-10411d5abaf8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135881324281387`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6d2739cf-22d8-4463-adde-b8c27bf2d6b1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358813250576*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d1161108-44c9-479f-82ef-3536dd455ebc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"2.2922829135069503`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2075023608151387`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135881331564817`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"3e01c19f-dced-4bdf-92a1-2c05c7fcb385"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.8925892415213273`*^-21\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2794027236448634`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588133793087*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"99986828-00b9-42e7-a530-0bae80624c5a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588133889678*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"851c7e3d-f660-47c2-b2d4-21621179dc2d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358816983906*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a6de29d6-96dd-4101-8da0-d39d904a07b0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588169923477*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8b7f00ac-b114-49ca-9087-6608d6186656"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588170180132*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b8c2136c-eb98-4107-b0c1-2f3152965221"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135881702908*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b0eb2ff3-5f64-4067-8933-45f3776fe89a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588170375523*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5993d63e-694e-4c6a-8ec5-098fd708ed03"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135881704533033`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"01cbddb1-45b2-44df-8b63-68249c98ead7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358817107053*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"3c108803-1180-4fa0-ac53-16e4914536f5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588171150696*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"80015140-7dbe-4ff1-aaf2-1a64ece2cedd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135882020587797`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4062afb0-5766-4352-97dc-ce8d796617c1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588202127199*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"89449090-8532-4b3b-8f49-db0fde4ecc8d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588202702862*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"beb53e69-16a7-411d-8e99-d7f638053ac2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135882028040247`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"57f6525a-5073-4774-b01a-1a5d20249b18"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588203657044*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8e81b7a6-e2c9-4b44-8d8a-97a60e7ec127"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588203728003*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a78354b5-7594-42ad-9ff3-15f543a3d083"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135882043208237`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"306d54bc-51cc-49a2-8ac7-d50f60cd89a1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588204402588*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"97088ae2-c2c4-439c-b126-bc2530f86ed9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"314.456254`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913415555970771*^9, 3.913588235668758*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"c652b170-a6e5-4814-92c5-553aa95d27c0"],

Cell[BoxData["\<\"check13.dat\"\>"], "Output",
 CellChangeTimes->{3.913415555970771*^9, 3.913588235799705*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"0acf28f9-c1d7-4592-8844-eb8c83fae458"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Non-linear helical ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["eV", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["eV", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "fb521909-0b23-47e1-ac00-bbea93b92a58"],
 ")(Voltage-temperature probe)"
}], "Title",
 CellChangeTimes->{
  3.913415584865079*^9, {3.913588256570462*^9, 
   3.913588259618496*^9}},ExpressionUUID->"e8d38dbd-4cae-4dff-97a9-\
776001fd660a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T31u", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31d", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32u", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32d", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12u", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12d", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13u", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13d", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31", "=", 
   RowBox[{"T31u", "+", "T31d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32", "=", 
   RowBox[{"T32u", "+", "T32d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12", "=", 
   RowBox[{"T12u", "+", "T12d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13", "=", 
   RowBox[{"T13u", "+", "T13d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{"-", "V"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V2"}]}], 
       RowBox[{"kb", "*", "T2"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V1"}]}], 
       RowBox[{"kb", "*", "T1"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V3"}]}], 
       RowBox[{"kb", "*", "T3"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"2", "*", "Vg"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E1", "=", "Vg"}], ";", "\[IndentingNewLine]", 
       RowBox[{"E2", "=", 
        RowBox[{"2", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I3", "[", 
         RowBox[{
          RowBox[{"V3_", "?", "NumericQ"}], ",", 
          RowBox[{"T3_", "?", "NumericQ"}]}], "]"}], ":=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T31", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T32", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"J3", "[", 
         RowBox[{
          RowBox[{"V3_", "?", "NumericQ"}], ",", 
          RowBox[{"T3_", "?", "NumericQ"}]}], "]"}], ":=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "G", ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T31", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
              RowBox[{"T32", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GlobalAdaptive\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"I4", "=", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"I3", "[", 
              RowBox[{"V3", ",", "T3"}], "]"}], "==", "0"}], ",", 
            RowBox[{
             RowBox[{"J3", "[", 
              RowBox[{"V3", ",", "T3"}], "]"}], "==", "0"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"V3", ",", "Vg"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"T3", ",", 
              RowBox[{"2", "*", "T2"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"AccuracyGoal", "->", "4"}], ",", 
          RowBox[{"PrecisionGoal", "->", "4"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"V3", "=", 
        RowBox[{"V3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"T3", "=", 
        RowBox[{"T3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T12", 
              RowBox[{"(", 
               RowBox[{"f1", "-", "f2"}], ")"}]}], "+", 
             RowBox[{"T13", 
              RowBox[{"(", 
               RowBox[{"f1", "-", "f3"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"G", "+", "V"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T12", 
               RowBox[{"(", 
                RowBox[{"f1", "-", "f2"}], ")"}]}], "+", 
              RowBox[{"T13", 
               RowBox[{"(", 
                RowBox[{"f1", "-", "f3"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        FractionBox["P", "J1"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"Vg", ",", "V3", ",", "T3", ",", 
            RowBox[{"P", "/", 
             RowBox[{"(", "0.316493", ")"}]}], ",", 
            RowBox[{"2", "*", "\[Eta]"}]}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Vg", ",", "0", ",", "10", ",", "0.01"}], "}"}]}], "]"}], ";"}],
   "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check14.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9117382404533453`*^9, 3.911738282684629*^9}, {
  3.913415609901911*^9, 3.9134156106365767`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"528220f4-bf34-4c73-9ab0-3666ac224edc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588290001994*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"11e4617f-9aa9-42da-b444-4cba296b48eb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588290083543*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b61ee0ef-e849-4984-adc1-8712f4764541"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.9193523141436695`*^-13\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.6225861084700923`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135882902173147`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"bd1b403d-5290-4cd9-aacd-2870a73b4b5f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588290303616*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f34caf1c-954e-4663-b91c-671079a5a8ea"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.363297410415757`*^-13\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.7490909700036868`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588290390239*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ca229a9d-edfa-4127-bf08-2861b1632b3f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588290474802*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a5a8e912-faf2-4c29-b464-0cf8ece672e8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.0349086798982`*^-13\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.742615567262972`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588290540064*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7e8edf4e-0a08-4d9d-ac20-bff477948568"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"8.922024631683595`*^-13\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"5.689346648704064`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588290601804*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a41583f7-2499-4298-802f-b9dd4dc564da"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588291871422*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a40e834a-b730-4ff1-9dc1-c5baedf7416b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588291895681*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5a3884ce-bb82-4bf0-a91f-8b41ac4284ab"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588291963111*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fc005a81-7a7f-4da0-a2a4-eaf275cd696e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588292040575*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"69317095-1f96-4e18-9e3f-4e8e5a0133ad"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.2921338683742094`*^-13\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.4513325696096954`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588292101652*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"421eb178-347d-4b3a-b8e7-770854d3f091"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.644263439194634`*^-13\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.63287209378588`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588292208416*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"acbd9930-7f18-472a-ad90-51d180187ae8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135882922654963`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8bdd4e36-7c48-4d04-a36d-07498aabc83d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588292322022*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"3bcdbdaa-91fb-4077-8ea0-ff0b1e98d981"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588350625396*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"aa4180b2-840a-4ef2-a64d-b3f4d337a688"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.265648827061816`*^-14\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2443971348267089`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588350754633*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ddb0a4b0-77e8-448a-9d35-fe21e8681fd7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135883508428307`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3d0d3070-da46-44af-bc61-50cdff3b4313"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.4412822606398035`*^-13\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.7153214847145606`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588350934887*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b225261c-da35-4d67-ba67-4b926bb0dcad"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135883519175987`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"415e15e3-1a5d-4fee-ae1d-93753dc644a7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588352040163*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d5ded28a-defc-4320-a0b6-29b53097cfd0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.541174344456806`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.250913839399553`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135883521333523`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"bb3fdcf0-32ad-472d-a6d6-3d5d25ab52ea"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135883522284613`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5b587852-7a63-4df4-9aeb-27771dd36eaa"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588357429702*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ff89fff5-b2ed-4bdf-acb6-ace0e297cfcf"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.962677946536431`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"7.065624232857157`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588357571866*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a1041d73-655d-4f09-ba1b-58b363858687"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135883576618032`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"76974759-9553-4ec7-8495-57df3d1e469c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.3270732671561156`*^-14\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.6640637657733862`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135883577823477`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9636e409-5991-4edb-8440-421773791410"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588358927369*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"88731193-d016-4ebe-b988-ccdbc3e444f7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588359052681*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2e723d36-872d-4962-822e-b33886831dea"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.7192393046945`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.59724448471145`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588359146183*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"7cebbe9e-582d-49dd-9214-78b224b32a69"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588359234013*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1aa9c71a-b717-4463-97e0-e4bfa7d7310f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358843547399*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fa871960-50bd-426f-81ff-ae0b276ab9b1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.623807490659147`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"4.416078650373393`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135884355923777`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2911c098-3d37-45f3-8020-eda0cd41c853"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135884357228727`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ba067150-ef8b-4abd-b832-fbfcb0a2a4e9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.543660269395398`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.9746426842258263`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588435817943*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5fbaa7a6-bb6e-4eea-9a76-360418538e68"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135884374415894`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2539d567-b788-4871-90a5-2e69e8c84e38"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135884375422697`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5776bcb6-b1a2-4605-b8ab-c50f7e3f34d4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.795510284178389`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"4.0831035166140894`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358843765898*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f29fad0a-c7ea-4f30-9448-2c5efcbe01d7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588437786812*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5593f4a9-23d5-4bef-91bc-a0d230f692be"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135884732504377`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"533548b0-2ec9-4f9f-8880-e3ead3c367a2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.8029153529581597`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.7419098213267887`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588473415204*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"cf8c740f-e439-4def-8f98-09530f7e7b7b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588473529608*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a62da6c5-2f7a-4d6b-beaf-db83f16c6aaf"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.317350327812843`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"8.460661459813764`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588473639933*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"150a33d0-0091-4a06-a701-93300aef85a9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135884753704977`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c05b67d1-8264-4099-872d-3235caf20908"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135884754819393`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6c00f42c-87c0-4e23-8bb4-c5dc96cfb9ca"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.8707993189532104`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.5019586573070056`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135884755930347`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a3a725cc-5c93-4eec-abf1-848d58530037"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588475703445*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b77dc966-6c8b-408c-937f-28cdbc46e5b8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588570308284*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"db506f1d-5d2f-4517-b0d4-443c43ee391d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.937323402571394`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"3.8850381683204975`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588570436234*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"03ec8831-ff9c-41ee-b802-6726bbfc6343"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588570518907*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"81beb232-6b1a-48de-8596-765daf9fa143"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"8.379917175753079`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.563054338629113`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358857072605*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e8447a6d-6a49-4524-8664-8aaa58bbc51b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588572694047*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"881ab4e6-73da-4435-b3f4-b8f9531a559c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588572814158*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9f73489d-92f1-44b9-b2a3-4dc96af784a0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.1525013013863094`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"4.03477541264464`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588572934833*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e171d468-16fc-43a3-b552-3f18eeabb16c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588573048174*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8dc50d25-baf3-43c3-8191-5ff2c380ceff"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135886030148582`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"dcb2169b-7110-4bea-88ca-cc2f40bd15db"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.1331189220345664`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.611279354824136`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135886031983232`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c7796d8c-2a45-48da-b365-d46caa2a08ef"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135886033175898`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b737b5a7-7e51-476d-aa19-20e654afa091"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.028593517468675`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.4625381589559467`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588603405013*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0dc0e291-5146-4c3a-9c94-89d40958e7ad"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588605479748*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"df865409-391d-4319-8e13-71122d67b02a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588605588986*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"edfeefc1-b20c-43c7-a310-e40c823c23bc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.7836268738744686`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.228061823448595`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588605694427*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"299632d5-c388-4930-ab01-ee5ac0b7297d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588605797468*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e1d1f626-274d-4c6a-8814-1df75aec30ed"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588694981639*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"765b2222-79cc-4bae-8fa2-be49a340594b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358869504804*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6e8a0a85-1c88-48ad-ad32-78f781db48b3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358870491012*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"98b144ab-5a1d-45f0-ab40-383969d1cf62"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588704987093*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"1ed889a0-ccdf-4e2b-989c-f2e924706259"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.2313019520221606`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.515810087628051`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588709582856*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8c4bde6a-d79b-4e3c-bb62-4d715a096a05"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.191014947468378`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.1648951732052674`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588709805553*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"de5c807c-6abd-4ca0-936a-1a1050527390"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.651711833691125`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"8.829762157221626`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588712224791*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8d087e90-7296-47be-8fe1-72df238f4888"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358871231833*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8943fcba-fb2a-4b76-8aec-3779d1af7e64"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588753721388*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9bb646e3-98ea-472b-848c-1107e6b698d3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"3.0797588566574326`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"8.400079397098563`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135887538598833`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b46f0d58-4765-4e1b-9abf-f84b71a24ab9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135887539675913`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"636148ad-36cf-49db-9c6e-d956b38f0472"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.1450826655694073`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"6.464395887194984`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135887540757713`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"34e8aa47-1ae3-4147-95a2-0ce8ea303cff"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588756476193*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e1f2ee3b-6022-4d69-8002-f4b2ae6444c6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588756575087*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"447762e3-313e-40ab-a87b-584ed56405db"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.5768859837843952`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"7.286762247060542`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588756689192*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9f76c262-110e-45bd-8eb8-51c9988d10d1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588756790263*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2758aad0-7371-40a7-9a22-d59a9860d68a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358881671325*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"873f7f77-f7b1-45df-ac35-3eda35e91624"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135888191531963`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4584c0f3-65f4-467e-8160-993feee41bfb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135888413838654`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"35f09abe-ce13-4b29-94f9-343eb5b6f58a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588841457753*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"84c9b5ec-301d-4fda-82c1-509b4bb15ae2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588862229925*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"381b0b5c-ddab-4e4a-a48b-2e2460e0ee4a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.727219400295158`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.5421882180586354`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588862404868*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9ee45ba6-c4be-48a5-859a-083a2fd33bca"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588862508685*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"cda5bb7d-47c4-4405-a62b-8640026e3cbe"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.261439190695947`*^-14\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.3373341172870028`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588862613517*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9ea04b46-1823-4887-99ed-376cb6e60cb9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588865128621*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4ded61b6-f9cc-44d5-b1c4-d2517a9c2660"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588865238532*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c1d30126-7e5a-42b1-868d-f86ad61256c8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.822768230927457`*^-14\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"6.192616253681859`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358886534807*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"97666d04-5690-4ce7-b739-7fd940bcc92f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135888654305897`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0f5adaed-91e2-4ba7-9ff2-5b199f4a4b80"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.3167788909558141`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.369996219962869`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588879107367*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8fb1baf4-f080-4267-a4ca-cbcba17c5e10"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.2436643138941907`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.8450390294787724`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135888792926607`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"1cdf00b0-9533-4974-a4ec-06debec350f5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.891825523480454`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.1969426891161526`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588882106683*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d6eb57be-54e6-4575-8609-b6cdefa0d40a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588882219861*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fcde0aaf-30e9-403a-b56f-ad3b864fa419"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135889815180807`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3851ee6c-b2fb-4a97-be65-a53e49b7e675"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135889815913467`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4ffc16be-449c-42b3-ba6d-fe519ad841f8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.618329479797527`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"7.2338323183151`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588981692346*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"044afbde-5e80-4b83-8d29-283334a5b345"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588984414917*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"736c8e56-b556-42e4-9584-4e49af7f4f55"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588984516738*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"04decde8-bb6e-4cbd-943c-2c2ba14ff920"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.148647768962482`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"5.379173814076747`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588984622102*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"12ece114-8b5c-4023-9f25-e1ca81a3102d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.255673292507`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.687554100138583`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588987342511*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"0ee71f57-7a55-4bac-be26-f25a94af6dab"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913588987413047*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9f2137f2-c662-45b2-b2ca-76fd69397bf5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589034554674*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8f069335-d198-423b-9ef9-749b2c2b0804"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.0886303356398394`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2046540236428099`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358903472418*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"48cf6fb6-76be-4fa2-bc64-426186b9c370"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135890347940903`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"87a8db4c-44dc-4103-aa8d-dd24b239c3c7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589037992691*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c6c360c0-319a-48f5-b1f7-7bb363207c8e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589038095613*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"fb865f4d-a91c-4666-a15c-7f08a99eec1e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.7275842130963025`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.1758383427856572`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589038199916*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1f84c758-e294-414e-86e2-e61550e2ac57"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.735501964843712`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.899724640844769`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589041442729*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f06a3b13-3620-41bc-9ab5-1a7f4157a90c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589041515395*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"cb637ddd-257e-4ff2-9c40-37086ef3527a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589163987157*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2884edf2-1a9e-4d38-a3be-6e4bf64b98af"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.0615622435746024`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.3189944852136807`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589164158189*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f5884341-f166-42d8-ac2b-b8bc730d719a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135891674550943`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c807aabc-5362-4806-a08f-824f0507cd6d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.9194926129752835`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.1672036844875529`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358916757904*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6913db0d-9ef1-4ab9-a768-0c16db230030"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589174039548*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c32f3692-0171-45e4-8c60-193a9b049ed1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135891741517057`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9dd8992a-911b-41cd-80b8-a0d9640b2da7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.161124139423474`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.1953933094443022`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589174244523*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4d4fad4f-f208-4930-8c94-3306a86efb4c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135891743221483`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"32aa3187-30ca-4012-804e-5f057fe1462d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589226350102*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"65591671-701f-4792-b1b9-34e834820339"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589226455291*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9afabb5f-f391-40fe-be2b-e15dc8992c6b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135892265603523`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"18c05f66-f39f-403b-9f1b-6dc9fed9c7a4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913589226667048*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"134897e5-6096-41f1-b7f5-0bc2119ea1e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1135.422746`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.9134158769427853`*^9, 3.9135894190425587`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"9d7b0cdb-1dce-4a1d-b9ec-1801533f1e49"],

Cell[BoxData["\<\"check14.dat\"\>"], "Output",
 CellChangeTimes->{3.9134158769427853`*^9, 3.9135894191813583`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"e7aa1e52-a893-4d91-90f0-e6c89a22b4b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check11.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check12.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check13.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data4", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check14.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"A1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data1", ",", "data2", ",", "data3", ",", "data4"}], "}"}], ",", 
    
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "\"\<0.50\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\"\<1.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.0", ",", "\"\<1.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "\"\<2.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<P/\!\(\*SubsuperscriptBox[\(P\), \(max\), \(Wh\)]\)\>\"", ",", 
         "45", ",", "Bold", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\[Eta]/\!\(\*SubscriptBox[\(\[Eta]\), \(c\)]\)\>\"", ",", "45", 
         ",", "Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"\"\<Label\>\"", ",", "Black", ",", "Bold", ",", "45"}], 
      "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue", ",", 
         RowBox[{"AbsoluteDashing", "[", "15", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red", ",", 
         RowBox[{"AbsoluteDashing", "[", "15", "]"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", "\"\<(a)\>\"", "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", "Black", ",", "35"}], "]"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.91169258551978*^9, 3.9116926042472887`*^9}, {
  3.911692773758026*^9, 3.911692860435597*^9}, {3.911722310625185*^9, 
  3.911722333785252*^9}, {3.9117284816201344`*^9, 3.911728483932671*^9}, {
  3.911729056504777*^9, 3.9117290858913307`*^9}, {3.911729915258321*^9, 
  3.911729950021021*^9}, {3.911730208990741*^9, 3.911730230068574*^9}, {
  3.911730322686211*^9, 3.911730327187044*^9}, {3.911737035810834*^9, 
  3.9117370519030113`*^9}, {3.911738160739134*^9, 3.911738215964733*^9}, {
  3.9117383324746113`*^9, 3.9117383364332952`*^9}, {3.911739516959208*^9, 
  3.911739524489255*^9}, {3.9117743853796263`*^9, 3.911774422178961*^9}, {
  3.912314318119513*^9, 3.9123143295114107`*^9}, {3.912314361931666*^9, 
  3.912314378517337*^9}, {3.91232970999127*^9, 3.912329710504887*^9}, {
  3.91233258266722*^9, 3.9123325828651953`*^9}, {3.913415902426498*^9, 
  3.913415909785719*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"261040a0-11db-4c1f-9f30-64d4763d6b3a"],

Cell[BoxData[
 TemplateBox[{
  "General", "obspkg", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"PlotLegends`\\\\\\\"\\\"}]\\) is now \
obsolete. The legacy version being loaded may conflict with current \
functionality. See the Compatibility Guide for updating information.\"", 2, 
   38, 1, 25540969167217325689, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9134159123402967`*^9},
 CellLabel->
  "During evaluation of \
In[34]:=",ExpressionUUID->"f0457315-a072-408e-8027-200384a20b63"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], LineBox[CompressedData["
1:eJxdVns41AkXdoldRaStpcu6lI2wSTa5vpTk1mVRipQmhKjkmlKYlCUhZYki
18+iMIOIMG65z8xvyCUMxkyWyLotUjvfH98/33me85znfZ7znnP+OOd9jgLp
qrWLkICAwB98/2/8f3Mj9mZoTWXBOpinbpl+D/v3/x5vEFMCXvTZaHFSAsZk
TfQ/N1bj0oErEfGJaThuCn1qRz1u/5643DKYBZn15E1Hf2+GzAZN0yThPEws
dNMfbuyAf0smKUW4ELZDLeMC2gwEn+neKuFXjG8OX+3+tCIgtW7HN9duKpIi
jW4qWXaBu5ruuLSrDA1Ge4R6Nd+Dqi8vvcmjHNfnc5zV1/SiX/rRQ7Fnb1Ab
9dE7qroPN+UQtqO2CmepFwgHlw84X9gdlt9djf6ocNHvFgZQb7D78fxUDUxT
E8jz3kPoHFvMjZuoRRnK5ps82bj1iG1oOUyDRJ1KYurmYVjJKn81ptfBy+eL
bWnpMFI11iY/fl2P5dBFaeOjI+g3MP/o9LQB1tMSc759I/ih141X59eIWR7X
+v65UYx3drN6LZogIe5eVdA7ihcreppvZd8hSkH503YrDsIY1LaokXdg90lU
S5RywBy6SNbIbYYnuUOF8uMYWmLq4yxILVAyktQy8R7D/QlNsSuyrVDMHRtf
oI1hNmvcaailFYbFcdaCElzAYWZfqX8bRnV4LknHuch8+st9se3t2L9wWnA+
kov9VeGt01XtcFi9N2BezcUdQwr79pkOHGMmkNsnuRi0EFBom+5A5+awgyUb
efh2TdF6MqQTojOrO/dr8VA2kTtwQ5SOQz+0c+8e44H1VFZyxZyOP1NZf3WR
eGBMbzwnHEVHm53cXkdvHpwurVVLaaZjRF7u6LEgHrj+Ws86RBiwmFI/+yGY
h9PJWkkZYICpcPSLzi0eviRHtu0IYOCX1V2Hkvx4SHYoy7XLZ+AFz7hE1YPP
T7T0ODLEgMMJOyja81BDcd2wIsmEa1yfSsFhHrx0RdyCDJnok3PY/EWNB+eN
Z0TaPZhQjvaaN5DiQXyRZb78mInRbQYCL6a52O0bQhKrYsJAT6bYupULy7kB
c8FRJoSsRGh3Mrj42+Zt00dRAnd3bt1uG8iFllVNfYMygftm64aXzbmot1qk
ppkRmGHI2z2X4SI0xpMW7EogcCl7+hJnDH9fX8i6GEbggMprg5CCMcxJFeqc
TiGwL/HG7HrfMdyuLle9QCVg/H3ZoO6BMWxqdVsltxCgC8+MqSxz8Pa6/ZrG
QQJpi0wRwQoOqpeELqvNEBg8uXiME8DBanjcnkpBFkp9dTkL+zg4/rFUPUiK
hQCOxZL91Cj8Lk+JX97OglVzHmNvzihqTEk28cosmHhsq0nm72d8G8lxcS8L
UfH4+fUPo1Damn0+WYeFWKta36zmEZwq2uNGBgsrTpWqocEjWN9veI5yiAX/
Rf/+SxojeMK4KLzHlIWHvAAlv5Fh3DZ6NbvEx7uPMarq4oex+lU7+0c+ThGd
8vQyGYZCerFXFJ9fIWy5IWqODWllSuBpfn2TzOEXWplsSLmeYIby+weEO2mE
2rDx8/rLpLWaLEgenJu4J8SGmMRPU3P8+QPfnzQrJQ3huJ+RjMlPLDzJep24
s2YQZ8W1ScsbWKCVM1fubB9EwLji7i1rWAjLE1r+FDQAbq7Uq6w5AsmtK/6P
ej4g5eWKROooAdWJkvKY/R/wx0TGoe8ZBLZa6vqKPulHrHya2mglAaeFstZN
c3x90SkI35tDING6xanfpg8DF1Yn5mII1LxZsPOh9sIkMmrglwAC1NsnSf9s
6oW44ply9lkC7m5HGsmBPaj9jV29zphAxa9kN/UP7zHaOCddtIPAM78V1jrj
99Cdf1LKWENA+6WgmVZONwoas2KvcJhQk7lUVrG+G34PYtwjaEwE9OT3FwV0
IX3ccFIulYnntho6qiMsVC0GZP8axATh566ifYyFXfGSYi02TNirredw3hAg
iZ13G1BlQmZYL+KgKoFvxOzyVSF+fkOskmMKE/4X+j6Evmfgn0StBiP+Xa30
5IlvzGOgQ7Dz+j9kBg5HWHrtCGYgw9z18MNlOuZFyxuKjzLAZiu5rfOhg0cx
rK3ZxoBfpKTp575OzLPjp63+ouPioYrGMqIDwyFL9adK6XDWzI0Iordj6vDH
pwMhdPSoLqubMNrQYl5YwObriWyyZ9dP3a3IHD2vcH4DHcrU73ZvHGqBgv/Z
5VcvO3EinnVdebIZTWHNDo+1O6HA25fuvPoOj3Sm17pXdeDzGa5zm/Q7fFYx
9Vc16gD1GUXjoloTbDJnu3uq2/GNXGWtatEI6fwRjSv67TgZdnNVybMB3FSu
9ceSNujdsT9l86ge2or07kNqbdBvlSQXV9Yh1SxNITi1FeVVJ0qNJ2iY89x5
MVayFfGKefpft9OQ5E1LuHGrBTO2LhEc21pE3ieTtbjNWCkqMvgcU4M04lR5
pVUzTnhsvnngeTVqNuckSBS+w/c2wqSGnW+xGnvtoKLUO9jckVELolTi9Jlr
xfOeTfC6FhNpZvEGc4G7MsIaG5Gp0iegMF4Oxxbied22RhTSVOb+jnkN1+tm
y8VXG7BQ1/Y237AMJg+duyyq6yGipkfTmy/BLGNyS/i6eqjp3g18QKFCpCMw
xMG2Dpd4luTIGxQcGBMOb0qiYSC8ol7+SDGYsbQAWn8tdqmcc9TZVoQ2q2n3
w1tq0VNilXRz5hWuljfom5+sgfXtnkn18gKYeWRrRctWg6xIcbaPyQOF7f7p
cmgV8kuUiuk+uThs3SQnN/IGT8RiX5x3zUGFnWp/gl4F9Hf4aHa5ZkG2QpJG
i34NVnrAy6++Gbh/JF3sUU8pvFMdq/8T+wJWv566Mbu1BIN/fPoOPqlY43bX
o8uOgt9uGJk5DiUjxWC6SelBEV8f4poOuiSiMKNnS6b3KyzkEB7ha57AXtIn
5uGbPLyyy35cURkHzwiOEmc+B7Sr6bFTW6KxO0FGO1g+E8PeG2LSJu+BrkM7
sFcvDXEZj52on0JQTmGFFEQlIr+6jpSt649mOa8v90Ji4WJoYpn0lwvuvPRb
0sgNgfm0cC/VcdSwSf7BLf1dXw0FQip8Cdlow//9V/8C1/HCWw==
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1: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
hGS107oP4ry0eNT5hl8QUtb7qsSiDYP/A4mN+xc=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], LineBox[CompressedData["
1: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
8vUEbFrQWJ9upr5eL0HjeHLgTAu8+e8F327vwdhVFbqw0vW+xVDJc2d1D6yl
lvMZuJpRQM9GE5/fg+U3TiybA5rgIfXtw/aUHkyl83TZUTchSa71nGRUD0x/
LGUZGjdCI2aeT8m/B+oh2UZNow2wPnpfFy968NPoQYufYgP+9LPpr1j2gPfw
rje5LfXgYLoy4qHfgwsKf6O5JevBLztssKDWg6hHz0t+V9Yh78uBD7wyPWja
KtCzWawOmY/vXJES7YHn7PeOOxW1oI1QLCQX1+P9cTO581otfmaNlm090YPR
yGxNl/oa6PPljKfs7cEuB19aZdka/PjmWn1227q+sOxMl+6rxvR3+1m31W58
cKZ43NOuhjHXldWSqW6c3ebd+HS+Ciy9ZWYdA92ok7Qo8HKsgmFH0EJFUzfS
Fr8lJDNXYYNU+Ua/4m6wcL5YK4urRJp1PDfSupFQxXWy5nIl3tBspquL7AaD
nEZadlsFtP+j2c/r0w1erwou58cV+Cx27ftzh27InSq+cpq2AuO+LX/ijbpR
9E8mKi66HJuYdIYz1vU9RUX60JRwOTjPuuyNkOkG37SD3+JQGYKoLp0wEOlG
FI3aVIFjGfzNc71Zudf7A0ool8DxMjzPC+9KO9yNxwojGpr1pVCR7LU8wdiN
qYuteXzGpTjt8Oy3w78uLF24pJu0vxSsZTQdJev/kRB1dkl+RQnCD0q+GB3o
wga70QNqT0vAbR/q8aOhC4WpG+Zfs5Yg9ZqyRn9BF1KeeQZ5Bhfjx+NXdumJ
XYh00nL8++sTWjR87xuErPdDpZ83aql8Qu/bO5aML7tANVARmV5WhH7bV6Jv
zLqQNa9A03eqCGrcL3i3P+yCF9N9mo6gQkyXtJXo3unCCTaOMG/aQtCYuaik
iHSBpUJ9apNFAeRuZ1r1r/djq+f4hY9N5SPY3sRzgbULbhynt357kA/fwC20
y3RdMFv9OXi5/yNeSVbKjf7uxHzDFecD9z7C+vXeicKxTvTHXRiw7MrDDz+R
Cw6dnTCTd1u6eTcP+28efcNd3onAwL9bXvTm4rEaV0BTWif0AwoeH1bPRVR+
lNu98E44nr0XyfA9B1ppp0abPTrx9O5XKTHjHHRQXd1x0bIT02EeIvl/s1HG
XmL6UrsTG/TqDR56ZuNEa8jzujud2P9+x8Rltmw4p3/0WRXuxOjmK/MX0rPQ
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
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1: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
49VLJuZ671m2UvxgG8fXJ2QScf7R2EnnBEp/fe0Cc/5JxNiNO7brEqn9IVv5
qbx4EmHFevryS4p5EgRClL8mEtJ7jIQ1kqjnx5serb2YSJzdYRbYQzGtnJfj
GWci4W0unXgzmTpf6kp7X24CMaX8zIE3hfLvwkf0X0YJhOdZOu0VxTKBQ1rX
WBOILbEHN2umMiEscVQ242U8YXuxd66b4hSrsTl3w3jCl2f8gVsa5e+mEyKt
K+IJxam4n+vSqfmxlzhdmhdHhAwJVqdRnC8uqSlhHUdE7XV1Vc2g9tX9Wkx2
vjhiHBqNzRRvFm6PfB/2glALdBpyfEnNr/NP+FQWnxMkIZC5MpN6/9x12n27
50R7+W2xWIpvLR/qDW5+Rhgk/tCTf8XE8iVP7mNazwhSX2tfJcXudukfEkti
iZTIPdVmWUzEjLG5RuyLJf7ef8k7SfE0M2ZhQ9ZT4njEZl7/7P/Nl+ta66Se
Eg9CZysFc5jYYX073CsthmAU8u/NpXhSpkbzjGQMgZrT+uq51PfTx/fsAZnR
hPI6GalWimmb5nM55aMJDeejRZdfU/tJo6j2r7dRBOPj+N9/FE+ZrxFsV4si
zm+ZXwjLo/Yj4fnQdT8iiRjv6ddi+ZS+Pi0YXD4XSWzVWytWRPErTY1DA6MR
xLK0lNPHC5jICs60c/SJINae1jraQbH1dcVyFr4IojaKv8+hkNpHX9zxDct8
QtjNHN3/j+I1ge9rNqs/IdpaSg+EvKG+Nxrb+B90PyZum81Nbi9iosxU6nTP
rcfE1fRNtrkU/6Kd9eEWeEzoPhcNP/yWys+73TTud+FEbe8+t58U749tJltM
w4mLfJf5zr9josYijt/yXxiRdOK5wxjF9uMfZxOSwoiQlnl5r2LKv86kjIWf
CCP8Feu0uN4z0f9hv/uuqVBi3MfleyzF73dN06yfhxIdj/atlS5hgrS8F6Jw
PJSYkTmw6i3F2uvIrojZEOKjWMFbjQ9MPDzXYe+TEkIEBKyRaKT4/wBO0hPP

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"\[Eta]/\\!\\(\\*SubscriptBox[\\(\[Eta]\\), \\(c\\)]\\)\"", 45, Bold, 
       
       GrayLevel[0], StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"P/\\!\\(\\*SubsuperscriptBox[\\(P\\), \\(max\\), \\(Wh\\)]\\)\"", 45,
        Bold, 
       GrayLevel[0], StripOnInput -> False], TraditionalForm], None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
       FormBox["\"0.50\"", TraditionalForm]}, {1, 
       FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{1., 
       FormBox["\"1.00\"", TraditionalForm]}, {0, 
       FormBox["\"0.0\"", TraditionalForm]}, {2, 
       FormBox["\"2.00\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive["Label", 
    GrayLevel[0], Bold, 45],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->Directive[Bold, 
    GrayLevel[0], 35],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 2}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9134159128859253`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"89133be2-bb57-48fb-bcda-05503c451b34"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Linear ",
 Cell[BoxData[
  FormBox[
   RowBox[{"helical", " ", "refrigerator", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["E", "1"], "=", 
       SubscriptBox["V", "g"]}], ",", 
      RowBox[{
       SubscriptBox["E", "2"], "=", 
       RowBox[{"2", 
        SubscriptBox["V", "g"]}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "d4ecdaa4-dc81-4fa9-9f0e-ed068470e411"],
 ")(voltage probe)"
}], "Title",
 CellChangeTimes->{{3.913500055152409*^9, 
  3.91350010542625*^9}},ExpressionUUID->"7c6850e5-e4dc-4911-9110-\
3a9220dfea36"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ae", "=", 
   RowBox[{"1.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "22"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"0.1", "*", "kb", "*", 
    RowBox[{"T", "/", "hb"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"kb", " ", "*", "T"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "ec", ")"}], "^", "2"}], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", "=", 
   RowBox[{"ec", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lp", "=", 
   RowBox[{"ec", "/", "h"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lh", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12uu", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12dd", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13uu", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13dd", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21uu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21dd", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23uu", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23dd", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31uu", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31dd", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32uu", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32dd", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33uu", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", " ", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33dd", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"2", "*", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]T", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"kb", "*", "\[Delta]T"}], ")"}], "2"], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Pi]", "*", "kb"}], 
       RowBox[{
        SqrtBox["3"], "ec"}]], ")"}], "2"], "T"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vg", "=", 
   RowBox[{"1.5", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "=", 
    RowBox[{"x1", "*", 
     RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"J1", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"G0", "*", "T1", "*", "T2", "*", "df"}], ",", 
      RowBox[{"{", 
       RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E2", "=", 
        RowBox[{"2", "ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E1", "=", 
        RowBox[{"ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"df", "=", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
           RowBox[{"(", "a", ")"}]}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
                RowBox[{"(", "a", ")"}]}], "]"}], "+", "1"}], ")"}], "^", 
            "2"}], " ", "a"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n0", "=", 
        RowBox[{"-", "\[Infinity]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n1", "=", "\[Infinity]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"G11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "-", "T11uu", "-", "T11dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L23", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T23uu"}], "-", "T23dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Gc", "=", 
        RowBox[{"G11", "-", 
         FractionBox[
          RowBox[{"G13", "*", 
           RowBox[{"(", "G31", ")"}]}], 
          RowBox[{"(", "G33", ")"}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LeT", "=", 
        RowBox[{"L11", "-", 
         FractionBox[
          RowBox[{"G13", "*", "L31"}], "G33"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LhV", "=", 
        RowBox[{"\[Pi]11", "-", 
         FractionBox[
          RowBox[{"\[Pi]13", "*", "G31"}], "G33"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LhT", "=", 
        RowBox[{"K11", "-", 
         FractionBox[
          RowBox[{"\[Pi]13", "*", "L31"}], "G33"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Sc", "=", 
        RowBox[{"LeT", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Pc", "=", 
        RowBox[{"LhV", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Kc", "=", 
        FractionBox[
         RowBox[{
          RowBox[{"LhT", "*", "Gc"}], "-", 
          RowBox[{"LhV", "*", "LeT"}]}], "Gc"]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"I1", "=", 
        RowBox[{
         RowBox[{"Gc", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LeT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         RowBox[{"LhV", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LhT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"P1", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]1", "=", 
        RowBox[{
         FractionBox[
          RowBox[{"V", "*", "I1"}], "J1"], "*", "10"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"], 
          RowBox[{"4", "*", "Gc"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        FractionBox[
         RowBox[{"T", 
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"]}], 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "Gc", "*", "LhT"}], "-", 
            RowBox[{"LeT", "*", "LhV"}]}], ")"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"T", "*", 
         FractionBox["LeT", "LhV"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        FractionBox[
         RowBox[{"LhV", "*", "LeT"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gc", "*", "LhT"}], "-", 
           RowBox[{"LeT", "*", "LhV"}]}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]m", "=", 
        FractionBox[
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Z", "=", 
        FractionBox[
         RowBox[{"Gc", "*", 
          SuperscriptBox["Sc", "2"], "*", "T"}], "Kc"]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Jq", "=", 
        RowBox[{"LhT", 
         RowBox[{"(", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"Gc", "*", "LhT"}], "-", 
             RowBox[{"LeT", "*", "LhV"}]}], 
            RowBox[{"Gc", "*", "LhT"}]]], ")"}], "\[Delta]T"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[Eta]", "r"], "=", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}], 
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]r1", "=", 
        RowBox[{
         FractionBox["J1", "P1"], "*", "0.01"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Pm", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Gc", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["LhT", "LhV"], ")"}], "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"Gc", "*", "LhT"}], "-", 
                   RowBox[{"LeT", "*", "LhV"}]}], 
                  RowBox[{"Gc", "*", "LhT"}]]]}], ")"}], "2"]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"LeT", "*", "LhT"}], "LhV"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"Gc", "*", "LhT"}], "-", 
                  RowBox[{"LeT", "*", "LhV"}]}], 
                 RowBox[{"Gc", "*", "LhT"}]]]}], ")"}]}]}], ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", 
            RowBox[{"Jq", "*", 
             RowBox[{"h", "/", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["kb", "2"], "*", "\[Theta]", "*", 
                "\[Delta]T"}], ")"}]}]}], ",", 
            SubscriptBox["\[Eta]", "r"], ",", 
            RowBox[{
             RowBox[{"-", "J1"}], "*", 
             RowBox[{
              RowBox[{"h", "/", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["kb", "2"], "*", "\[Theta]", "*", 
                 "\[Delta]T"}], ")"}]}], "/", "0.67"}]}], ",", 
            RowBox[{
             RowBox[{"-", "J1"}], "/", "Jq"}], ",", "\[Eta]r1"}], "}"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", "0.020", ",", "10", ",", "0.001"}], "}"}]}], "]"}], 
   ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check30.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.913431869744669*^9, 3.913431908200643*^9}, {
   3.91343231027841*^9, 3.913432316979656*^9}, {3.913432356108509*^9, 
   3.9134323670045137`*^9}, {3.9134326394414387`*^9, 3.913432674684535*^9}, {
   3.913432749060027*^9, 3.913432750625577*^9}, {3.913432799847968*^9, 
   3.913432810219145*^9}, {3.913432923262404*^9, 3.913432928432122*^9}, {
   3.9134330591881437`*^9, 3.9134330654006844`*^9}, {3.913433133880282*^9, 
   3.913433135557808*^9}, {3.9137170980036716`*^9, 3.913717153812398*^9}, 
   3.913717417787624*^9, {3.913717454359013*^9, 3.91371745597962*^9}, 
   3.913717604796606*^9, {3.913717754293998*^9, 3.913717756406658*^9}, {
   3.913767097775*^9, 3.913767099779426*^9}, {3.913767144561261*^9, 
   3.9137671447909117`*^9}, {3.913767194603344*^9, 3.913767195397781*^9}, {
   3.913767241754724*^9, 3.913767242788064*^9}, 3.913767334895173*^9, {
   3.913767653801324*^9, 3.913767654545525*^9}, {3.913767690505846*^9, 
   3.9137676923185263`*^9}, {3.913767952993939*^9, 3.913767955033594*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"42c1fe89-48fe-40a8-bb15-2096f022a980"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"643.861533`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913717789900283*^9, 3.9137671172733707`*^9, 
  3.913767161962812*^9, 3.913767213055647*^9, 3.913767258094492*^9, 
  3.913767368550462*^9, 3.913767671532072*^9, 3.9137677076777573`*^9, 
  3.913768088137888*^9, 3.9137722371841288`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"9db8c61d-934a-413b-aa46-bf51b3cfe3d0"],

Cell[BoxData["\<\"check30.dat\"\>"], "Output",
 CellChangeTimes->{3.913717789900283*^9, 3.9137671172733707`*^9, 
  3.913767161962812*^9, 3.913767213055647*^9, 3.913767258094492*^9, 
  3.913767368550462*^9, 3.913767671532072*^9, 3.9137677076777573`*^9, 
  3.913768088137888*^9, 3.913772239090008*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"58eaca39-e39a-4c4f-8177-f8f5cea4f64e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Linear ",
 Cell[BoxData[
  FormBox[
   RowBox[{"helical", " ", "refrigerator", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SubscriptBox["E", "1"], "=", 
       SubscriptBox["V", "g"]}], ",", 
      RowBox[{
       SubscriptBox["E", "2"], "=", 
       RowBox[{"2", 
        SubscriptBox["V", "g"]}]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "e516d0a2-e97e-42b9-bc11-e31e9c59e616"],
 ")(voltage-temperature probe)"
}], "Title",
 CellChangeTimes->{{3.913500122579142*^9, 
  3.9135001285591183`*^9}},ExpressionUUID->"2c9aa79c-3292-4b83-bb56-\
0469fc10fb01"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ae", "=", 
   RowBox[{"1.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "22"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"0.1", "*", "kb", "*", 
    RowBox[{"T", "/", "hb"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"kb", " ", "*", "T"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "ec", ")"}], "^", "2"}], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", "=", 
   RowBox[{"ec", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lp", "=", 
   RowBox[{"ec", "/", "h"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lh", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12uu", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12dd", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13uu", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13dd", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21uu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21dd", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23uu", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23dd", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31uu", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31dd", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32uu", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32dd", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33uu", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", " ", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33dd", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"2", "*", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]T", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"kb", "*", "\[Delta]T"}], ")"}], "2"], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Pi]", "*", "kb"}], 
       RowBox[{
        SqrtBox["3"], "ec"}]], ")"}], "2"], "T"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vg", "=", 
   RowBox[{"9.80", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"V", "=", 
    RowBox[{"x1", "*", 
     RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"J1", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"G0", "*", "T1", "*", "T2", "*", "df"}], ",", 
      RowBox[{"{", 
       RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<LocalAdaptive\>\""}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E2", "=", 
        RowBox[{"2", "ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"E1", "=", 
        RowBox[{"ec", "*", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"df", "=", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
           RowBox[{"(", "a", ")"}]}], "]"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
                RowBox[{"(", "a", ")"}]}], "]"}], "+", "1"}], ")"}], "^", 
            "2"}], " ", "a"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n0", "=", 
        RowBox[{"-", "\[Infinity]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"n1", "=", "\[Infinity]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"G11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "-", "T11uu", "-", "T11dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", "G0", "*", 
           "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"G33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           "G0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L23", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T23uu"}], "-", "T23dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Pi]33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K11", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K12", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K13", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K31", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K32", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"K33", "=", 
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
          RowBox[{"Method", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
             RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], 
            "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Gc", "=", 
        RowBox[{"G11", "+", 
         FractionBox[
          RowBox[{"G13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"L13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LeT", "=", 
        RowBox[{"L11", "+", 
         FractionBox[
          RowBox[{"G13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "K31"}], "-", 
             RowBox[{"L31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"L13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "K31"}], "-", 
             RowBox[{"L31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LhV", "=", 
        RowBox[{"\[Pi]11", "+", 
         FractionBox[
          RowBox[{"\[Pi]13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"K13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "\[Pi]31"}], "-", 
             RowBox[{"G31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LhT", "=", 
        RowBox[{"K11", "+", 
         FractionBox[
          RowBox[{"\[Pi]13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L33", " ", "K31"}], "-", 
             RowBox[{"L31", "*", "K33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
         FractionBox[
          RowBox[{"K13", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"G33", "*", "K31"}], "-", 
             RowBox[{"L31", "*", "\[Pi]33"}]}], ")"}]}], 
          RowBox[{
           RowBox[{"G33", "*", "K33"}], "-", 
           RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sc", "=", 
        RowBox[{"LeT", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Pc", "=", 
        RowBox[{"LhV", "/", "Gc"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Kc", "=", 
        FractionBox[
         RowBox[{
          RowBox[{"LhT", "*", "Gc"}], "-", 
          RowBox[{"LhV", "*", "LeT"}]}], "Gc"]}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"P", "=", 
        RowBox[{
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"], 
          RowBox[{"4", "*", "Gc"}]], "*", 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         RowBox[{"Gc", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LeT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         RowBox[{"LhV", "*", 
          RowBox[{"(", 
           RowBox[{"-", "V"}], ")"}]}], "+", 
         RowBox[{"LhT", "*", "0.01"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"P1", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]1", "=", 
        RowBox[{
         FractionBox[
          RowBox[{"V", "*", "I1"}], "J1"], "*", "100"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        FractionBox[
         RowBox[{"T", 
          SuperscriptBox[
           RowBox[{"(", "LeT", ")"}], "2"]}], 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "Gc", "*", "LhT"}], "-", 
            RowBox[{"LeT", "*", "LhV"}]}], ")"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{"T", "*", 
         FractionBox["LeT", "LhV"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        FractionBox[
         RowBox[{"LhV", "*", "LeT"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Gc", "*", "LhT"}], "-", 
           RowBox[{"LeT", "*", "LhV"}]}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]m", "=", 
        FractionBox[
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}]}], 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Z", "=", 
        FractionBox[
         RowBox[{"Gc", "*", 
          SuperscriptBox["Sc", "2"], "*", "T"}], "Kc"]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Jq", "=", 
        RowBox[{"LhT", 
         RowBox[{"(", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"Gc", "*", "LhT"}], "-", 
             RowBox[{"LeT", "*", "LhV"}]}], 
            RowBox[{"Gc", "*", "LhT"}]]], ")"}], "\[Delta]T"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        SubscriptBox["\[Eta]", "r"], "=", 
        FractionBox[
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}], 
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{
            SqrtBox[
             RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]}]]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Eta]r1", "=", 
        RowBox[{
         FractionBox["J1", "P1"], "*", "0.01"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Pm", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Gc", 
             SuperscriptBox[
              RowBox[{"(", 
               FractionBox["LhT", "LhV"], ")"}], "2"], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SqrtBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"Gc", "*", "LhT"}], "-", 
                   RowBox[{"LeT", "*", "LhV"}]}], 
                  RowBox[{"Gc", "*", "LhT"}]]]}], ")"}], "2"]}], "+", 
            RowBox[{
             FractionBox[
              RowBox[{"LeT", "*", "LhT"}], "LhV"], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"Gc", "*", "LhT"}], "-", 
                  RowBox[{"LeT", "*", "LhV"}]}], 
                 RowBox[{"Gc", "*", "LhT"}]]]}], ")"}]}]}], ")"}]}], 
         SuperscriptBox[
          RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"x1", ",", 
            RowBox[{"Jq", "*", 
             RowBox[{"h", "/", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["kb", "2"], "*", "\[Theta]", "*", 
                "\[Delta]T"}], ")"}]}]}], ",", 
            SubscriptBox["\[Eta]", "r"], ",", 
            RowBox[{
             RowBox[{"-", "J1"}], "*", 
             RowBox[{
              RowBox[{"h", "/", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["kb", "2"], "*", "\[Theta]", "*", 
                 "\[Delta]T"}], ")"}]}], "/", 
              RowBox[{"(", 
               RowBox[{"2.15", "*", 
                SuperscriptBox["10", 
                 RowBox[{"-", "7"}]]}], ")"}]}]}], ",", 
            RowBox[{
             RowBox[{"-", "J1"}], "/", "Jq"}], ",", "\[Eta]r1"}], "}"}]}], 
         "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x1", ",", "0.205671", ",", "4", ",", "0.001"}], "}"}]}], "]"}],
    ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check40.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9137215848232937`*^9, 3.913721622289317*^9}, 
   3.9137217247754583`*^9, {3.913722476860506*^9, 3.91372248704494*^9}, {
   3.913722625328539*^9, 3.913722626074954*^9}, {3.913722751193194*^9, 
   3.9137227527854023`*^9}, {3.913722874501639*^9, 3.9137228762214317`*^9}, {
   3.91372317730079*^9, 3.9137231798764753`*^9}, {3.913766940542753*^9, 
   3.9137669536879587`*^9}, {3.913767023770303*^9, 3.913767024007937*^9}, 
   3.913767476241798*^9, 3.913767538280752*^9, {3.913767748549261*^9, 
   3.913767749239642*^9}, {3.9137678019203463`*^9, 3.913767809813589*^9}, {
   3.913768148727607*^9, 3.9137681514988203`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"a5509e41-7c9d-473d-9ac1-28a2e3f3717c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772330342586*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2be45acc-710a-43a0-a8cb-314f00b1399e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772330419301*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b2cd3889-e8b7-4785-9c51-a5a4b206198f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137723305265093`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9605f72c-d33c-4697-8a61-baad80ca2586"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772330548922*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"614a1f45-d698-43c7-bc2d-5beecd3114fe"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772330596896*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3b7b6da5-3296-412e-bba4-c703b1b9c867"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91377233065403*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a9545c50-656f-4181-96cb-09cf8dae11b4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772330711547*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"88aa6746-a662-4029-947d-b6999591cd07"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772330771991*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"7c1b9027-3ef0-4d1a-aeca-6d32b0f951b7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137723497043457`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"333de6dc-195f-4ac9-839d-4d0b1d409592"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772349780135*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"988bf993-d407-4773-b977-ab3a2208bb96"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772349860322*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"09b73cd7-02e5-44cb-bfb4-d49a2220075d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137723499352293`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e0944176-5154-4069-a30c-1a5843593485"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137723500743647`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"04d1cc6f-bb00-4410-8d32-5eb55d9d12be"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772350162528*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"09f3cc60-077b-40fd-859b-9cd7a945e918"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772350247418*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"28d13c9f-562f-4bc1-9484-0dfeae019e87"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91377235032481*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"42bb62b1-6a65-424e-9d21-cbd264f6e379"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772369062298*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0937fd9f-0221-48a1-b0c5-659a6d876894"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772369168848*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8ec4ef07-f215-4831-b2e3-bd7b0f46c70c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772369257572*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4b2103fc-f1d0-4420-9d78-7024cc2a8bd9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137723693428*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5194f742-ed96-453e-aa01-5fbbf9bc7172"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772369558539*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"96af83e7-fde7-4b38-b7a2-ce0306ca4273"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772369671167*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7490d762-1bac-461a-8b78-30443523cba2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772369758988*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"0c05b54f-eca0-4d0f-930d-814a3e25a6b0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772369854817*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7267e3db-b706-464a-8d9c-b33005111c77"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772388647787*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"df36a3a4-0ad1-4fae-87d9-3f3314df8083"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137723887553368`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d3db9364-fccb-42db-8c78-0397617673b5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137723888528767`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"89459d80-1048-4076-9f93-398aa2cf9b5c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772388938594*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"fb5ea0e3-b263-44a3-9264-8837053bebcc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772389152504*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"eb9b93d7-4ca2-4e47-8408-88cdb3614a74"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137723892697153`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"20003d50-33ae-4e7f-9db3-c172258affc9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137723893556433`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"13c287e1-f701-4152-99ca-659a4e022f89"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772389440668*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"854495f1-b0dd-4a81-b2e6-bcca643ff604"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724075706873`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6a2940b8-3e2a-4b6d-bea9-d262d7b7700c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772407689286*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"261740ab-5da2-43ba-a539-9bd9c5d7d7ff"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772407781695*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"098f28d0-8917-4523-b8ad-5e89627fa994"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772407864843*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0921ad71-97bb-494b-91ac-7f7e338aa626"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724083649063`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"cc966840-02ee-4a72-b5c0-df70143ff5f9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724084576597`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"65f266ab-607c-4eda-ba4f-f3524060c438"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772408544313*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5b6fbb25-c4f9-4c0d-abb3-35f8954e6467"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724086419992`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a8a36f2e-dd79-41d2-a567-c6c6c0c3e635"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772426811449*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"78618eda-11e7-4b78-bff5-3d9af7a4506c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91377242691346*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6e74bc5f-ee73-4292-8e95-536aefffeb78"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772427012751*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b2dfdc1c-9fcf-4b5f-b720-4f0ee83b70a9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772427104991*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"df54a7a8-798d-48d1-9284-e17f225e2042"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724280216*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7c719caf-df32-464f-9a4b-5946ef6d61fc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91377242810518*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"65ae21eb-fb59-4673-a1d6-f685487f078d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724281907797`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5483a6d0-4f81-42f5-a265-5a54a0b5e3b7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772428288472*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ff6b8dba-85bd-428f-ba64-7a662f9b6570"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724461331367`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6bd74b52-349c-432a-861f-9a47bdbee678"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772446246223*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"56cdc6d2-c9c5-41c5-b4a5-1ddf783e324e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772446339943*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d92f1da9-62bb-4b33-8d1b-e0e817dc5116"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772446423943*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f97cd09a-e953-43b1-b85b-95f98c1e73a5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772447570266*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8e93662a-bcff-47e6-b8b1-3d555a094a59"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772447676366*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"804a776a-c4a3-4cbf-9030-8a775e5f27e0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772447756164*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"1fb7fa88-5ed2-40dc-b620-c6bf967b1230"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724478387747`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"14b9da90-5ba7-4ec5-932c-239152213eb8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772465605176*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"88742555-0895-44fc-b6de-e9e5f794dad5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772465709957*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"43fcbef5-a6dc-4966-8dc5-48684b1e7eeb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91377246581248*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"173ccca0-0329-49b2-82f0-7e07cf414317"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772465889943*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a0442c40-1fad-42b5-b6ec-9f4596979cee"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772467597348*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7f73d862-5a8a-432d-bb61-34b104da3b67"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772467694656*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f93ccfd7-3707-4d4f-a6d9-46bcf5846306"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772467779234*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"25315d99-5ffb-45c1-90c7-48509ccef3f9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724678677597`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d09bad06-f7aa-4436-a837-4e9e8cba1c9b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772486065762*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0f1b689b-688f-4265-9157-bdb9013f2d7f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772486159124*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"32ab9dba-7576-4ea4-bfb3-4e938867f058"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724862577972`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"69e863e1-a48a-408a-bdc9-a290ae2314c9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137724863492002`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d4773c91-2396-4efd-b7a7-0118a3a2e0ce"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772488384818*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"912321d1-f30f-4327-a715-006e6ff0e041"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772488503055*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"66bae033-8ef5-4bd4-87f7-aca44f32a6ed"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91377248860287*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3858eb1d-390b-479d-a08f-4e2de59f5e23"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772488687042*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a445dcec-3d4c-437e-a0ad-9b76ac032717"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137725054665127`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"41b2665e-143f-47bf-960b-bc85c657ad13"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772505575573*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f21f5902-9c67-4be7-ae98-1c550c0ac915"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772505666848*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d22d76fd-83eb-4347-b19d-44feb9db41e3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772505751769*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b9e6d56f-d8fb-43ed-acf2-265f0a013159"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772507783287*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b2e2750e-a3d3-4d18-b4c2-d05bb8626e8b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772507872834*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6bac34f8-4bf0-40af-89c7-f832fbfdda0d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772507962985*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"02c07cf0-a2d0-4a84-ba7d-bae7148d3854"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137725080466347`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fbd42e18-aead-40af-ada7-44be4c1a4ff7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137725251082582`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"17c7ed39-1513-4583-a224-69b744392ad0"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772525193746*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"63e9d698-6a60-498b-b1cd-ba59cbd8953a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137725252940063`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c0b3becc-dc0f-46d1-a9ab-621118e56f1d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137725253753757`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e2e19dd6-3df2-428a-afca-1e101c764366"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137725273123703`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"54ca7971-871a-4e44-9acc-d80e652fb19c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772527421834*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d5ee6553-0563-47a0-a789-ba70b15f0f2e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772527504306*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"bceae60e-8337-4842-92fa-ebe00e01f4a4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772527591158*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"392a465e-3ac8-4da1-a035-827e03bb7ca1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772544434763*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"afbb9d63-d150-4f30-b73f-3ae2b4eb32ba"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772544552457*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"0908cef6-dd38-453f-a765-1d5aaea33e15"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137725446461267`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"303fb378-3a72-42bb-a41d-fa20265a56b8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772544753044*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"83fa1c5c-b4e7-498a-b9d6-be4c9f24b769"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772546757782*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"25256798-bbb3-42df-914d-19190df5ffe8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772546843504*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"3fdab11c-8700-4cb4-9cd2-5146e40ada58"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772546934977*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7fe97a06-a935-43e6-b17a-0a1509128ff3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772547027917*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7f978825-6246-49c0-9650-320a789e32eb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772563773837*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1f27bf10-3902-41c0-93e8-7f54b5b3df64"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772563890814*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c55be5b7-e9d8-4821-9ded-1e2f72f1aa52"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772563983913*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"aa8efe60-9194-43dc-afd1-1abc3dbdc117"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772564072118*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"be56cb76-5216-4720-836a-fff3f688b8f1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"0.0001109441081163241`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.830755599977625`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137725659291973`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ed86b6a9-8451-47b7-8b59-93a6d973010e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"19.39731313558793`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"3.0761421494561965`*^-9\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.9673416488573693`*^-12\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137725660390997`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6992505d-ef4a-4393-ba02-afb7114b226f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "ncvb"}], "MessageName"], " ", ":", 
  "  ", "\<\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"G\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"G\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"9.668435253181311`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"-\\\", \
\\\"0.00011093570301622026`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8776164090210023`*^-7\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9137725661245537`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"cf914205-62f9-49b8-904a-7de62c451084"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"ncvb\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913772566218*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6694af92-679e-410e-8b37-077061489145"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"260.67035`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913721820033689*^9, 3.913722580012247*^9, 
  3.9137227158579273`*^9, 3.9137228460143137`*^9, 3.913722972456408*^9, 
  3.913723402189869*^9, 3.913766979060451*^9, 3.913767052914859*^9, 
  3.9137675051652803`*^9, 3.913767581582769*^9, 3.913767777376563*^9, 
  3.913767837744329*^9, 3.913768214642887*^9, 3.9137725854129057`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"6d7f5cea-efda-4afc-8502-49b68f56ce2d"],

Cell[BoxData["\<\"check40.dat\"\>"], "Output",
 CellChangeTimes->{3.913721820033689*^9, 3.913722580012247*^9, 
  3.9137227158579273`*^9, 3.9137228460143137`*^9, 3.913722972456408*^9, 
  3.913723402189869*^9, 3.913766979060451*^9, 3.913767052914859*^9, 
  3.9137675051652803`*^9, 3.913767581582769*^9, 3.913767777376563*^9, 
  3.913767837744329*^9, 3.913768214642887*^9, 3.913772586084135*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"b160cbde-e235-4b8a-8a58-88c814a8d6b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check1.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check2.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check3.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data4", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check4.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"A1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data1", ",", "data2", ",", "data3", ",", "data4"}], "}"}], ",", 
    
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0", ",", "1.001"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1.00"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "\"\<0.50\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.00", ",", "\"\<1.00\>\""}], "}"}]}], "}"}], ",", 
         "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.50", ",", "\"\<0.50\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\"\<1.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<P/\!\(\*SubscriptBox[\(P\), \(max\)]\)\>\"", ",", "45", ",", 
         "Bold", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\[Eta]/\!\(\*SubscriptBox[\(\[Eta]\), \(c\)]\)\>\"", ",", "45", 
         ",", "Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"\"\<Label\>\"", ",", "Black", ",", "Bold", ",", "45"}], 
      "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue", ",", 
         RowBox[{"AbsoluteDashing", "[", "7.5", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red", ",", 
         RowBox[{"AbsoluteDashing", "[", "15", "]"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", "\"\<(a)\>\"", "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", "Black", ",", "35"}], "]"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.91377286920505*^9, 3.913772890475419*^9}, {
  3.913773043186717*^9, 3.91377307348517*^9}, {3.913773345980177*^9, 
  3.913773386548575*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"920f49c8-5618-47ff-a58c-baf1ee4264dd"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], LineBox[CompressedData["
1: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
KVPX70KcEE+KiLwKviPUzTJ8S/G//fkfvLg8Yg==
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], AbsoluteDashing[7.5], LineBox[CompressedData["
1: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
fwzyi4g=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], LineBox[CompressedData["
1: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
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1:eJxdlnk01Vsfxt1EKEOqW5kiuWUsKanoIVeGTOEqZIpKyRBFGlT0VhdlLkqZ
GySlzJIhUyLzMQ/nOOc48y/ci4vc97z/vnut79rrWd+11977j+/neZROBdid
XiEgIEDw63/7/y/N3EteKYtx+P1Jx2dt8Ysoib2+zpeZgfiO9i3a4rfhWnok
d/jwa4TX6FQ3J/6JRu+YYKmG96i0qh/ZKR4PZa8wztOxIoQunRS9ZpuML47n
q6SmymCp8Qe5ITEVr+BO9//nEyyupHpL9T0DUyJfx+V6De6Miphrimci44pa
RnBoHQxv2u7p0srG/HBemYB/Pa6+SJgJsc3FzEHNGys8GlHRc/CubNBLxCYX
cq9YNSP/r2J2deJrtDP3iXnrtuC5pY+yd/EbvNer6foi04qbAaUaIn1vsTvC
wjRloQ3xmkKr8uffwamRdJbc2w77w/3928ULER+x+4kNqQNTTWKP/pH/AJP0
qySf6k48rmw88E3rI46Wf/HRf9EF6Z2ljWkoQlaH+LGWqG7g9X/2+9sW4yjt
RKy0Xw9E5QcT4FkC47kc5Q1WvVAdd+6SCirFQ+Fp8S41El5l5s+RI8qgus7Q
2ly4D5IeQSs+JpbjV/lY6tWxPni5W01H5lTAfttYx5mSfnxTGGl0KK4Eeceu
deLRA5i2qr6p0vgJtWoRb/xcB6FUFys3S6rClGpv6n3NIQj4MtIaJz8j+DfV
UdfFIYiYego8nq+GiWL4FW7jMDrVzbI/3qmBz8Yen31xIwhpuVMqK16L0dXq
7w4eH0Vy4LtPkcm1yPkZcXRBdgysn7Ef2PJ1qOQMGQSPjkHmADfF/kUdEjgy
xvY246C3xQRUan2Bv6eZtEXBOFbr6+gql37BjEPIGoU1ZIgNZnOiUA/Fphzt
dh8y3jRnJEw31WOutPu2az0Z+hzWdmfbBoRsF/zZrEDBG6pRfm1/A55t0Mle
e4WCY0LeW1Q9G3EhwuvSvg4K7lpK3I5jNoLmlxR4YPsE/nZe6pi72ASh/obH
Mjcm8PQ8Q8J9oQntNXPMvs4JpJhEH2iMaIbRDrWzQSpUpOun2Wuu/goXCVdJ
VigVWvKdTkmJX7ElOI5y6CsVvttHLRdlWxDlWD8euJmG14IhGqdyWpBeNi96
y4eG0lLz+WaNb3BJ1XS7UEJD9lOR9zuLv6Fm/tTIXkE6PKw97B8ZtKKNlHJv
2JqOntdL5KWGVkTqtJ/0SKXjXck9Fy/rNpAlhF1rKXR8Sn9d/ZXUBqaPwf1/
1SZByxGR2OX+HalGl0dlgibxWtz8yKPJ7/iR8tZ9XdkkjGXFfZYC2jHtT1/N
XOLrhb+CTs234+mXLRNPDRnocrLR8TbsAPeRE009koEvEvZKj+90gMFIlE6t
Z+D5aTvBluYORJd/Pz+xkomA5U0DS2s6QRIR44n9zoS26cWsncc60UIySZOM
YGIhaJv7qeROnFWOuDz1mQlq4IJE8kAn8nifw94vMJFPKS9sku9Cit7SK8u9
LMxJ7zBd8OyC1i8HBBv9WdBhi7Rr8OfG3+zKfbmXLOxmKpi7s7rgIFGqZzvK
gu169eJ4rW7Q7GbXea5nw2aaI10f1A35X3VlbMzZKLy29dRsSTeWj4cclbnB
Rqnk/awdi924t6n0Zd07NqbO9nc7owflx+e1zMhsmES3/h0T2YOkDQfIeWs5
SKqRFalu6sFGu+ufWYYcdN26Jja1uhfG4tWNqwI4eOqTvrTVthcbTVcs/JLG
gaHq/lGHpF4k/GtyYqCJg/1h8wV3+3tRqhtFfjDNgcTKaP8yORL+w/mevEWO
iydOaXIsDxIWFddffvg7F9nDvWWyuSTI9DjdHPTlovX96GErJglkoYwiwQQu
Ol+6VIRr9uFYCX29WCkXwlqEwvuLfThH08zgDnIhrrs/kFzcB7XEy44FP7mo
Vu57K73Qh6Tqqn2WW3jYX+LVZ3yoHznnhX9vAg+iUyGcSxH9cE+yubbFnYcL
K19wchv7UaefOuJwg4fEPZF9JLEBtHlNnD/7hIfB6mf5q2wGcFtUS/l4CQ8C
9bd99RIHMKoZJrytkweVrWXrzvUNgNxRv/47i4cSz8acVNlBxE1LWf8hSEAk
QUuhxX0QtATXD+UyBLLUAm4uZA+CWphntLiLgCVrRbMaYxAxNvOLm48QuFnk
MeesMYQh3yPkDc4ErvktrokOHEK3cPIU7wKBDz1GIpVFQ7ikSNXIDSfwwPU5
gzU/hKoynUS9WALBwqFvZQyG8b49ctvr5wRmNTUdLW4Pw+J0z/hsPgHBM/KU
sIZhPAhTaVaqIPCbSbrta1E+19aEDqo28u/bK5TZbzWC1QpfN0p2Eog0Suta
lTACswLZW52DBE6PvqHqkkagWeW/7uIEgcGPl0mnZUZRaVHXyWURMPLc+zLJ
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
n4Y=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"\[Eta]/\\!\\(\\*SubscriptBox[\\(\[Eta]\\), \\(c\\)]\\)\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"P/\\!\\(\\*SubscriptBox[\\(P\\), \\(max\\)]\\)\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
       FormBox["\"0.50\"", TraditionalForm]}, {1., 
       FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{0.5, 
       FormBox["\"0.50\"", TraditionalForm]}, {0, 
       FormBox["\"0.0\"", TraditionalForm]}, {1, 
       FormBox["\"1.00\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive["Label", 
    GrayLevel[0], Bold, 45],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->Directive[Bold, 
    GrayLevel[0], 35],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 1.001}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.913592243255937*^9, 3.9137235031202908`*^9, 3.9137726020316753`*^9, {
   3.913772877054137*^9, 3.913772891252956*^9}, {3.9137730592978973`*^9, 
   3.913773074517367*^9}, {3.913773378875287*^9, 3.9137733871465063`*^9}},
 CellLabel->
  "Out[135]=",ExpressionUUID->"17a151df-a112-43ab-9ee9-e0bacb985b50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check30.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "6"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check40.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "6"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"A2", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data1", ",", "data2"}], "}"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.00001", ",", "300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "\"\<0.50\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\"\<1.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.0001", ",", "\"\<1.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"300", ",", "\"\<300.00\>\""}], "}"}]}], "}"}], ",", 
         "None"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<J/J\!\(\*SubscriptBox[\(|\), SubsuperscriptBox[\(\[Eta]\), \(max\
\), \(r\)]]\)\>\"", ",", "45", ",", "Bold", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SuperscriptBox[\(\[Eta]\), \
\(r\)]\)/\!\(\*SubsuperscriptBox[\(\[Eta]\), \(c\), \(r\)]\)\>\"", ",", "45", 
         ",", "Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"\"\<Label\>\"", ",", "Black", ",", "Bold", ",", "45"}], 
      "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red", ",", 
         RowBox[{"AbsoluteDashing", "[", "15", "]"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", "\"\<(b)\>\"", "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", "Black", ",", "35"}], "]"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.9134186981545067`*^9, 3.9134187341640673`*^9}, {
   3.9134187681312723`*^9, 3.913418774340872*^9}, {3.913419000634614*^9, 
   3.9134190099855328`*^9}, {3.9134191707276583`*^9, 
   3.9134191769395723`*^9}, {3.913419405166279*^9, 3.913419442220914*^9}, {
   3.913432434583234*^9, 3.913432475354679*^9}, 3.913432549420868*^9, 
   3.9134327042687073`*^9, {3.913432843685586*^9, 3.913432845683469*^9}, {
   3.913432878568387*^9, 3.913432906582975*^9}, {3.913432954667736*^9, 
   3.913432961878998*^9}, {3.913433224663019*^9, 3.913433228644754*^9}, {
   3.9134332597201557`*^9, 3.913433277414248*^9}, {3.9134335021650763`*^9, 
   3.9134335034043694`*^9}, {3.9134335971851053`*^9, 3.913433631408451*^9}, 
   3.913433938034898*^9, {3.9134350763071957`*^9, 3.91343509987402*^9}, {
   3.91359219681673*^9, 3.9135922053934917`*^9}, {3.913722997722278*^9, 
   3.9137230233793697`*^9}, {3.91372309960949*^9, 3.913723100756222*^9}, {
   3.913723138771595*^9, 3.9137231425285587`*^9}, {3.9137234150050507`*^9, 
   3.913723471858179*^9}, {3.9137235217565393`*^9, 3.9137235393590803`*^9}, {
   3.913723759528659*^9, 3.9137237821791677`*^9}, {3.91376832693963*^9, 
   3.913768333128624*^9}, {3.9137683707367268`*^9, 3.913768372040576*^9}, {
   3.91376844520923*^9, 3.91376845781094*^9}, {3.913768502824771*^9, 
   3.913768728674471*^9}, {3.91377289706408*^9, 3.913773002569016*^9}, {
   3.913773034958529*^9, 3.913773036065322*^9}, {3.913773395775651*^9, 
   3.91377342231846*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"21edfa5d-c6cf-4cb8-8104-377d0c8f0c6b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[5], 
     Opacity[1], LineBox[CompressedData["
1:eJws13c819/3AHBkRERk7+y99zjH26xIKCORlFBES0pJSZlJKlL23nvvvXdG
JS2KjGQ05MP39Xs8fu9/3o/n49x7zz3n3j9eV9DZy9KFgoyMbFaUjOz//smE
vNzce0yA7P9/VqRyyVLuQNi3qPhdSiwU+K3+BtrX5UBQYOz5XZFFMJaTwjdr
WwWSgskW9D61wG6dpjOQ3QxNuf0BxdotUG39e0FCrBP4pl30rbba4aTNobig
tD6Y0zhYfoWvGyjzjqStMA2DaUqQp0djLxyX9vVLGByF+wO/okI3+iEzL9nS
9NE4DCslPYgcGYQ/0r0Sm6ZvwCOfFOpcMgQH89fJsvZMQepOV/AX+2FIk+Gb
PN4zDUFHnK6Gfx+GX+OpE3fbPoLV4Qe7DjuPAH+Meuuk0GeQyW+rPtMxAsY2
/QVygV+gbn/n1BPOUfBmd4578HkGEjWGOEUdR+HFxK+g93pfYW5gPpfp+Sg0
x4RdUk7+Bnk1x4/9axmFHzYCDmFk8zBY+pzX4usosHOUm3w+9R1G/CeSD5K/
Bpw8qKzRuADs5fGnfu5/De6x0/yP+ZZg7zV4IH/gNUTZXtnz7fYynDD6Gjok
8RpqOHb/1nn/AzgPBrcFSL+Gqx5HLh1KWAHXSC94K/kagvs4vm2Y/YRhCc9l
Z5HX8Er6y8nk/37Cq7oRm8c8r6E4PH/ENH8V/sUIjnczvYbWxesmf06uwQvH
p3fOU7yGCVNSQyr9OvD5fm9t+TkKC3n0yuZ160ByW+jj/DAKFAwT2ZsXNuDt
4bbcgp5RYPNM5s/g/gUnEh7aV5eNglT/hWcWvb/gDcurxAvxowAyqnv+u/kb
grUqWn/eHwWrCLK7WZJ/IJqagnTlwii4LfX8snr7B6gY7KxYLEbB3+yZx07I
X0hgaPT4qTIK0fmnPudobAKV+WSeBNcoZDJI2lrPb4KmV6LW2H8jUOu53k/+
4h/woGEC3acRGOpv0M832YLe5Tdk060jMCMTUm37Zwt+b/FfP50xAn8irOQo
s/6DOLVylfTgEWBc5k0vtNmGhn9RbZXnR0DoyByXPc0OJECNVIbpCKgXlDym
rtyBjY4prluyIyD6UHeXnRIZimTeozdgGgG5SqEG2TAyPPLfCRea1WHQ+Lb7
BuUXMjzex/14YHQY9NmXld5qkiPrpBNbcvkwmBuPLhc+IUfNsC8VQTHDYHe9
KjvoOzmeELO/ce/GMJzJjD9rT6LAypOHml4R99Vz4h6/QhwFqhX8sn2jMwzX
adzeUq9S4GJAQ4i2wDDcUzN7NnVwF4qpbvH1UAxDhKvi0ZLkXSi0N9EnaHYI
YmLY9wT/3YX2BfGhl7qGILlzq93BghJjv53efJw7BLm/PwUoZVMiS9pBlq+P
hqBCrFOLlpwK13OPT16+PARNNnm/pm2p8CI3D62G9RD0PIwqLiuiQqGlfeKa
mkMwWunjEbqbGh2HtAOu8w3B9Dd7MScnahR9eVJylWIIvrHrfVaposbhDSUh
68FBWDMWjd/DRIPAGfHD8MUgbF/fY/vJlQbjLl5eLTszCDRZK8yVjTTIvZkk
kCY7CMyTY/3h7Lvx4hcjhf2bA8C9uzbY2Ws3euuMpFJ1DICYepK+eudu9IvX
bPd9MgCKbkHbDPy0SE83UuZ5agC0Ys9Xf/GhxYv3s9xmpAfAqMv8avUALQ6Y
hxdPbfaD+R9luUhROhRmK9K17u4He3Gu72f96TBPZCfpaGw/nLXdSdMcp0Mr
JbEjva794BU8c4pJdg/S2zimtqv1g29VN9fXoD14y2Lhm+7ufgicKxirfb8H
1WKumau+6YNwjqePo1To8SbHga2cnD6INblx2DWCHvMM75K9utUHyb6O1Dqz
9MjhYnl6t3kf5GXpNzPrMKDbMj/7D8E+KJ8UvzX3lAGpDlYxmm/0QtPuvWoN
iwx4dCtITqy7F/rU135GG+zFCs4eS5/4Xhhzm8xzf7UXN9xqj2hd7oWPsfWu
sL4X29PCV68a98J8V8oBVlNG/PXJfvcB3l5Y//Pw/fdURpzZw2Ctt9YDZBKe
sU3/GLFRZV/CcHcP3JfOluiVYMJOO56k4aQeCGnjpqk4zoRv//Vwom8PRJx8
NJN0lwmLKTU6uY/2QPQ6WUtYPhOe2ht25ox4D8SEX0n0ecOEZ+FCNit5D8QL
f711mmofnq65aaXwthtS6mxPmCrsw4SoKp7y0m7IPNarpuawD89zfWhKjOiG
/EUd1gMh+1DbvWrrh2s3FN8vWqUv34dRhecfpZG6oZJHaOj3x304JlyvUsfb
DXVlz/I/0zPjGKt1mcrfLmg23R3Wr86MJdmr/YxjXdA5c9Ot6iwz3vwQa3Kw
uAt6by0Zpj5mxh3ttsWPEV0wvN9J6FEdMw7HRwSNne+C8bwRshtzzGgaPPBR
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
UM+aEj4fpFGf+VEIO/f36LRvK2H1m0ua1h8LgVzKbb2RVhnR9JTFxBDh4bbc
mv3KOHdv+5xrcyHsui54ppxfGVvLM12oSwjz+nMVSSqj/rMptbKUQqBqfTuc
o6KMld+Mu7yjCburhaSjMiaI1ZNr3y+E3YxPMemwMqoIqQ+yXisEuvKV33HW
yvjr1RT3tgthe7PCZ6eVUXtpY2TduhDoyXPOPfZQJr6nfn34a0w4k5ov7Loy
Wij4yjJoFMJeszNjQfeU8WCAZo6sJOG1xvCACGV8mCEEjtyFsO8Fj4FfrDJu
BMGbl/SFwAI3/l1LVUbXa41nv/1XACyzYyXeBcqoNP+3H38UAGuY4vkL1co4
xnOePOsjYYVIwXNtymhZX7jAM1IA7BMLk06Dytjw9NGNxNYC4Lpt8tj+rTIG
qC7HyJUTFko3tp5Vxti8N0r9GQXA002+c3RFGftE7mj6xhL2cqw4/E8ZI9Lk
XsiHFgAfa62nEbUKkhc66vzyI1zLLqK3TwUTdpL3d3sWgMDpq1NaPCo4plpM
n32qAIRohqNVxVTwZoQLy3MLwvkyhxUUifnB1WyP9QtAxCqUQlqHmJ/TRRmj
Qvjv12pRExVkkB3szRErALFE/UuCVip4ulziRC8nYcMkcR5HFbSmPJ7wZ08B
SC5sfWBzV8G8iqUHitv5IB1lF7Pvqgqy/CmkuLFCWK3iCP0dFdzRvk7W9zkf
ZN8zU9OEqqDYlo6X1BjhQK968mcqWOfGqxvTmQ/yEn1XtxJV8JaM2UnGGsKD
4tK/c1TwiLhQdXRePihdC/rys1wF20VZDIQT80GF+3PcYpMKSqcWLDZFEW7W
tfzWS+z3XlqK+/18UHN9Sft5XAXdRpqO810nzPCnaeqTCvqFLG5Mu+eDRukx
34lFFaQ1krmSe5KwXbHcyG8V5GNMrw80zwftHYZvfRSqmM/6pN2VlA+66ecT
OhlU8ZDPET8bFcKHO4+3cKhi+T/zQUvxfMCfQgz1Qqq49kmsxI6bcExAW6Ws
Kq6+uLffY28+kHTe+5VoqCLVI7FvIeSEv2go5RuoYsHXP1yl63lgGPL8e6a5
KtocXUv69i0PjOXWklNOqOLRZpnzYu8Ij5nbxbuoYjq+cb08kAcH/fKYYr1V
8Vo+hnU1Exak7Xrip4oVD7raJcrz4HCny52IB6r4rnR59/Mswp4tqsFRqphl
dsiI4VUeHGHhX773ShU3XMO8IiPz4Gi1X/rtTCL+7qYPTyDhU5MnfUtU0Wff
pmmZTx5YUqnsv1Kviuz9FLPW5wnnRvV6dhHz/2TIUzrmwTGL5Xtuo6rof5np
QJ0F4d+HNM9Mq+LEeECuv2Ee2MRn/nSYV0WtoxaNhzXywE6fMtt2XRWLzqya
C8kQnndystpRRdvGBXMqwTywj6xnP0Knhkdop4p/7ieswjVowqqGjQW+bnO7
88Dxnc8DfQE1/FgacW5+Kxcc7o7q6Eqp4UbgfwnrK7ngJCa/oa6qhjItTZR0
s7ng3B+ep6SnhiVcX0Ml3hC+Mn9G1lQNT+x/ImzVnwtnOY24JWzUsOjzdtuD
ZsKNKSNCzmoYpH7rVFt5Lri67ITwearhPJfXtz05hPec1OP0VcOQMoujDgm5
4F5c9YclUA3TJEojqp7kwgUb1qK9j9RQwUMtmvch4f8uudK+UMMCpphj4X65
4Jk6wEeZpobqQontlN6ED0qNbxeoIfN/8m8fnM0F7x8PI/5WE+txkR4w2xF+
NmOw3qaGrT/f1Wea5cJlLb2t5UE1fNTFfc2IlAtXP8WXzr9VQ/9wxaRlVcIP
N8/PzKohVc5ZpSSpXPCRsTnwYUUNfWdohewFCI+WvnnzTw0dZSPO8LPmwo0b
TFGvqdVR+p7H/CItYX5Pk8F96mhRq57dup0Dfu3dO9086lji9SwmdS0Hbl8Q
rWwTU0efbvXs8DnC+wIvNiqqo+zphRH/9zlwp/KDSI0OEecIpr05QthB+32Z
iTpWrv/T8+/MgXu7XjwttFLHx5uGl8LqCGdvHM5xVEd92uvhycU5cN/ccle6
uzoOVBQHN2XkwIONgprEq+rIJC1pP/eS8Ms9l+PuqONNctG/HFE5EKznJvEs
VB3JeLZsLB8Q/tb2MfKZOh4P3e/51C8HwiIEY0OT1DHKeU7mgzdhJX/zoFx1
ZE4if6x4Lgci3rylDqhQxx7yf8GP7HMg8o5aw81mYr9zd/auHSUs8vTatT51
HFY1ZXMyyoEnvSvS3hPqqCYr/XxMKweiLpnNnP+sjolHtwKtFHLgKXvOS5cl
dRSH7LE3ooTrqa2c/qije5zcXTeeHHh+5gyd/S4NHP/88tbOvhyIpW1qPr5X
A8/Y0TUk0BAu5LlxlFMDb33M0DL6LxteHr8hf1hYA83e5y1srBL+N/bNUE4D
ZThd2/LnsiE+WTERNTUwIlWuznOasHGktZahBq6VenWrvM6GxKUFBtWjxPrh
iZ+perIhOdqkXd6eiNsbbb9vJKyRfkvqnAZWCG4yN5RnQ9oHcmXRSxo4G3mK
PSOXcJDjgsAtDTz4Q4LieXI2ZEjVpnA/JOIU3D0RMYSH2U+wPdHA5QWKcxER
2ZB1/eq+ffEa+J2hqe9pIGHe4a49WRqotqa7kXojG3JaZQKoSzUwT+HmeI0X
YfdQNfIGDQw3v+n6xiUb8hm/Lf/r0sDSrOOJO/aEy/Uzfo1q4O5j8tdkLLOh
0D7J4ee0BnLQan90NiFM/t/+xXkNpKeumkjUzYbiTLu+r+tEPRsrljPK2VBq
VhH4aUcD/43hQXkpwmvMWlN0mug2vbckUDAbKl54rY6zauLOucH70+yEoS97
WEATVQd3VePebKiaFT/dJ6WJti6aRjmU2VATFsTRqaqJk2Z7hbn/ZUGNwufB
Zj1NFLggdij6ZxbUTeg+rDPVRG9DzSLmOcK3X+pW2mji71WaIy+ms6BR6M9G
sbMmapM5couNEe4+lp/nqYmPbNmY6nqzoNmr+Gymrya+k2UXtm3JglbWvTwp
gZr4/Kul+b8qwrXnR1890sSprc6Q9MIsaD/dGRrzQhNnfgb0WmcQphEmPUnT
RA/Fp/SM8VnQlR/wN7xQE2PJhQ0HoglbvS96WKOJ3c6Onk9Ds6Dnr4bbvXZN
HN91+/bpu1nQl/ic//aQJhqLtXuq+BI2XBu//k4Tlx49VGXyyoLBBfNHl79q
Yvg5gaGfLoSj8gw9f2pipexvxbcns2BYjfY/1y1NXM30t+m2IvzepcyZRgsn
6pVVGw9lwWhgywUHZi1MuJzSWauXBWMS/EK2vFqY1GNP2ahOeNDvraW4FspW
7cx0yWXB5LXJKDMlLbxFo+78RpQwt8pBE10tbDxUfXWFNwveNkeR6R/UwsAO
EuteVsKuy5U6x7SQ3jFBW5E+C6YYDnupn9JC5oCkLyd3ZcF0aaao0nktvMIi
vuvRZiZM21FOy1zTQoWzfE/bf2bCpx2nZ+IBWvic6XrkrnnC6fWmQmFaeOmX
3LLxx0z4cpiLku+5FkYKWGQ/mSD806eWI1kLjcsWq78MZMJszOhlljwtNP3A
x6nVkQnfdOQl91Zq4c12hqbYesJfwj/tbtHC7YvzmVtlmfA9ZD52Vz9RX8VC
97k8wnJGR7cntNBLzZZ/IjUTFsdSaP5+1sJs7VvJZi8J++00rC1p4UZBwcGe
J5mwLHjSZ/mPFi7vOrrPLDQTVjqrZOZ3aeOMdM/PsbuEPVlnv+zVxrWgxzNn
b2TCGsvlV9Oc2mjYzv/lrzfh6gGrN8LaePr7f1+fumXCximpPa/ltLFBpmZe
xYkwVXDLgKY2HlxZnJmyyYTfuTM3ug218VCu2kiIeSb8tdBTaDuqjbofDXK1
jQn/jp9rsNfGid1d7hu6mbAVv5lYfU4bjR/epilTJaxvY1N2icj3XNLfVzYT
tudL9xbe0kZNzfhOkijhSKaO7IfaGCyf956ZLxPIVD1vpz3RxlufVGvmWDNh
11S3cmK8Nl48KmLTxkD4nujiiyxt/E7vVpBOlQlU4oGpT0u1MUfoT3X4fxlA
NfDhRGSDNo4yTly5sZEBNFe1mUO7tVErb+/4hSXCXC+6778m4sLFb8/MZgBt
00bAnQ9EPXOTfqffZwD9OUv1m9+10f1FVunZMcL0hT+ubmijLfnhW579GbC3
ZE+mF5kOspOvDfq1E7Z1czy/RweTAt9lRdZnANN2G6sLGxH3NibPLiecJth/
SlAHZ1/eHe3MzwDmQ/73T0jroEr9FOdiegawrrzVOq6mg7oOpQOsCYSfq62Z
k3TwR4/rosHzDGDXfppzyEwH4xjOet54RPjzymlDWx1MnOA0LX2QAZzBZpx4
Rgcv3qAIXPUnLJszpHlRBy+/TqBXu54B3K+pg1Vu6KDQketfArwygO/mGZC/
r4MmrdwUQ66EBZp+SUbqoKyf0BlhpwwQ6OApEIkjxnPLkPvbEva44SKQroNT
L6bHp45mwAHmcR7uIh2UVJqdxoOEqxRfs9bqYIj9BkuOXgYIO0aGMXXo4L6y
Hm8OzQwQo1wk7Rkm1t8WWwlTJJxjskk1pYOtjBPhlFIZIHE0vZjsmw4Kdmbp
3RMi/Ivc/d9PHTy4c5WWiicDpF45CvzaIvp5n+tD+H7CpNqJFRpdLKG+U8/J
kAEyc+yRC8y6+GtfZGIuVQbIP7pq9JVXFze3dQJI2+kgrzz830dxXayYDzox
/SsdFN/KlL9T0sW6dFeJOz8IB4R6jOsS40u+fxOeSwdl0W9Cwwd1sVCRN2rw
I+E+/Xe9x3TRZopF4M6bdFC7nPSk45QuNq3ORyqNpIMqx38Hm8/roqpG87vF
nnTQaLAjr7umiwVzzds5rYTPVlRVBOiiTDrXumddOmjRsXgXh+kixxWySpVy
wkVeYnnPdbEtr4BEUZAOOtZ90xnJurj8+9yT0QzCW+LPk/N00UfrUnJ2YjqQ
UoLMXlXqIs0z7gv3YwmbfKaMadHF+SM1389EpYPBsm5dVL8ufhvL5DYJJfz0
5ZXwSV3ULTT4Kx+YDkaafyQfftHF9Iu//fluEf547PPdZV30yJPOYrqWDgcf
FL+49VcXs/9Ze9NcJCy91+I6JRDfJ8sjFK7pcHjk/O7LjICnOy73UjgR9u1s
9OACjPt17jiNXTqY8QlfdxUBzH903IPJknBbgKyzPOCSz8AevsPpYH7+/exJ
LUAOO1c5eQPCTJrxNkaAzDG1I0Y66XCs4vkxSwvABD2Pn6dVCZ9c22N2ElCV
UeDhXbl0sKY42mrsCvjLMjAyXZxwVt5N0mXiGbZmTD0gmA62R2gVdW4DejmL
fNvkIrzuMq8WDPjyyaSM9P50sI9rSVKMJvKvCI2fZiCM/LYyCYDsNoPvXlKn
g8NXP0bxbCLfnizNtztp4BA+2XGgDHC1IGCZ528anFJU8edtBKTUUlg7s0p4
MkqFo4d4Fm48NyhcSIPT/suLzGOAEReeTm/PpMFZ4cNpDB8BM8/uq7ecJtyT
ab97ATBrevNdzkQanPOmZNn1C9Bzl74azXAaKIXJz/qTIf4S+NTj2pMGytPT
uEWFeDp5+ElfK2GFiFc39iC2UbCFqdSngcp9rT+/mBC1B8sKUyrSQHVi3uoq
G+Lc0+otliLCkrGFP7kRmaeVL4Zkp4H6baM9XoKIVhLaZLtS00BtaP3coiji
8Kf5goBXaaAhlNriLo3ob+PgQ/GcsI8F3zcFxOuVNZbBkWmg2b1z46waohul
FDKHpIEWT8HYJ23Ezb1Tmkn3CHudVDhFQrS8SAaKt9JAu4UuYsoYMd930KTr
GmHW6jk7M8RFraBjzl5poOPmajBhiWju4+xI5k64ljXpmC0ib2Sec4pzGuju
bfs37IB4MzLfweRkGsDpyzbmZxClucsOrx4nXCZQ2ueGGOjOIpFkngZ6NIN7
D11ENNEVWrU4SPjE7fOdVxBLP0MqjX4akPKlOgxuEPXw9ag3axMmeyvY4o84
JC9W6K+aBvpWwbfhPmJBdxMFyqeBQYbqm7oQxA8UVPJUkoT/zihrRiKC3Tml
AaE0MDSNflz5FJE9w572JS/hRL1F5TiivxxOBRfY08Bo9YdxSSLifzJrfLiP
sGFCqlw6YnR+rA3HnjQwjjXdyctBjEycPLZOmQYmC5snJIsQ3xkDy+vtVDDR
za7ILEe8zO8QWfknFQ5F2TCL1BL96+9oT1glPEN1MaWJ6IcQa2nIYiocVivr
5u8gznvfrJXvV8KhziLxvYia6RNp5z+mgul7prtcw4gNFE9SnN6mgpl841TM
OOL+k/UHT7wmHOipzjqF+HWROsZmIBWOjHM/ffIJkWKd/6FtF2GJnh+M3xBN
8+vZHFpSwfyW7+GIRcTmwy9ILnWEB0Uz6VaJ+7PmRXOpIhWOHhijCP5N9K+U
wjmgKBUsrwU6Uv1H1H+XzTw6JxUsuhRq7lHo4YD81d7stFSw4v7ISrZbDx94
zY22JhC++OjSbQY9TG7Ud/kUmwrHmrX7N5n10OLSiVsU0YT3L4j7cuihYzwl
m1hEKhx3fXF/g1cPH/LzyZk/TAXrGuOPl4X0cPnxg7abdwkz/NJaEdfDuyTB
0Wy/VLBxSovxlCXyqY3ZTF0jXGq59l1JDxkFIsyZvVPBlprc3E1DD19ZqVUe
Pk/YrjBnVlcPU3vbw4LPpoJdngP1GQM91OeT7elyTAX7nT3OHw/q4Rdfdy96
O8KWNfUO5nr4M+6qr5VVKpxMd+N8d4yoZ8j8c7wZ4T9s12xP6GHh0nb2gjHh
w+1DY6f0UMkkpE+blAoOCVekrVyI/ZX+NYrSJvxTMHjovB7u83Nkm1dNBUeD
oS9m3npo5dCtZqCQCqdi/KH3mh42PzDPSpEi/F36pYmfHg6G07pQiqaCk867
X+0BevjPjeWCuwDhxyGW+g+I+JXwymGuVDj9Ra2gKUwPdzvFGOuwpoKz6lda
3Sg9LFM5wZHHSDjkqUvtcz00NdsW5aNLhbNTpGb1V3pIfrjIO5qSsNxPnopk
PfzImbS6ZycFXO4l+ipl6qHQN7Kch39T4NyY2euiPD305KV9Sr1OWHxLTrZE
D6WdVvODl1PA1S8nLLdSD+cf/F1nmCc8YPtNvJ7IH+t47vmXFHATpNHPaCHO
t/PsjuA04avlCUJdelh3wbK+aDIF3DvPbCb162HYjnc8aTQFznMxW/ONEuO5
GOIn+gl7NhW/nCTyefpUe3WlwIWmiwyc03p4sW7nB10rYRZe9+df9PD4+22d
7PoU8DzX28YyT5x/UV/SoSrC1TcEopb18ARfO+uPkhS4SC9+a++6HpbvM457
np8CXqfGJ8L+6uGTq2VSelmES+4r0e4Q46Uudy6npIA3lVLkA0oSNjLNnU+M
J2z76fsuOhLe+xnAYhWbApdyI43uMpLQKjingTaa8LZOyvZ+EibdGHNvjUiB
yxaL//lxkTDQ/BpzQHAKXEmLs/vLT8KX18gqIJDwb5NyHxESMqqsWFD4p8C1
Q7+Z1iVJ6FvU9KXTl3B8uscleRJ+/LDi9vhKCvisWHUtq5CwL5zig/1FwvoU
wh5aJCQduakv6Z4C158X3ZlHEn64/yH635kU8J13fHfOiITfrev6Bx0JazOo
zRwm4bW8+OUMuxS4EVn75LQFCUOkWNYDjhH+7L48bU1CQ+XCdw7mKXBThePQ
yZMk5HtPnapziHBwR/qb0ySk+1FsLGCYAn7vrpLbuJJw8NOhTipMgVuyQg6v
PUioNnmRf1mT8N3hKovLJHR9VW/2RiUF/F/f2T94nYSyr96Yd8oTFpP1Nr1N
QrtZV6EqqRS4c3Oqt/seCTkOMHXkihLuDxUzDibhyWe3VFIEUyBAQCOwLYKE
2uwnvF7ypMDdK9+m9aKJevbZXophJ9zxTLMxloT9fuIaz5lT4B6nwXPtBBK+
mrzTFsNA2GP1Z3UqCY0UWPe92p0CgY1JZmrZJGxiTuFJ3UWY2Ty7rICE0qGf
Z/K2k+G+y3+UimXE+Qo+c63+S7gq16mwmoQW726mdK0nQ9CeE3XSjSSUUbCJ
fvuDsONujpw2EvrsXVH78T0ZHhZXXBHrIeFaP8Mj6q+EKV0G0wZJaK7qFy3w
KRmCbVikDoyRsMuHykhninBO84PEtyRcF7qVenIiGUL/8/rM85GEF5WLs/1H
CB/l042bJWHmf77Wqf2EU/tesC+QMEc+J7OnKxnCft3ceLpCwvlx3pfrrYQP
Slgw/yIhm3mhrGBjMoS/msiL/EfCnwe1nY7WEP4RtJuBXB/lOtNk7pUnQwRJ
+WwotT6eYO59WlGUDJHPPjfS0OtjeWN09FIu4bnH3EH79FEye1ZMLDMZHmvB
dQp2fdRbyDY/k0L40dLIHR59ZPjcuzslPhmiPr2U/U9QH5VENSy+xBJWPhR6
U0wf34V8EhV7mgxPHv6Z/S2tjx2slQ89I5Mh+m2G3jVFfTxMXXCpIpSwzPH4
VTV9PN9V95n8QTI8Ddj110tHH6d/vZs0v0t4tPjYEkkftW2oLZNuJcMzUaei
8yb6uGtC3XTtejI8v7GXfs5MH7uCL7ebXCHcV+fqYqWPVslltUkXkyGW/0Lr
Z1t9HL9KIfPPnfBlTn4nR32ku3qa3dYlGV60d958f0Yfr0u88a10IszhM37C
XR+jVa+Yc55MhrgLwoqTF/WRy0LrxW2bZHjZMBJx/Ko+qiMcm7EkvO/u/MgN
fZx488jf7EgyvDorZ3j0jj4u7GixVR8kXPk+qf++PtbEn+AUM0yGeLrwrUOh
+sT7g+xBDBJ20LTtiiTOh97oBJ12MiQUzZUaPtPHzW6Dp3fUkiFxVwxja5w+
3n/NofhbkbC14QVM0sch3o8Kl2STITl7raM+XR/do2qiliQIbyUf0MrVx6p9
PeYeIsmQYn7Uv6pIH4OuKZ5fEiCcsv1GpUIfbYM4P3jzJEPqRp5Kaa0+Uv/N
yPvFngxpJvZR8s36yHyNctifhfBL2qX8Dn2EYIdDtIzJkL5caSLVR/Qv+wPb
czrCeufSsob1UUWpRlmEOhkynu4nE53Qx4MufCkV5IS/tdinTumjrCM4HPov
CTI1L1UKfCb6wWV59uOfJMiO4GdJ+EasfyWi3Hed8Mf+i9xLxHhOSXOWlSTI
UbrVE7uqj8VPneWKFgg/kBRl+6OPh0hXjpl/S4LcN5N3o//Tx5tH4+pWPhOW
fvieaZcBnqtnP/d0Ogny7qhoPNptgA+PyZhrvk2C/JEvT/fsNcDjeXw+n8cI
izxZCWYxwC0hhTfhw0lQ4Ium1JwGyPwp10ejn3DvcmYgnwFa9E+YznUlQSFf
/C5yYQO0frpj96KN8KXDp/wlDNAx2euVaVMSFLX9rfkna4D0vD7MFHVJUMKe
xXZD2QBVFpxrqisJn7e+/EvDAFOyHj65UpoEpfWUA1fAABez1F7IFRJmKpX4
aWCAGuudfUs5SVB25nTQxUMGKGUYKVWQQbiC8dOCuQGmUn8t9U5JgnLaBm33
4waYYyF6ViUhCSpOesR+PWGABgu5mlsvCBdyrZ9xMkAn0muV9mdJUEnRbf7J
xQDLPbetHkcRPn491/GCAWZLhEU7RCRBVZYIzZS3AeqPT61KhxD+N+ps52OA
rNdsvLfvJ0H1kXsN434GqJTpRDcSQDhZnuvYXQMUyD3VmHkrCWrXp68NPzDA
wRP1EXd8CRtHDB8JN8AXEjNX7K4mQV2clkxflAHqHkBvFW/CS/PBB2MM8MuM
7l0WjySox9iZjlcGyJVunr7mSjjaCA1SDPCr2Je3Y2eSoPHr+svmTAPsa74g
UHOKsEbqb918Axw95nA1yT4JmsItrOpKDDD5iMxYsA3hDzsFGlUGGJZhqXfF
KgmaFQvoKusNMO2dYeUpc8JBJ88ptxrgh9UAlSOHk6B1kq6luMsAha/dqdE1
ToIWqWpeuQEDvOzZYKCgnwRt/q438kYNcPtc3YgIEB5mHZN4Y4C2F/4682gl
Qbtwm3zmtAFGkf1e269G+PrlcOEZ4j6Kqd9nVEqCjh6BueR5A/Sw02OmlyPM
O6jP/8MAtR7GvqKTSoIu79uJr9YNMJ2tXXCPGOFWqX+cmwb47aN5EoNQEnSz
vbWO2THAT/KtbMz8hN2DS/ZTGeKR5pxADu4k6KlT3fuEzhDJa6NnBdgJM866
MzIZomQpvZYUSxL0OUe3h7MaYkh2+j01RsLleoJ03IbYSL1SY7gnCfp3r9x6
KGCIj+L8Px+nIWyfMEkpaogicbO/XXclwUCBqfI9KUMc0L629ns7EQbI/0Xu
yBvifQOJfqHfiTB4LHvhlqohfiPnuGn1g3CmjfGmliF2zl39/eBbIgxvUqVe
1zPEFVEfUsMHwmZl2+tGhjhOvDL/TiTCSJLzicumhnh0+bCq+hDhNaaKHxaG
aGoT9+ZmVyKMGjXu87QxxNChAGhuIvzC0/P7SUO8+Ifksqc6EcYWubtdnQ2x
iEXMxK6YMPQIz7oaogadz2xOdiKMP/ENcPY0xOUzfppkKYRnRac+XDbECMMg
A7u4RJhQH1Nz8DXE654zZBVPCIcFRr+9bYhx8osebGGJMDmt8MMm0BCtrq8G
3QwkrPDx0Fgw4Rrzg5/9EuHt/UcZlo+I9XYcy8yuEp7QphiKNkSBidttdR6J
8E5ywcHshSEet6W/LudC+PaL6p4EQ3zC59md7pAI74eMWU3SDPGkEVU1v3Ui
TAn98m7PJvpxXls//kgiTPuk9ZEKDVEh6ZYLnzHhbkvxpjJDXL2myJsKifCB
h/y+To0hNi/3uUqpE/Yq/FDTaIh8AfWkSvlE+NjioKXebohf9vrmGkkQZqWP
Ke8xRP/Fy4lvBBPhs1vNquKQIS6NivJ4cyXCp1q3I0Vjhvj7615+OpZE+LKX
PUfmHVFvblZ65h7Cp9upcj8aYhvN1XwTykSYKbtyWvyrIdrprSktbSXADM2B
+vQFQ3z+J0f12UYCfD0xxCH00xCLRQ+U4jLhfP+rSb8McYjrc8aPrwnwjUxm
iHfLEFWv+zCmfCBs9U7qJbkRpsp6freZTIC5jJCHHDRG6H/XWmXfMOG/al+e
0Ruhxr+2pf7uBJg3/arLwmyEwV5m+x61EE58GveY3Qi7fz+It6hNgIVV0i8G
XiM0XaF7zFFG2PCnRdgBIyzYuPr1c14CLMYm5u8WN0Ldz84JRemEF8xoH8gY
oU3v1fK7CQmwpLt1dpeSEfZtm0pYxxCOymkKUDdCY7LHv2UeJ8CPGVuebR0j
rH0ww0sbQliNxtdP3wjf3Vh78e1uAqyElo/+MSH2/8PVvfsm4fdn5HyOGCG/
xI+QgisJ8FOeOWzNygito9T/PvcgHNj01dvOCO2rN8ruuSTA6vhF0rIjMd/6
bc0lR8ISvAkXzhphEbzafdYmAdZv9f6dczdCpgtrL+2OEh68cfyclxF6L7y4
bHkwATYOiBd/uWqEM0uHQ4+QCF8bpz990widKjs/mmkR7rrvNn3HCPVS+q8c
VU6AX9xKbfZBRjjHLaBnLZMAfy5+4n8TSuwnJdDolCjh5kg/68dGON/ccPcC
P+H9uhOjz4ywmTlu5SZHAvx1XVS0eGmEyaofH0fsS4DNmrhHA0lG6Dfu4JRK
R5jh4PfDGUYonfTpZN0uwk6/DbtzjZDLQPv+5FY8/CtNTzYqNsLNy/j690Y8
/Ed97L/WCiP0fddyiOsHYTsKO706IyQXj5uFOcJ5RWUNzUbotpWQ4vYpHrZ3
HJm0O42wZi33ztO38UBmxeBR3WeEf+Ljb7aOEs6o7VQdMfofxfUdTvXbB3Cc
ZK+sjMrIlp1SlPsjGec4OFtKSkXpJyWpjEISSpxh76KyyyiiQUmyIkUJSRSp
rIwGPffz5/t6ne/33PO4wKdzVPZcG+5fPupVvfjzAsUNek1ZiJekEGYygNcz
PVb44OMstCKnqa9s2A6Sol55Z9fgnjm1WX/MDqZ4fHv7y3HbqnMKv+Pzt8HK
Tbk4C/Gldn3XmrWDgyIbvx7Iz0IrJ8II+Yt2wHNpc0xRFm4rwxtqy3ZgfmSz
yVwybnY/Tw6fPcjsXv9pBysLCYxcdl8rbA+PP05kcGOzkKD51po0CXvYtf+S
25cLuC9/kZGXtYdFyS+KVqG4B5KOJyraQyQv//uUwCwkbLyzVUrFHjKV3qX/
9MtCIpEzWgka9lAi4+FKP4K7J/eCmJ49VAeyJKo9ceu6DMYa2cPRVL9Ha/dk
IdHQpa2Cm+xBKHfxUBQ9C4m9LE66aGEPviHGPNNOuNfvnuYFexAZVozfZ487
UMgpzNYevlNqxbogC4k33yv4S7SHWnHFYFuLLCS5xmtlMNke6pTQ6wcbcfvJ
7F9g2MOYlbmiuUEWkmpoqDu1xx7mlsXtq7Sy0CrZE/Iz++3BPbNrj5lqFpI+
rBxw3NseTshwGNWKuGvbOr79Zw8hip6m22WykIx4iN5Rf3uoV6JOPRPDvV/3
0pfT9lC2JfgqRSALyVb2fjwUag8j9lOCQ/8ykazApe3DEfZwsKNtr/+vTCTn
Zpa2L9oeUnn1rvLP4i4Z/tkfZw/XGtUTM79lotX/WOTdHHsg3ew9sfkzbioq
6U2xh30fDql1f8hECje+CzKy7KGU/C3v5DvcixkHX123B0oEa162OxMpORIf
uxTYQ3dmoHxtG+7sRaX2Uns44t+w8kBTJlozffM0sdIepP0yHojV497JePW8
Bq9nrv722vuZaG0Kn6HtI3tg3s25eLQS99fy2CdP7cFgRpW9rjQTrdu+fxS9
sAe5LYP7u2/iZklYP+ywh4p/AjNXcjOR8qcHmRav8Xq7tu2wT8e9+b/F6nf2
oDuyn8KfmIlUYhXpmz7g8fctrmm6irv/+e2KEXt4tqIlNzY6E6kZnRY1/moP
+pWigy4RuC9oHC6dtAfrzvkuhZBMpP7m1RO9OXw+Wp4Fj5zCrROhXPAbr29m
VU+FXybSCDEK1uRxgLAXPCORR3B3DLy5zu8ACu7jua4HMpGmWpyJqqgD9H8q
EzV0x33K4mrWKgfQPMVdL8jMRFrPx8aUVjsA43rfp2EX3EopO1PXOID1xRdO
DYRMpH3MNldOzQHCy256XLfBXT/7h6PlAIOmtbKXtmciHZnrrqv0HeBetpOf
rzlub3LlVRMH8PxV7MMwyUQb7i9LiJo7QMYTNX7rDbjFSo/GbHOAr1N/rYw0
M5H+vj1N/DscQH4qTk5VBXeF8PpIewfg5qyPllHMRAb8Ned4nBzgB3kVR1gG
9y7vd+eoDkBoKjRbIZ6JDItlN/1xdYDnxjuPLQngXn7COrvXAcSNNlv84clE
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
yvEEk6aNfrqv0QcvDGp6e8L6f2GV5S/QVflpnT6eUJiVfdfhGfpqxvq03Z5A
Zvie6u1MIrt2mI+47/MEF9kiCH+URAaTFE+q7fcEe2PpUpV29KrXzg8DPOE2
hXSeaUki73qvjaUc8IQ9yVoP1t9LIrsVj5S6huLz9joIXjahm+/yUDqI6xek
TIm4hc60kW2JRH9S5DqzHl2gUSaJ9gSzdQ708htJZN/lj2yHOE9oZlks3nIt
iXx4eltJnucJO16YNH6+ii6TfeOOwBO2JvfqpVxJIh8XBe3hi9E5mrD0YhLx
9XDQ3JDoCe84CUbtZ9Fj9JukU3Aeb/xuCSxBP/Mz6OZRT/Cs1rNSL0winzra
9GOPe4KkqXp31akk4jdR1GZzAuvjLaLTc9HnHYr6k+kJ1lZ2qpOyksh+t22m
NTmeMCpfJi5KTyLD4Qu7I07i/isXNzqlohdIC6wKPIFjmXBzNAX9wVPzX4We
oHUlODYrMYn4f7/8urLEE7ppslLrxUnks64oJeSsJ+Qn/lr3kY9uz1674oIn
TK9Rtks/jB5o8WH0kiewouQVbWOSSEC2UuaVMuxPdH7yx8gk8qWx3y6gwhN0
j2Q+yghHH77xbck1T/DLvdS9MQRdM7XgU7UnWFwqyP0amEQCbfduPl/rCVUf
zOYW7E8iI3tt/+5t8IS96do7t+xDP6513uS2J/Qrz90jtRu99jP1XZMndD6R
Wli2I4kED96ZUtLsCT8OR57z5iaRbyp5FT4PPGGozXVIg4W+OsTbqA3nKdl6
sJmG7u2s2tfuCdvLpAqiPJNISJJhff4jT3B14M4225ZEvleO+XI6PUE2evbm
gc3ovQ9n6z3F+p74tC7HBV3hTPOLHk8wHM8a3eqYRELNY0NzXnqCsXEfS3FT
EvnB8DSiv/YEhRqB8NZ6dMGSjln9nrAowM43EtAvTY7tHsD9Pbtv2sq1SSTs
6fPFJ957wq7zOns+WyWRn9JXe7Z/9ISKFVWxZy3QFyWI1T97gvBFgPtOc/Tt
XpaPRnC9n6a+nrssiYTHWL09+g3P4zsOJr2LksivUpXUzT/xeoMfFuaZoHcM
gvKYJ/gOlb9jzEcfrxtunfCEEr43W9swiRycl56T+M8TxiQ1Kc/1kshvVz9H
J2kKTHsXezBXGz18wy+FyRSYUxykzZ6Fnj+nuHkK+pB7uMHMJBLxYNRdqEgB
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
YoJhvGO+6Tt0YVxsCJcJouzDx8feCkn2ZcqSFTuwnguXDt/vE5I5z5Y+H93J
BNlZKy5mv0aXmSK5socJE+4hj31foS9+aRngy4Tmzk6OzQt0j4q3S/yZMF60
xl2lR0h0YhNTPwViv9ol5950C0nuGW/b88FMeL+/aE9FJ/qj1Z/3hjHhfmFA
kuixkORNqOaaRDDB/WT7TEaHkOjOf+/4LooJf9POTF7Wju7W8Ks4hgk+919R
ZdvQD54o9jnMhP//R6lPH6AX7N9mxGcCZd53s4v30Fs2SvcJmXBMKrci/i76
d+3L+RImPBOY51Gb0PW+MTlJTDAxyf2w9LaQnLR/MFXvCNZ3Z12u3E0h0Qsq
uP7iGBM67kRefVGHnn1wV04aE+Y9v760oga9abMGPYMJu9YxlZOqhSR/eMHt
Wdk4Dycd3X2uCYm+1r+A7lwmrDy9c3xtpZCcsu3UPXGKCVumpE/RvIq+70LL
9tNMOJBSG/blipAUHOdFqBczQVfhltP9S0Iyt45u/KiUCWVOovjCC+iDyzuP
nsP7rfquG3MOXVWRt/kiE+yrP+nQzgjJ6dWvzZSvMGHJHY/YlSVCYrjj2qvW
cibcpmnYqRahJ6UkJVYywS92uv+nAvSqndZO17E/DgvG750SksLete8VapgQ
9XDDUHGekBgpapxormNCoI3zGl4OuvnHDcKbTDhaP3eEm4XOvD26sZEJ/UkX
5CFDSIoFWadk7zLB4OPDw7rpQjL/cqDr7Xu4/+eHsP+koj+1n4hrYYJvalTe
86PoMvpn4T8maB5rJTUpQlKy6Kfnv4dM6ElwWZ+TJCQLPNom1z1mguTr69Ko
BPSYovKoLibEbwwIYIrRz0RxrZ9hfaa8zLQRCklph7vy2HPs9z2Vefp8ITGe
MK299ooJ2kbDqtLx6POk94W9YcLD63ROfyy621Mti7dMKLQgKnejheRs+OU7
3waZoLA52uBslJCYFgiDy4eYMNj4NzUpAv0Ba27QJ3x+ZvGuwHD07yvbl31h
QuMHWs72UCE5p6sU/XmUCWcdpZevDhaShfb9Cy9+Z0Ir67CxXhB64I2nvr9w
P8+8GSMbgJ59TLhwHOd/V6HlkJ+QnG/cs3LoDxOit6ltbt8nJIuGoa90EgsM
Br40V+5B19Q6ukuGBR+Xzi/I3YVu+9lmvhwL2K4ZPTwfIbmw987HfnkWbNy1
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
zn5Hpzd7eEROfZp6xgLrK3aJaPRuHmkv/VzaZ0mF+PKWbvNdPHJlX7O06U4q
XNEK7fu3g0cO9pW73N5FhSn95fJFljwiH5jxaO4eKpjppwR4W/DIG/FLcpS9
uL4z04Ka5jwSf4vt+WQfFYxi1J5+NOWRQwbuz1SsqeB+f1FOogn6lweXcmyo
cMmussrGGL2T8YluW1z/ZyVRse3oJ3RfbDtAhaDaFcHVBH3kEpUbB3E9Hi+V
2Nt4ROE/wYC/h6gwYrpgyHArj7wtHG04epgKVtWtX8Y380iCZdeKcnv8HlVV
KteIR+ze1wYtPUqFFYlfGcxN6E8Uvj7tQAWTHpWh5YbohW5qvTtGBZfSyutd
G9Ffi+RscqLChbSSoPgN6Nf4v0lwpsI+dZEIm/U8sqTaefUUhQo/nyY/EV/H
Ix2H95w5RKMCbf5pzRf6PJI4Ytj1kI716h9ZHrqGRw7zV6yTY1LBN/15COih
V5CK9HOhgpj6Ko8ZXfQ5fz62ulKBGZERXqyDfnu/wXp3zCeqwauTq9C3v46K
86DCeqtGM31tHlF0r/w87kmF61+pA8OaPPJuNnOLjTfmTcNIUZYGj1y9dDku
/zjW/3X6faY6j9hrcQelTlAheLry/YqVPLK00mP7cV8qiJwfW/dJjUc6bewS
mk5SYeD3j4c3VXnkWr/J99X+VJgdKWc4LOeRI8F65lEBVHilYGKyVAW99NKk
4VOYrxohuzuU0acJ/dx9mgpnGpx58cvQG43vzAnC+nzc33dACX3T+5SFIZhf
RYInZZbyiBLtxZQbiwozngV6LUt4pGvq/r46NhX0k/vkYxV45PqF5HQtLhXe
iMfpWMvzyFHV838jeFQQCrzvKSWHvihg/wCfCvR00tkkg34XNdviDNa3wyq/
6MXoP+6deycM85zptXnfIvR+RoeFIqgQHjOrKynNI8oL1O/Rz1LBPKNtd5Mk
j3y4IS1cHUmFKnZ/fLQEj9xY99dhxXncj8FVklbiPOLwfOA+/wIV1j1OLJAS
45FlDq0Le6OokPJWg9e8gEfejz2iGMdQ4ZFkQ0isKI8khWWXpFzE+2TCSbMV
Qb80XmpOHBWe7Df8LSPMI//d4zGdLlFhv/q3U+2CPNJt6lX56DIVviXFrkiY
zyM3Ow7L/hdPhazbqjOH5/GIo5eZByuBCrqqcbNL5/KIyjz9qveJVEgU6lz9
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
vTi/Vril9CXxyQnXfUUafS5gq/H5sl4iemGDxeFfsP+fyT8KjeeTrpuqlO/9
eP8IXDCnPRb9hkUv93zF+43RI/8NN9GXTsnc/4bzK0lA1y+aT1Rs+xliP3De
nf61tPE6+h/1pZRBPM8eH4011/gkxe+FfMUQ3j8l4105V/nESfa+25oRnF/n
TfuqLqN/cL0i6Cfm25ARphLJJ5+I34ovv1zAUV3C0TMCfSPDa8cY7nNhlTNv
L6Gn2laljrvA4evx8UphfLLyn6nq3N94/01lCbmHoL+qxT01iffRmYzYN0F8
cmuNQv2rP7g/zmqfVAjkk5PPRNatnHKBI+Uzdq7+6Pf/uuA37QKLPohdLPPj
k56+jubuGbxPeu1rk/dFz3mrCbMuEOhZfNLVB73k44AkAQrIZdgrvOHxyarU
5I//BCmwZVR6riIXvX64znEhCpxS+6zozuaT21Xeoc/nUmBqealzhTefnDp5
qltRhALaL9I7l3uh/22px5tHAane8GDP83zSe2nrfx9FKeB+zsXxvTt65dV9
W8UpIGG+kbrKDf3jxYax8yngbNWVwjnHJ6p7Zq7+WUCBhnMM8Xom+s6Br7YS
FAi8UnNrHYNPUj0aoVCSApwkAbofjU+cRYuj5RZTICDo98kPFPQJD4a8pChg
uiUjTNuFT/q0o3c0S1NAI162J9QZ/ZuL8Vtk8O8zN1B7TqE/enb0miwFjjn8
WLHtJJ+ojdjtGZOjQGyKucg1R/QBO1JsllFgxE1fcfA4n9xZpj2ZI0+B9vJ8
p50OfHImS9FKSpEC2YlFzUlH0ZuK3nVTwvOObuP+seOTLy2j07XLKWBepmNl
Y4ue0WWzUZkC95dEH8g8jF7w3f1IFQpofnYMnHeIT1bfyBccXkkBBf2Qficb
9Oq3bC1VKXBVVpj9bD+f3H0Z8TBTjQLM4BoDOWs+cTnIFlm4Bs9/rWuduyX6
r6cdGGspULdLc3eVBZ/0863z3q2jgHhOdvTaveilDOevX4/x73KSCdiNPm3N
yTANPE+3/qsucz5ZYyj95Ksm5uutZuK2nehr/0nu1qJAeab+vWgzPklz/nYm
fSMFXt/e3zu6nU+of5uez9OhgH2pq4W1CfrIkiUumyiwYfV/nzMInwysyqS/
2UyBwv6UB2LG6AtjXqnp4nO11JQzhnxC2RewLFCPAqEz4W9Kt/KJes8518/6
+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
4p5anN8D3ze0tuH0VcgrxWbXqVAwWX6cw8gf8rX+HNJqsL6hGtbafiz0ydLN
JkCdgo88ZTXu9oX8d8v8L3spuKBjg4nYFRayu3qI+6AmBW+rXJjk92Eh0a3K
Z1P2UXCeuGoamzfkM7aVrNKiYJPiEmLOk4UeoDUbzh6g4JOaQbajlyHfNXOu
Whvq0S7etocF+YufynfoULDM8A+iiclC/cuNG30RPC8wKK2ChPztwoufMAVL
/LOcyiFYyH5n8gvtgxTcyu1oksKAfMUNwYRDFJx8PqUx2gPyJ1iUP3qwP95u
tA6is1DiiGO99WGoL44Cdk8a5L2Oi5QZULBgnW/9JSoL7eDTYggbUvDVVo8k
ewoLDaTKNF0+CvUxcCPK1B3y+wQkeowo2KOy4b6eGwudbf3L0jxGwa4y4lWa
l1hIwvHrmzvHKfjPh5gFeVfIz3fKzJtQsOkDCaMdF1ko5Ua1j7kpBauq1hYJ
uEBePLOz0IyCZ2yY+zidIV90R37zKQr27tfsXDjPQoOG164yzCn4mC9H0Pdz
kO937+mwoGD/VR9ODDixkAPjtLKqFQUXy+erdTlCfq1+UNRpClapDVdqdIB8
wp5PP6wpuPzWed2Ksyz0UEVE/YQtsPV+t2dnIN/AdSPXjoJ3jnPkPrJnIUmb
n4MbzlBwGEc9d5wdC32Z7t9HOUvBq5hMn5u2kL/eFNnqQME6XFu5rtmwkKNw
8aiiE6zXteSnTGvI56T8F36Ogp/mbzx36TTkD96MmTgP6+t0UeOsFQuldl+e
OOpMwW/OpIibW0Le7dzBDBcKtiFLJI9asJDU6hNx3K4U/Jn2RBuZs9BQ7IEf
LpcoeJ04naJ+CvLyOw0a3ShY0XRDqdxJFnKq3pi4k0KBM9FHWMwM8qf+zQVR
4e/k89ubTSH/ddxolEbBDK6XUutOsNCjK+8e6ntAP7G+1bJyHPIbXy4+YlCw
OZK++esYC0mnZ53gICm4Ktjz/IQxC40cuJfuxKTgX5w3zQeNIN8W8K+GRcGv
w23suo+y0PnzVHNJT6i36UGfVkPIL1lnXfWC/ssmWlh7BPIRh9kHvSm4LI6b
vcyAhdKkVK3xFQq+G/bo4rPDkC8VzUvyhf2d8W3ssT4LyRzjXrviB/uvrefK
Az0WGh2cs7e/SsHz7ZcUYg5BnjlQVHmNgvWDk3+EHWShC+tbeESvw/o0Mlqv
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
Jv0=
      "]], LineBox[{{-0.532570215131383, 1.}, {-0.5317593765725827, 0.}}]}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[5], 
     Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1: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
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1.0000100000000023`, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"\\!\\(\\*SuperscriptBox[\\(\[Eta]\\), \
\\(r\\)]\\)/\\!\\(\\*SubsuperscriptBox[\\(\[Eta]\\), \\(c\\), \\(r\\)]\\)\"", 
        45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"J/J\\!\\(\\*SubscriptBox[\\(|\\), SubsuperscriptBox[\\(\[Eta]\\), \
\\(max\\), \\(r\\)]]\\)\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
       FormBox["\"0.50\"", TraditionalForm]}, {1, 
       FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{1.0001, 
       FormBox["\"1.00\"", TraditionalForm]}, {0, 
       FormBox["\"0.0\"", TraditionalForm]}, {300, 
       FormBox["\"300.00\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive["Label", 
    GrayLevel[0], Bold, 45],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->Directive[Bold, 
    GrayLevel[0], 35],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"(b)\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{1.00001, 300.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.91341871729278*^9, 3.913418734807831*^9}, {
   3.913418769971492*^9, 3.9134187751444263`*^9}, {3.91341900347586*^9, 
   3.913419010699688*^9}, {3.91341917368427*^9, 3.913419177775751*^9}, {
   3.913419405987661*^9, 3.913419442746472*^9}, {3.913432451916122*^9, 
   3.913432476095653*^9}, {3.9134325445299387`*^9, 3.913432550123901*^9}, {
   3.913432700003483*^9, 3.913432705025955*^9}, 3.91343277750665*^9, {
   3.91343283741996*^9, 3.913432846379182*^9}, {3.9134328808740253`*^9, 
   3.9134329073859377`*^9}, {3.91343295048929*^9, 3.9134329623272657`*^9}, {
   3.91343321024545*^9, 3.913433229894864*^9}, {3.9134332604183073`*^9, 
   3.913433278173774*^9}, 3.913433473533186*^9, 3.913433504486813*^9, 
   3.9134335771021023`*^9, {3.913433613583193*^9, 3.913433633419395*^9}, 
   3.913433939109322*^9, 3.9134341490401373`*^9, 3.9134342340018177`*^9, 
   3.913434324245201*^9, 3.913434979771688*^9, {3.913435077974887*^9, 
   3.9134351009777*^9}, {3.913592200479007*^9, 3.9135922065468607`*^9}, 
   3.913717546772703*^9, 3.913717796730081*^9, 3.913717935438599*^9, 
   3.913718058059992*^9, 3.913718229025011*^9, 3.913718664957097*^9, 
   3.913718972421603*^9, 3.913719266211165*^9, 3.913719561185504*^9, 
   3.913719667776268*^9, 3.91371979018721*^9, 3.913721826732826*^9, 
   3.9137225975003777`*^9, 3.913722723885956*^9, 3.913722851732581*^9, {
   3.913722988232503*^9, 3.913723024292025*^9}, 3.913723101799901*^9, {
   3.913723139787156*^9, 3.913723143576935*^9}, {3.913723410561513*^9, 
   3.913723472688353*^9}, {3.913723523955497*^9, 3.913723540421769*^9}, {
   3.9137237616331663`*^9, 3.913723783572756*^9}, 3.913768335374833*^9, 
   3.913768373380102*^9, {3.91376844715388*^9, 3.913768459161697*^9}, {
   3.913768503938779*^9, 3.9137685397574472`*^9}, {3.913768581810027*^9, 
   3.913768602157881*^9}, {3.913768632575026*^9, 3.913768730493997*^9}, 
   3.9137726067263947`*^9, {3.913772909312249*^9, 3.913773004137484*^9}, 
   3.913773037521275*^9, 3.91377342367024*^9},
 CellLabel->"Out[139]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztvQeYHMXxPty6vd2TdBISEkhkHWBytIkGDDI5GJucozGYDMKACTYSwmST
wWQksgGDyCYZCZNzNDljMibntP95u9+eqZ6p3Z3dnRP3+z7ueXoQszVdoaur
q6uru9fedu8dt99t27132m7bntX22nbPHXfa7g89q+6xV/Sq1M+Y0lvGdDza
Yzqjf1eNqfN415jW325h/788if/vy1i87XS/rZ/67SX71v32Req3ZfG2ZH/r
wud7R+XfUfkoKu9F5Z9RWQ+/djiYNaLHb0RZxtFndrf4LYWlY434c9+Vxguc
psPB7S/h7Kv1pwa3pGh49HjI4yk7iq6PHiv6dyX77NyXBEbNaqbErytfRY85
BP0zReWz+OfSfcaL1Ve3wVTk7XTx3lQchx+n4F83MYklMPKpCVqn8xLB3FkJ
Y19Gj/kCxjYslrH+KmPGNcCnMSFl9IwzorJrVE7iT14D7xC0e5nsLGVCDVw6
eiwYlW9NwuA+8ludwXldjX+NHjewmLJ9ls6XX8/i4LaXmIllawnX2ZbAumoJ
bOZEIpWfm/BvLiOFWbpd/kaBQd7/MqHAINjrU+/uij/xP2wk/i0FdocUBLvc
fyVmCmxhkxXY3yRcewKrqWH9jVMFohyVFUr5+NSntyfVWnjfyzx7n0ePuQPh
bNymcNBl475KSh8qTjj17Erl9tRvN0dlIePNSHk7TTgVR/YOkj120zGS7PaE
M6uDu03CUT+/iR4De184pfmjx4ceNwcPGCn0IajNCUbvbtSeGxXSbzfprrVJ
mwI6SsKRml9IuFIvCIijzAzR42xDn2ZAbUlcokjiOglXiCQ2UCSxdw5JHFJH
Em82koT7rQLTin6zGesDx6+ZuF8EQnGoShKVh9sqI5R2+8+silD+kUMolwlK
tzCZ5qtMZ8I/gCaWtnNZ8dNqxg+PlVlTX0Fs5yeEBWKijgHR2ylGPzDOPbN/
7YlpNgf3RpbF0mtZaippMYFl+Je0GPjPlSaQdnmi8YJ0f3Ysde3dOY94f1Ii
h79KzByn/pDCfLV966i6OPXbE1G5J6nuGlldNaahFXENdXD/MlmtGi7h2PGv
VOBmzjJXkmL17up3xlnac8iQ83o7n4ke5xrntHwX11qGF1sSFa+fYKx8Hz0u
ispeUdklKieawLM/SCFo3SxBpbWix/IpZraQ39pXtXzLvKI9QhHZahKOot1f
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
sDk+C0ThaA+F8/ESbpCzOGhdRL5gNWE9YUXhrW2Xm8sDBZeBfel0lCAVamig
zM/bf1qHB54Gls3XIJf7k0tMViZXXX4UKvCTmG0Vto5V2D8kCzcUIkGsBgMe
RjikCcC6T6i65CfE5bHkD4O4Munqqboph53U5hbJn4GdUaRlFUXeLtPwTiTW
2qVZ+aPC8v4K3KkKXJxlgL99ctM/VtB/czXbpMgE7Qia1G1nK3UoNByp0HqM
Aredop2IK8MYwu5g9R+avnVUjs7NysG2NvduKaUpVso0xWT7z+4KWx/thwgg
tAfD4gXUTHQYxE2s48KOOEZh9YIsq0N+TRh0vrepjfClsKKGZvQrahhiQSCG
N6xE2vDJCbl5Hy94n1TNNuMtGd5d4vzAftR6OF3wiX5LnUaKFbo4Vq4RXKM3
f7TSmpsqorhJgcNccjqvTmfnZg2OiI8xwyNPm9bsUOFYK+2j0HWhQtdoCcdp
4WfUQvt3dW5aDxO0nqI0w30ZWt31aKUtFFonK7TOm9XrbvQcLIJjAoZZ9mls
Qngs61Kt44XH63LzYvPpeCgHJvqfpOS+VoYX16ZdaF/kVC7F7oQRFx7lTqL7
/FLh95ksv/2B+AzqN+IViI0i0oCZM/RpSm52jhLsBN4nmwb5ibH9tP91waYB
MKxwCuAgbE3RwieDtYSj9IWQyQ1Kk82lsPqJhHsmNw82b51LRaD10VST7JRp
Ehe07ILniajkuKoLxkC1EKi1IXSGnp9UaB8oaXdOZ/lz8o2IGpKP7eTk2dw8
HCN4WExpB1Q/MGgHWsGlFTl+KhuNU+kgUFJyXQQ2AzN8DC6Y5CCX4UDKBJMJ
OLFDfV0v5ubleMHLSQovWa+PvIyUwG5tqTQsK/+uI6m4WP9bn11qFi/zt3LT
CTfLr5Hi0/dSerNQhk6Xf1WGycCPMCP7sBvKyennKR5+mqmoX24iTxJErqUI
89FM3X9wQgKRGDax8Lg/OyeU83XxMWaDcTzO78RWFGrNNhg4RTBwvsLAmEzd
bpG2C2M9DPuvKWUYvCmeAecelXqU3nmdROIC5wPAKNwo9PCJVecUwd2ClwtL
lCy1ihS2BoxZNfaZcVXnC0n1GZlhzG2vLCHP+7uUhFfOMjJIztOw4oapwE0U
BFoUc7tlqfpoRVvFoNz0ny7o1zTr9hoNU3pE0ZDfZ+nvROPBDYHjFq8MTpeb
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
\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"d37e7b2b-483d-45d7-af98-2802e5dc6f87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A5", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "A2"}], "}"}], "}"}], ",", 
      RowBox[{"ImageSize", "->", "1500"}]}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Red", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", "Dashed"}], 
           "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Red", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", "Dashed"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Chiral(VP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Helical(VP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Chiral(VTP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Helical(VTP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"LegendFunction", "->", "Framed"}], ",", 
        RowBox[{"LegendLayout", "->", "\"\<Row\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.0"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.913772806881567*^9, 3.9137728084418383`*^9}, {
  3.913773117647949*^9, 3.9137731448237762`*^9}, {3.913773431078808*^9, 
  3.913773458171369*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"dec8c92d-1368-4f24-b2f0-ec32913cc617"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {InsetBox[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], LineBox[CompressedData["
1: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
KVPX70KcEE+KiLwKviPUzTJ8S/G//fkfvLg8Yg==
            "]]}, 
          {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], AbsoluteDashing[7.5], 
           LineBox[CompressedData["
1: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
fwzyi4g=
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], LineBox[CompressedData["
1:eJxdWGk41G/UVpZIq5S02aNSUZay3bInpKIitAgtQv7SQoqK0J7QRkUUIvua
LdtYZ+Y31oSxM2Z+EkW2d94P75f3+fJc94dznXOf6z7nPOeROuN+2GkhDw+P
yQIenv+9///Zo3R3jM0XjOAEof2ixmdwe1zsIn5FwmNn7OQWfU+EVxcnKMZ9
gLRea26Lgw+W34RdN+UThk14a4w1A5C8UrC6uCcZru6xjTLlgdhjsPRfz/U0
0HN7eWfNQpHgocme9s3E8FAlo4H+GEqPHuko+OTAOS3spNm2Z6h8I8A555WP
d7vpa7e6hsH9Tcz0t3OFcPutvX8+MRwvKtLSVyUVY+XyEonq4Uj4qMdFHpYq
hSFzvuK+wmuwJJOS1od9h99lc6e9Tm/RE1BGuvGV41VW1Ia2d9E4a0+eNvOs
AJp07mWw38H9qyJvxs9KVG6ck/Fc/AG8vr7ERyMKGNeI8djNMZAs7qBLfalG
VXn+/AG9WJT7HlmgsLIWovGOps72HzGW2uaQ41kHqwjJlrGrcUg66cWi0+px
r3fo8+jTePzRe0JoilHx4+mhQofET7B9RpocKaPir8TNlVpln8G7qaVxpwcN
zRqb3ga1J+BX3/4btHV0aJtfPK47ngjZYQO1PWV0LJsS2+Mk/AWvtlKEzroS
UPYy3zEhlQzr+KZxq1UM3KJ82Eqqp8D61KW/i3MZiPFbvPTz5q+ItH64MtC+
Ed4ht/5blvoVUkFq+hU8TXjLE6wlr5kKcvzcg5oPTXBUjWsbK0vFgmhZ9gv9
ZozvnCr0sEjDsXvnneR6mjF7Wc/mXXMafsWrT1z3b0FgSruY/6l00AQev3m+
qRU/vHNcRIbS8ee9+wnPvFaoVB3LOHI5Aw7XW5XXWLeh7Q3FxWAqA8IPayVu
cdpwx/7jcM/tTMy0m8h9CfyB+8YCscqCWVA+b6H3bmM76ooDpxQfZyFR+af3
8fR2sF5qHmxcnY0LahOljcY/cVInZdHWN9lwuxq+ee2Pn/Cit9/ZKp2DrPHi
9xKXOnBbZ5tMU3wO9iV7qYzMdkBD/py+4vZciMSmdtx82IkqeqmuYlouRFma
lsNLu6D0r+JKo1oedD/0aF2z6gI18JimfH4envw9mHnuVRcCNT8PSiIfC1i3
c/M7u6CxX5soKc1HmK/3/suyTJjU/7AQMirAgSQlp+BzTCTpPvryp6oAMjdS
lvAlMbG19CWCD3zDxv4xMDlM3HK4fqS47hs0Rv/NSSp3Y2BXi+rrg4W4Flm5
/7tnNz74hSqL0wrR2nFcsiq9G+pvHjzee7gI9t+TA3aOd6Oieyx8ml6EhUYU
j6ndPXiU7W2UsqUY1c6fhuX+68HmCw5tX88XI0PObDQjtQceNk3yAZ+LURyQ
4R9H9sDmdWC99FAxyJvMqH+KvbDQXnPpmUIJ9okRxqnne1E/KP+e6lKCdItg
3+qPvbh74+iin3ElMJHl0zZi9iImVFkzu68EPJH6wbIb+rCTvbfZQbYUbZ+N
Tzsd7cPy1R1exJlSNNmsKBd80ocoX+8k0felmIh/m7GM0geH0X2rpTtLoRpG
7ry6oB8x1NOG0xu+I2KTgLre3n506jXRom2/Y6Mxk+Lu0Y/DR25YLI/8jrKl
/oPzcf3IFOCx2N/4HQ89+56Ntfej6MTIaXORMty4soxiLDKAVVrP160/WIb7
a2ZC5o0GcMhu1aK00DLkWCe3iPsMgEf4cObKqjII75ZLC08ewG/2n9S93D5x
K/mUmDdzAE1fXO5v0S2HWNUpwZxVg4h8/L20y6ccDbfk7tkZDkJpumPIIbsc
XxqTHzp6DyKV1LkXM1aOBMqMVF3cILocRdcnb68A5cRyvZdNg3B9rq7kd64C
Sx70syv5h/BLXcZkVUwFPGwD5GxUhpDyhex1/VmBPxXdg2ZnhvAfr0VQiFgl
3tMW7Yl5PATriYDki4cqcfHGLxG7giEU0063LA+thG1J9PWrg0N4bWLs711W
ifNxIq4Tq4ZRISMqGz1biTdbTIcbdYbBHJTXCFarwi9To/G154dx1/GEpop7
FZwXLwopfDaMIrHpt9HxVZh3eZBYkT+M/W9Kmqo7q5Dv2HRcuXcYDT9oxzPF
KIiY7X06J8yCkHbqC4eDFESq5hzdsZsFvtR9s+WBFOQJW8YX27AwE5c/O/yN
gtlbSXcyb7Fwry+et26cgrPP6lhLPrKgYNJ6/eK2aozopXdWUFgQO+1MKT9d
jYin9id72Cw4z32w+RFRjbN+tRfOrBzB4mfiTxLrqmElxLPQQGUEWr53qaq8
NXDaNSl7/+gILqtX+l7fU4PIqQxix7UReDkNjF+5VAPSQW3ZnpcjaC/gj9j6
oQYuZ3wZMbkjUGs6WhTeVIOFfEGbPVtHYNeyvip3cS0K9Y/yxUyOQJL3tdBz
nVpESQ1fUhNj44PY2jYpz1pEv9VzVFRlI+5t7UOnj7Uoyz7Ze/cwGxL8Xd72
LbUQ8tj3C+5sKMac7BMUrsPlioFg+1A2GMFq8i7adZjOO5z8M46N0L1y96+6
1+GTeYBDcQkbk9tyD+19X4erft6v+NvZqFQzqEmk1+Gc+c4zXybYEKwg9tbz
1uNGXlJm9jIOZkfku6JV6pFazgmTlecgyixhTsKpHoLuE/O/dTh4X3+WMH9R
j4Cs4j9yRzl4pDL5UqG8HhJvLK/nuXJgdf1ZaMp4PX5KfAxKDeCAydfXwZRp
QNG+QinhSA48v66rKjzcgNIFb4wrkzh49qrumqF/AwZO6kz1FXP9U2YkrqQ0
YIfdRzUXBgetbxcMm/1sQOQf6rzpAAfm9/R4nPmpkNlZYvV0ioOlhzTKJ9dT
QfB7q2oIk5hLm7Z22EVFzA3yveEGEmeVlfXDTah48XD7q3RFEv8Fr9nwzoGK
RB2lTXe1SCws83Tz8aKi++Hf7dkHSGQpPquQD6FC2+cOxcyWxK5tuimx0VRk
CzBGDc6RODVbnPorgwprpaGY6CskDhyusV5WTcWaydJuuwAS6WX+Uv86qJi0
P/3F9xGJZBXXlxm/qZg9XcY7/5JE+LyHrrYgDbJ8I309sSScV9dHPN9Ag5tB
y5FtKSRqh1dKZCvR0CYdbN6YQ0LCWNQq3oCGc9FzdGYJCTM2J83xOA1ieXt6
LatJcDb9yWRdpGHYU91fmk4iafJro84tGjoo/z4fbSXREUe7b/eMhonCAAd2
J4n4y9sNDD7SsPNwQ1R/H4nL0Rk3JrJpCL7TdUGPRaJZ8cJb92oaFh3JKuUZ
JbHI5sT6tHYa4oot46TGSbjxR5wu4HDjqU1Z/fEvia8Dsj8e8tBh4U2sCP3H
9fdgZlROhA7rwvwIYobEW8UZobsydNyMPZfgN0diz4HOkHgVOigKbSYP5rn8
t6g2PTakQ+XAiv9muNie55iZ1lE6yoWFtzRw8Q4hhwNJznR4X6i+wMfFLHPx
nZ3edJi6WOx5M0vCUJ/3ECOQDt2FEU/Dp0nYbVEXDA2nw0Yz1vv3JAmlXc6f
F8bR8ULEeyBtgsQh19pAjUw6fgUt6WX8IrHfQ25UmfsO8njt4mrDJoGGd7sG
6XSImAfd1h0ksWZfU6Qdk47mNxclQ7pJPH2Se+ERSUdBiKiZWjuJL/qP2L6z
3HjXBPAaNpIInGtzlBcmMKqbYZRVx403ym7pw7UENIUSV4eUk2Aum9r8RY5A
kruzR3EBCdHa1OHAXQS0vPqP2qSTsJIOfywOrv2abRSrzyQUxDL3nz1AoPyY
SmVaFDcffMtNnY8RKFRbeOi/5ySudAQWbnIk0JIe5hweROK4AkF74EZgTQNr
0QYfEvmhbokp1wl43V+kyufG1c+6++6BdwmMdw6wLU79b3381lnxmEBk44Nd
M4dITM+tUTd7ScDh/J+FS/RJ7Pv48/LeGAKGr2VP+u0msfrfB/7mJAIHL4oZ
H5EhUd4pzS+bRcC3tT4vRITEFhWXWxJFBKr7TPNkF3DjOZJ5q6qSgMaTUEMp
koPmrT5LN1EJNLQ8sbvdzsGRNk1FiRYCd4ps5/dROHjV4fOjupPACYOh7c6Z
HCR9T1ojOUDA2kVrcOQdB662axs3cgh4KFjtaArl4LpbjdD3cQJfg5R4pL05
+DJ5K2bZNIGV92j21JMcOFYHPpjnYeC5pLox04Tr/8vXhDABBtRtTxdYKXPw
4q9aZ60wA3PKlt+2inPQdzdGIH4FA0PxvKaOPByMS+dMSq1mYDzf58xcPxs+
ttb3tcQZkHHLEZipZUP99ak7ExsY+K8wV80ujY300s9pByQZGEi6NbYpgo1r
Uw2t2jIM3Ni7WMPAh40Splx2tRwDu87aLK11YOOWyAveX/IMCG+/5Jq1j43T
rbc9U7YwIBBmeIxXlg1vnU+pfNsYkHvZXZfGz0a4/qLzJBc7aRlQy/pH0GCT
reGmyEDFzQsOeyu5WKCh9BYXm9pbX1sRP4K6dN0IaS7+1ca3yTRwBF+jc4yt
ufYFf64d7D87gjD2dfs1Wxn49DV1SZ/eCHKrNE6cVWAgUzDF2khyBDnh8wXa
mxnon/PYuniWBR+lib/vuHzUn/8NUWplQX2d6Y0HXL6J5XpXczNYCEkTSJzj
5mNf+GEy9jELOpa9QxNrGfjHJ/977DwLR4xkHnuIMkBfWRwQo8+CZvlJluty
BhgFG6OyNrCg/8TJeEiIgd/8uoaKE8Owubmwt4eXARX25mt8dcN4n9k8ZTvL
1asnXQ2xw9BI2pJr9ofApnA9//Ybw6AWJ+/P5uqj8tjVY+2WwyAC7Koj+wk8
zfbI1dk8jP7g3YfInwT8MnfE804PIb1ZiJXDIPDoUKrktoYh5GQdef27mkBR
6KRc5och2AqxTrwtJiByli/7/ZUhDE4zNmRkEghuYxCjxkP4KSxQpppAQJo8
7/tBfAgsa9ntklEE2t9//5o1PAj5DSZbLj8lkDPG9NieP4hMrzy/zdz6y2GW
FQiEDmLVyrRBbW8CrW6uYXq2g9BZukws04XAxlctf7sUBnElc1ly8HFufTgK
DTD/DCBEaYlRrgmBxTVzpw3LBrB5ZuvFfXsIZFBzzgk/HYCT/LK3EvIEbnup
T++2H0CmepDFodUE3LNuiBcpDID6Qb+PWEjAPzzge9LvfkxXXs2N5fazTNGD
UzPf+lF4KGh1yQ86Fit35aUE9cNsMEF1cyUd/ixVwXLLfqzZ8NyYlkrHegNL
ppZ4P564CV4oek1Hi8ZOIzFmH1473E9i36Ujq4GuZvWpD2F2nctsLtGRvVAz
/bdbH3iCi27PWdHRRrjkT6j0wU/CitmmSYeEvs1B23+9uOFGmxuWoiPUcrm7
VFEv8jUWhG9bRMfKmeB1B+70wsi15tBLFg3fDCmHmo16ocXMq1ZqoCF0e51o
hVAv0nX9AjmpNPikv3AUq+3Blvizf+uf0/CsWVqn5mEP7vE2+dR70VD50iuW
adEDzX8V9kNWNKz/FxJuu7wHjtIK9PUqNIRNOomqNXRDz81y8rQId16+4N/k
9agbxKMzrdkkFWMN59NFzbsxJfHFRbyWCvqnZwwx4W7sOMfvFxBPBUPitv/N
KibKvTZ0cvypmFDZlWd4j4mQ4/Uqtieo0Br85Oexj4koy4vLi3dT8XFvb/3s
TBdEnvzrXS9MheqW3gR2dhfudI1I0ksb0JP1SUTXswvpt3k/GF5qQHq3ssDE
ti58bt727P7qBujZzC8Wr+4Ez7Ej00/y63Fxi6zUUs1OhPREJ1idrAdTlW5R
kdCBMd+3Oyg89XjuJxRmIN6BPP4TjT3RdQjmrR4NCvyJq15XEl5q1aGgbJXT
k7F2zCStuNLZVAvN0v5Re/t2ROz5lvnZrRaCM3phoxU/UCxoGjvCW4uVngoH
TXb+gKaz//Y34TVwkI2Qcgpvg60MdTRxcw1GRR4LG8+0wn99k/byjGoUaK9Y
yjnViui5jpW5OtXoil232basBVM2eqvfVFCga5J8NHRzC8KKP0cmHKCgTb4m
yj+oGbJDms+a6qpQon95TmugCXb3El+tNK8C5/W7K98Mm2AUpDBsRqnESSUb
Pt6YRmy6tsv6ul4lRBe8Tlg6z0Cch+n+oJwKLF/mfO6nDQMrlO5QnLdVwPxY
nrZnOgGnXPaFRa+5+1h7xNZa7hy/QumyPL6oHBFRcztYZ+hoOim+xcSjDLFv
OKYNOVyd+KbJl3P3xfEmF79rS2nIEx9b+E39O4LNL1D6T1EhYTbE2RBeijKe
kWMqzg04crwvkjZagvmO1WZygvXIP58iXWlcghbVw+7v4mtheTVy49CrYojy
vy/5aFCDlz5vFxsyijBstlBftZMCJZlxr/wLhTBd6v3b4iqXN/b8E5wqwC6j
GfrYkkpIb3Csm/fLR+7fMKbku3L4nZOq8pjJRbqUrkSrUhn2CPA7bLucA5my
2dD1RaV40CzzeLY9CwaddfKDpiXIaVrflo5MPOg71XfzUxGg6bVd/GU6qmdN
W5FVgLHJwy1/BlOhv8h225qiXDQcvnlDdOdX+Cx49IPnexa8T+0ecG9Kwlp2
/9B8STr07lnGmGp8hhfl7NFVBV8RlmdxUzv4Iy7tWK7nfSYRCRdS2qpK36Mk
Meo5R+8jMikHRem1r7FebFRPYncUaomcXYoDz/HppVpzWu1TmJ7Z+mFZfBAs
gvSfnDS9giwDi2LhQFfwuB9RO9Y+pfN//43/AzvWZVQ=
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], AbsoluteDashing[15], 
           LineBox[CompressedData["
1:eJxdlnk01Vsfxt1EKEOqW5kiuWUsKanoIVeGTOEqZIpKyRBFGlT0VhdlLkqZ
GySlzJIhUyLzMQ/nOOc48y/ci4vc97z/vnut79rrWd+11977j+/neZROBdid
XiEgIEDw63/7/y/N3EteKYtx+P1Jx2dt8Ysoib2+zpeZgfiO9i3a4rfhWnok
d/jwa4TX6FQ3J/6JRu+YYKmG96i0qh/ZKR4PZa8wztOxIoQunRS9ZpuML47n
q6SmymCp8Qe5ITEVr+BO9//nEyyupHpL9T0DUyJfx+V6De6Miphrimci44pa
RnBoHQxv2u7p0srG/HBemYB/Pa6+SJgJsc3FzEHNGys8GlHRc/CubNBLxCYX
cq9YNSP/r2J2deJrtDP3iXnrtuC5pY+yd/EbvNer6foi04qbAaUaIn1vsTvC
wjRloQ3xmkKr8uffwamRdJbc2w77w/3928ULER+x+4kNqQNTTWKP/pH/AJP0
qySf6k48rmw88E3rI46Wf/HRf9EF6Z2ljWkoQlaH+LGWqG7g9X/2+9sW4yjt
RKy0Xw9E5QcT4FkC47kc5Q1WvVAdd+6SCirFQ+Fp8S41El5l5s+RI8qgus7Q
2ly4D5IeQSs+JpbjV/lY6tWxPni5W01H5lTAfttYx5mSfnxTGGl0KK4Eeceu
deLRA5i2qr6p0vgJtWoRb/xcB6FUFys3S6rClGpv6n3NIQj4MtIaJz8j+DfV
UdfFIYiYego8nq+GiWL4FW7jMDrVzbI/3qmBz8Yen31xIwhpuVMqK16L0dXq
7w4eH0Vy4LtPkcm1yPkZcXRBdgysn7Ef2PJ1qOQMGQSPjkHmADfF/kUdEjgy
xvY246C3xQRUan2Bv6eZtEXBOFbr6+gql37BjEPIGoU1ZIgNZnOiUA/Fphzt
dh8y3jRnJEw31WOutPu2az0Z+hzWdmfbBoRsF/zZrEDBG6pRfm1/A55t0Mle
e4WCY0LeW1Q9G3EhwuvSvg4K7lpK3I5jNoLmlxR4YPsE/nZe6pi72ASh/obH
Mjcm8PQ8Q8J9oQntNXPMvs4JpJhEH2iMaIbRDrWzQSpUpOun2Wuu/goXCVdJ
VigVWvKdTkmJX7ElOI5y6CsVvttHLRdlWxDlWD8euJmG14IhGqdyWpBeNi96
y4eG0lLz+WaNb3BJ1XS7UEJD9lOR9zuLv6Fm/tTIXkE6PKw97B8ZtKKNlHJv
2JqOntdL5KWGVkTqtJ/0SKXjXck9Fy/rNpAlhF1rKXR8Sn9d/ZXUBqaPwf1/
1SZByxGR2OX+HalGl0dlgibxWtz8yKPJ7/iR8tZ9XdkkjGXFfZYC2jHtT1/N
XOLrhb+CTs234+mXLRNPDRnocrLR8TbsAPeRE009koEvEvZKj+90gMFIlE6t
Z+D5aTvBluYORJd/Pz+xkomA5U0DS2s6QRIR44n9zoS26cWsncc60UIySZOM
YGIhaJv7qeROnFWOuDz1mQlq4IJE8kAn8nifw94vMJFPKS9sku9Cit7SK8u9
LMxJ7zBd8OyC1i8HBBv9WdBhi7Rr8OfG3+zKfbmXLOxmKpi7s7rgIFGqZzvK
gu169eJ4rW7Q7GbXea5nw2aaI10f1A35X3VlbMzZKLy29dRsSTeWj4cclbnB
Rqnk/awdi924t6n0Zd07NqbO9nc7owflx+e1zMhsmES3/h0T2YOkDQfIeWs5
SKqRFalu6sFGu+ufWYYcdN26Jja1uhfG4tWNqwI4eOqTvrTVthcbTVcs/JLG
gaHq/lGHpF4k/GtyYqCJg/1h8wV3+3tRqhtFfjDNgcTKaP8yORL+w/mevEWO
iydOaXIsDxIWFddffvg7F9nDvWWyuSTI9DjdHPTlovX96GErJglkoYwiwQQu
Ol+6VIRr9uFYCX29WCkXwlqEwvuLfThH08zgDnIhrrs/kFzcB7XEy44FP7mo
Vu57K73Qh6Tqqn2WW3jYX+LVZ3yoHznnhX9vAg+iUyGcSxH9cE+yubbFnYcL
K19wchv7UaefOuJwg4fEPZF9JLEBtHlNnD/7hIfB6mf5q2wGcFtUS/l4CQ8C
9bd99RIHMKoZJrytkweVrWXrzvUNgNxRv/47i4cSz8acVNlBxE1LWf8hSEAk
QUuhxX0QtATXD+UyBLLUAm4uZA+CWphntLiLgCVrRbMaYxAxNvOLm48QuFnk
MeesMYQh3yPkDc4ErvktrokOHEK3cPIU7wKBDz1GIpVFQ7ikSNXIDSfwwPU5
gzU/hKoynUS9WALBwqFvZQyG8b49ctvr5wRmNTUdLW4Pw+J0z/hsPgHBM/KU
sIZhPAhTaVaqIPCbSbrta1E+19aEDqo28u/bK5TZbzWC1QpfN0p2Eog0Suta
lTACswLZW52DBE6PvqHqkkagWeW/7uIEgcGPl0mnZUZRaVHXyWURMPLc+zLJ
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
n4Y=
            "]]}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{True, True}, {True, True}},
        FrameLabel->{{
           FormBox[
            TagBox[
             StyleBox[
             "\"\[Eta]/\\!\\(\\*SubscriptBox[\\(\[Eta]\\), \\(c\\)]\\)\"", 45,
               Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}, {
           FormBox[
            TagBox[
             StyleBox[
             "\"P/\\!\\(\\*SubscriptBox[\\(P\\), \\(max\\)]\\)\"", 45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}},
        FrameTicks->{{{{0, 
             FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
             FormBox["\"0.50\"", TraditionalForm]}, {1., 
             FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{0.5, 
             FormBox["\"0.50\"", TraditionalForm]}, {0, 
             FormBox["\"0.0\"", TraditionalForm]}, {1, 
             FormBox["\"1.00\"", TraditionalForm]}}, None}},
        FrameTicksStyle->Directive["Label", 
          GrayLevel[0], Bold, 45],
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->{{155.0625, 43.23009375000004}, {131.3720703125, 29.25}},
        ImageSize->750,
        LabelStyle->Directive[Bold, 
          GrayLevel[0], 35],
        Method->{
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
          "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
        PlotRange->{{0., 1.001}, {0., 1.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}], {400., -243.3508830702711}, 
       ImageScaled[{0.5, 0.5}], {750, 463.5254915624211},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
      InsetBox[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[5], 
           Opacity[1], LineBox[CompressedData["
1:eJws13c819/3AHBkRERk7+y99zjH26xIKCORlFBES0pJSZlJKlL23nvvvXdG
JS2KjGQ05MP39Xs8fu9/3o/n49x7zz3n3j9eV9DZy9KFgoyMbFaUjOz//smE
vNzce0yA7P9/VqRyyVLuQNi3qPhdSiwU+K3+BtrX5UBQYOz5XZFFMJaTwjdr
WwWSgskW9D61wG6dpjOQ3QxNuf0BxdotUG39e0FCrBP4pl30rbba4aTNobig
tD6Y0zhYfoWvGyjzjqStMA2DaUqQp0djLxyX9vVLGByF+wO/okI3+iEzL9nS
9NE4DCslPYgcGYQ/0r0Sm6ZvwCOfFOpcMgQH89fJsvZMQepOV/AX+2FIk+Gb
PN4zDUFHnK6Gfx+GX+OpE3fbPoLV4Qe7DjuPAH+Meuuk0GeQyW+rPtMxAsY2
/QVygV+gbn/n1BPOUfBmd4578HkGEjWGOEUdR+HFxK+g93pfYW5gPpfp+Sg0
x4RdUk7+Bnk1x4/9axmFHzYCDmFk8zBY+pzX4usosHOUm3w+9R1G/CeSD5K/
Bpw8qKzRuADs5fGnfu5/De6x0/yP+ZZg7zV4IH/gNUTZXtnz7fYynDD6Gjok
8RpqOHb/1nn/AzgPBrcFSL+Gqx5HLh1KWAHXSC94K/kagvs4vm2Y/YRhCc9l
Z5HX8Er6y8nk/37Cq7oRm8c8r6E4PH/ENH8V/sUIjnczvYbWxesmf06uwQvH
p3fOU7yGCVNSQyr9OvD5fm9t+TkKC3n0yuZ160ByW+jj/DAKFAwT2ZsXNuDt
4bbcgp5RYPNM5s/g/gUnEh7aV5eNglT/hWcWvb/gDcurxAvxowAyqnv+u/kb
grUqWn/eHwWrCLK7WZJ/IJqagnTlwii4LfX8snr7B6gY7KxYLEbB3+yZx07I
X0hgaPT4qTIK0fmnPudobAKV+WSeBNcoZDJI2lrPb4KmV6LW2H8jUOu53k/+
4h/woGEC3acRGOpv0M832YLe5Tdk060jMCMTUm37Zwt+b/FfP50xAn8irOQo
s/6DOLVylfTgEWBc5k0vtNmGhn9RbZXnR0DoyByXPc0OJECNVIbpCKgXlDym
rtyBjY4prluyIyD6UHeXnRIZimTeozdgGgG5SqEG2TAyPPLfCRea1WHQ+Lb7
BuUXMjzex/14YHQY9NmXld5qkiPrpBNbcvkwmBuPLhc+IUfNsC8VQTHDYHe9
KjvoOzmeELO/ce/GMJzJjD9rT6LAypOHml4R99Vz4h6/QhwFqhX8sn2jMwzX
adzeUq9S4GJAQ4i2wDDcUzN7NnVwF4qpbvH1UAxDhKvi0ZLkXSi0N9EnaHYI
YmLY9wT/3YX2BfGhl7qGILlzq93BghJjv53efJw7BLm/PwUoZVMiS9pBlq+P
hqBCrFOLlpwK13OPT16+PARNNnm/pm2p8CI3D62G9RD0PIwqLiuiQqGlfeKa
mkMwWunjEbqbGh2HtAOu8w3B9Dd7MScnahR9eVJylWIIvrHrfVaposbhDSUh
68FBWDMWjd/DRIPAGfHD8MUgbF/fY/vJlQbjLl5eLTszCDRZK8yVjTTIvZkk
kCY7CMyTY/3h7Lvx4hcjhf2bA8C9uzbY2Ws3euuMpFJ1DICYepK+eudu9IvX
bPd9MgCKbkHbDPy0SE83UuZ5agC0Ys9Xf/GhxYv3s9xmpAfAqMv8avUALQ6Y
hxdPbfaD+R9luUhROhRmK9K17u4He3Gu72f96TBPZCfpaGw/nLXdSdMcp0Mr
JbEjva794BU8c4pJdg/S2zimtqv1g29VN9fXoD14y2Lhm+7ufgicKxirfb8H
1WKumau+6YNwjqePo1To8SbHga2cnD6INblx2DWCHvMM75K9utUHyb6O1Dqz
9MjhYnl6t3kf5GXpNzPrMKDbMj/7D8E+KJ8UvzX3lAGpDlYxmm/0QtPuvWoN
iwx4dCtITqy7F/rU135GG+zFCs4eS5/4Xhhzm8xzf7UXN9xqj2hd7oWPsfWu
sL4X29PCV68a98J8V8oBVlNG/PXJfvcB3l5Y//Pw/fdURpzZw2Ctt9YDZBKe
sU3/GLFRZV/CcHcP3JfOluiVYMJOO56k4aQeCGnjpqk4zoRv//Vwom8PRJx8
NJN0lwmLKTU6uY/2QPQ6WUtYPhOe2ht25ox4D8SEX0n0ecOEZ+FCNit5D8QL
f711mmofnq65aaXwthtS6mxPmCrsw4SoKp7y0m7IPNarpuawD89zfWhKjOiG
/EUd1gMh+1DbvWrrh2s3FN8vWqUv34dRhecfpZG6oZJHaOj3x304JlyvUsfb
DXVlz/I/0zPjGKt1mcrfLmg23R3Wr86MJdmr/YxjXdA5c9Ot6iwz3vwQa3Kw
uAt6by0Zpj5mxh3ttsWPEV0wvN9J6FEdMw7HRwSNne+C8bwRshtzzGgaPPBR
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
UM+aEj4fpFGf+VEIO/f36LRvK2H1m0ua1h8LgVzKbb2RVhnR9JTFxBDh4bbc
mv3KOHdv+5xrcyHsui54ppxfGVvLM12oSwjz+nMVSSqj/rMptbKUQqBqfTuc
o6KMld+Mu7yjCburhaSjMiaI1ZNr3y+E3YxPMemwMqoIqQ+yXisEuvKV33HW
yvjr1RT3tgthe7PCZ6eVUXtpY2TduhDoyXPOPfZQJr6nfn34a0w4k5ov7Loy
Wij4yjJoFMJeszNjQfeU8WCAZo6sJOG1xvCACGV8mCEEjtyFsO8Fj4FfrDJu
BMGbl/SFwAI3/l1LVUbXa41nv/1XACyzYyXeBcqoNP+3H38UAGuY4vkL1co4
xnOePOsjYYVIwXNtymhZX7jAM1IA7BMLk06Dytjw9NGNxNYC4Lpt8tj+rTIG
qC7HyJUTFko3tp5Vxti8N0r9GQXA002+c3RFGftE7mj6xhL2cqw4/E8ZI9Lk
XsiHFgAfa62nEbUKkhc66vzyI1zLLqK3TwUTdpL3d3sWgMDpq1NaPCo4plpM
n32qAIRohqNVxVTwZoQLy3MLwvkyhxUUifnB1WyP9QtAxCqUQlqHmJ/TRRmj
Qvjv12pRExVkkB3szRErALFE/UuCVip4ulziRC8nYcMkcR5HFbSmPJ7wZ08B
SC5sfWBzV8G8iqUHitv5IB1lF7Pvqgqy/CmkuLFCWK3iCP0dFdzRvk7W9zkf
ZN8zU9OEqqDYlo6X1BjhQK968mcqWOfGqxvTmQ/yEn1XtxJV8JaM2UnGGsKD
4tK/c1TwiLhQdXRePihdC/rys1wF20VZDIQT80GF+3PcYpMKSqcWLDZFEW7W
tfzWS+z3XlqK+/18UHN9Sft5XAXdRpqO810nzPCnaeqTCvqFLG5Mu+eDRukx
34lFFaQ1krmSe5KwXbHcyG8V5GNMrw80zwftHYZvfRSqmM/6pN2VlA+66ecT
OhlU8ZDPET8bFcKHO4+3cKhi+T/zQUvxfMCfQgz1Qqq49kmsxI6bcExAW6Ws
Kq6+uLffY28+kHTe+5VoqCLVI7FvIeSEv2go5RuoYsHXP1yl63lgGPL8e6a5
KtocXUv69i0PjOXWklNOqOLRZpnzYu8Ij5nbxbuoYjq+cb08kAcH/fKYYr1V
8Vo+hnU1Exak7Xrip4oVD7raJcrz4HCny52IB6r4rnR59/Mswp4tqsFRqphl
dsiI4VUeHGHhX773ShU3XMO8IiPz4Gi1X/rtTCL+7qYPTyDhU5MnfUtU0Wff
pmmZTx5YUqnsv1Kviuz9FLPW5wnnRvV6dhHz/2TIUzrmwTGL5Xtuo6rof5np
QJ0F4d+HNM9Mq+LEeECuv2Ee2MRn/nSYV0WtoxaNhzXywE6fMtt2XRWLzqya
C8kQnndystpRRdvGBXMqwTywj6xnP0Knhkdop4p/7ieswjVowqqGjQW+bnO7
88Dxnc8DfQE1/FgacW5+Kxcc7o7q6Eqp4UbgfwnrK7ngJCa/oa6qhjItTZR0
s7ng3B+ep6SnhiVcX0Ml3hC+Mn9G1lQNT+x/ImzVnwtnOY24JWzUsOjzdtuD
ZsKNKSNCzmoYpH7rVFt5Lri67ITwearhPJfXtz05hPec1OP0VcOQMoujDgm5
4F5c9YclUA3TJEojqp7kwgUb1qK9j9RQwUMtmvch4f8uudK+UMMCpphj4X65
4Jk6wEeZpobqQontlN6ED0qNbxeoIfN/8m8fnM0F7x8PI/5WE+txkR4w2xF+
NmOw3qaGrT/f1Wea5cJlLb2t5UE1fNTFfc2IlAtXP8WXzr9VQ/9wxaRlVcIP
N8/PzKohVc5ZpSSpXPCRsTnwYUUNfWdohewFCI+WvnnzTw0dZSPO8LPmwo0b
TFGvqdVR+p7H/CItYX5Pk8F96mhRq57dup0Dfu3dO9086lji9SwmdS0Hbl8Q
rWwTU0efbvXs8DnC+wIvNiqqo+zphRH/9zlwp/KDSI0OEecIpr05QthB+32Z
iTpWrv/T8+/MgXu7XjwttFLHx5uGl8LqCGdvHM5xVEd92uvhycU5cN/ccle6
uzoOVBQHN2XkwIONgprEq+rIJC1pP/eS8Ms9l+PuqONNctG/HFE5EKznJvEs
VB3JeLZsLB8Q/tb2MfKZOh4P3e/51C8HwiIEY0OT1DHKeU7mgzdhJX/zoFx1
ZE4if6x4Lgci3rylDqhQxx7yf8GP7HMg8o5aw81mYr9zd/auHSUs8vTatT51
HFY1ZXMyyoEnvSvS3hPqqCYr/XxMKweiLpnNnP+sjolHtwKtFHLgKXvOS5cl
dRSH7LE3ooTrqa2c/qije5zcXTeeHHh+5gyd/S4NHP/88tbOvhyIpW1qPr5X
A8/Y0TUk0BAu5LlxlFMDb33M0DL6LxteHr8hf1hYA83e5y1srBL+N/bNUE4D
ZThd2/LnsiE+WTERNTUwIlWuznOasHGktZahBq6VenWrvM6GxKUFBtWjxPrh
iZ+perIhOdqkXd6eiNsbbb9vJKyRfkvqnAZWCG4yN5RnQ9oHcmXRSxo4G3mK
PSOXcJDjgsAtDTz4Q4LieXI2ZEjVpnA/JOIU3D0RMYSH2U+wPdHA5QWKcxER
2ZB1/eq+ffEa+J2hqe9pIGHe4a49WRqotqa7kXojG3JaZQKoSzUwT+HmeI0X
YfdQNfIGDQw3v+n6xiUb8hm/Lf/r0sDSrOOJO/aEy/Uzfo1q4O5j8tdkLLOh
0D7J4ee0BnLQan90NiFM/t/+xXkNpKeumkjUzYbiTLu+r+tEPRsrljPK2VBq
VhH4aUcD/43hQXkpwmvMWlN0mug2vbckUDAbKl54rY6zauLOucH70+yEoS97
WEATVQd3VePebKiaFT/dJ6WJti6aRjmU2VATFsTRqaqJk2Z7hbn/ZUGNwufB
Zj1NFLggdij6ZxbUTeg+rDPVRG9DzSLmOcK3X+pW2mji71WaIy+ms6BR6M9G
sbMmapM5couNEe4+lp/nqYmPbNmY6nqzoNmr+Gymrya+k2UXtm3JglbWvTwp
gZr4/Kul+b8qwrXnR1890sSprc6Q9MIsaD/dGRrzQhNnfgb0WmcQphEmPUnT
RA/Fp/SM8VnQlR/wN7xQE2PJhQ0HoglbvS96WKOJ3c6Onk9Ds6Dnr4bbvXZN
HN91+/bpu1nQl/ic//aQJhqLtXuq+BI2XBu//k4Tlx49VGXyyoLBBfNHl79q
Yvg5gaGfLoSj8gw9f2pipexvxbcns2BYjfY/1y1NXM30t+m2IvzepcyZRgsn
6pVVGw9lwWhgywUHZi1MuJzSWauXBWMS/EK2vFqY1GNP2ahOeNDvraW4FspW
7cx0yWXB5LXJKDMlLbxFo+78RpQwt8pBE10tbDxUfXWFNwveNkeR6R/UwsAO
EuteVsKuy5U6x7SQ3jFBW5E+C6YYDnupn9JC5oCkLyd3ZcF0aaao0nktvMIi
vuvRZiZM21FOy1zTQoWzfE/bf2bCpx2nZ+IBWvic6XrkrnnC6fWmQmFaeOmX
3LLxx0z4cpiLku+5FkYKWGQ/mSD806eWI1kLjcsWq78MZMJszOhlljwtNP3A
x6nVkQnfdOQl91Zq4c12hqbYesJfwj/tbtHC7YvzmVtlmfA9ZD52Vz9RX8VC
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
25cLuC9/kZGXtYdFyS+KVqG4B5KOJyraQyQv//uUwCwkbLyzVUrFHjKV3qX/
9MtCIpEzWgka9lAi4+FKP4K7J/eCmJ49VAeyJKo9ceu6DMYa2cPRVL9Ha/dk
IdHQpa2Cm+xBKHfxUBQ9C4m9LE66aGEPviHGPNNOuNfvnuYFexAZVozfZ487
UMgpzNYevlNqxbogC4k33yv4S7SHWnHFYFuLLCS5xmtlMNke6pTQ6wcbcfvJ
7F9g2MOYlbmiuUEWkmpoqDu1xx7mlsXtq7Sy0CrZE/Iz++3BPbNrj5lqFpI+
rBxw3NseTshwGNWKuGvbOr79Zw8hip6m22WykIx4iN5Rf3uoV6JOPRPDvV/3
0pfT9lC2JfgqRSALyVb2fjwUag8j9lOCQ/8ykazApe3DEfZwsKNtr/+vTCTn
Zpa2L9oeUnn1rvLP4i4Z/tkfZw/XGtUTM79lotX/WOTdHHsg3ew9sfkzbioq
6U2xh30fDql1f8hECje+CzKy7KGU/C3v5DvcixkHX123B0oEa162OxMpORIf
uxTYQ3dmoHxtG+7sRaX2Uns44t+w8kBTJlozffM0sdIepP0yHojV497JePW8
Bq9nrv722vuZaG0Kn6HtI3tg3s25eLQS99fy2CdP7cFgRpW9rjQTrdu+fxS9
sAe5LYP7u2/iZklYP+ywh4p/AjNXcjOR8qcHmRav8Xq7tu2wT8e9+b/F6nf2
oDuyn8KfmIlUYhXpmz7g8fctrmm6irv/+e2KEXt4tqIlNzY6E6kZnRY1/moP
+pWigy4RuC9oHC6dtAfrzvkuhZBMpP7m1RO9OXw+Wp4Fj5zCrROhXPAbr29m
VU+FXybSCDEK1uRxgLAXPCORR3B3DLy5zu8ACu7jua4HMpGmWpyJqqgD9H8q
EzV0x33K4mrWKgfQPMVdL8jMRFrPx8aUVjsA43rfp2EX3EopO1PXOID1xRdO
DYRMpH3MNldOzQHCy256XLfBXT/7h6PlAIOmtbKXtmciHZnrrqv0HeBetpOf
rzlub3LlVRMH8PxV7MMwyUQb7i9LiJo7QMYTNX7rDbjFSo/GbHOAr1N/rYw0
M5H+vj1N/DscQH4qTk5VBXeF8PpIewfg5qyPllHMRAb8Ned4nBzgB3kVR1gG
9y7vd+eoDkBoKjRbIZ6JDItlN/1xdYDnxjuPLQngXn7COrvXAcSNNlv84clE
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
yvEEk6aNfrqv0QcvDGp6e8L6f2GV5S/QVflpnT6eUJiVfdfhGfpqxvq03Z5A
Zvie6u1MIrt2mI+47/MEF9kiCH+URAaTFE+q7fcEe2PpUpV29KrXzg8DPOE2
hXSeaUki73qvjaUc8IQ9yVoP1t9LIrsVj5S6huLz9joIXjahm+/yUDqI6xek
TIm4hc60kW2JRH9S5DqzHl2gUSaJ9gSzdQ708htJZN/lj2yHOE9oZlks3nIt
iXx4eltJnucJO16YNH6+ii6TfeOOwBO2JvfqpVxJIh8XBe3hi9E5mrD0YhLx
9XDQ3JDoCe84CUbtZ9Fj9JukU3Aeb/xuCSxBP/Mz6OZRT/Cs1rNSL0winzra
9GOPe4KkqXp31akk4jdR1GZzAuvjLaLTc9HnHYr6k+kJ1lZ2qpOyksh+t22m
NTmeMCpfJi5KTyLD4Qu7I07i/isXNzqlohdIC6wKPIFjmXBzNAX9wVPzX4We
oHUlODYrMYn4f7/8urLEE7ppslLrxUnks64oJeSsJ+Qn/lr3kY9uz1674oIn
TK9Rtks/jB5o8WH0kiewouQVbWOSSEC2UuaVMuxPdH7yx8gk8qWx3y6gwhN0
j2Q+yghHH77xbck1T/DLvdS9MQRdM7XgU7UnWFwqyP0amEQCbfduPl/rCVUf
zOYW7E8iI3tt/+5t8IS96do7t+xDP6513uS2J/Qrz90jtRu99jP1XZMndD6R
Wli2I4kED96ZUtLsCT8OR57z5iaRbyp5FT4PPGGozXVIg4W+OsTbqA3nKdl6
sJmG7u2s2tfuCdvLpAqiPJNISJJhff4jT3B14M4225ZEvleO+XI6PUE2evbm
gc3ovQ9n6z3F+p74tC7HBV3hTPOLHk8wHM8a3eqYRELNY0NzXnqCsXEfS3FT
EvnB8DSiv/YEhRqB8NZ6dMGSjln9nrAowM43EtAvTY7tHsD9Pbtv2sq1SSTs
6fPFJ957wq7zOns+WyWRn9JXe7Z/9ISKFVWxZy3QFyWI1T97gvBFgPtOc/Tt
XpaPRnC9n6a+nrssiYTHWL09+g3P4zsOJr2LksivUpXUzT/xeoMfFuaZoHcM
gvKYJ/gOlb9jzEcfrxtunfCEEr43W9swiRycl56T+M8TxiQ1Kc/1kshvVz9H
J2kKTHsXezBXGz18wy+FyRSYUxykzZ6Fnj+nuHkK+pB7uMHMJBLxYNRdqEgB
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
YoJhvGO+6Tt0YVxsCJcJouzDx8feCkn2ZcqSFTuwnguXDt/vE5I5z5Y+H93J
BNlZKy5mv0aXmSK5socJE+4hj31foS9+aRngy4Tmzk6OzQt0j4q3S/yZMF60
xl2lR0h0YhNTPwViv9ol5950C0nuGW/b88FMeL+/aE9FJ/qj1Z/3hjHhfmFA
kuixkORNqOaaRDDB/WT7TEaHkOjOf+/4LooJf9POTF7Wju7W8Ks4hgk+919R
ZdvQD54o9jnMhP//R6lPH6AX7N9mxGcCZd53s4v30Fs2SvcJmXBMKrci/i76
d+3L+RImPBOY51Gb0PW+MTlJTDAxyf2w9LaQnLR/MFXvCNZ3Z12u3E0h0Qsq
uP7iGBM67kRefVGHnn1wV04aE+Y9v760oga9abMGPYMJu9YxlZOqhSR/eMHt
Wdk4Dycd3X2uCYm+1r+A7lwmrDy9c3xtpZCcsu3UPXGKCVumpE/RvIq+70LL
9tNMOJBSG/blipAUHOdFqBczQVfhltP9S0Iyt45u/KiUCWVOovjCC+iDyzuP
nsP7rfquG3MOXVWRt/kiE+yrP+nQzgjJ6dWvzZSvMGHJHY/YlSVCYrjj2qvW
cibcpmnYqRahJ6UkJVYywS92uv+nAvSqndZO17E/DgvG750SksLete8VapgQ
9XDDUHGekBgpapxormNCoI3zGl4OuvnHDcKbTDhaP3eEm4XOvD26sZEJ/UkX
5CFDSIoFWadk7zLB4OPDw7rpQjL/cqDr7Xu4/+eHsP+koj+1n4hrYYJvalTe
86PoMvpn4T8maB5rJTUpQlKy6Kfnv4dM6ElwWZ+TJCQLPNom1z1mguTr69Ko
BPSYovKoLibEbwwIYIrRz0RxrZ9hfaa8zLQRCklph7vy2HPs9z2Vefp8ITGe
MK299ooJ2kbDqtLx6POk94W9YcLD63ROfyy621Mti7dMKLQgKnejheRs+OU7
3waZoLA52uBslJCYFgiDy4eYMNj4NzUpAv0Ba27QJ3x+ZvGuwHD07yvbl31h
QuMHWs72UCE5p6sU/XmUCWcdpZevDhaShfb9Cy9+Z0Ir67CxXhB64I2nvr9w
P8+8GSMbgJ59TLhwHOd/V6HlkJ+QnG/cs3LoDxOit6ltbt8nJIuGoa90EgsM
Br40V+5B19Q6ukuGBR+Xzi/I3YVu+9lmvhwL2K4ZPTwfIbmw987HfnkWbNy1
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
zn5Hpzd7eEROfZp6xgLrK3aJaPRuHmkv/VzaZ0mF+PKWbvNdPHJlX7O06U4q
XNEK7fu3g0cO9pW73N5FhSn95fJFljwiH5jxaO4eKpjppwR4W/DIG/FLcpS9
uL4z04Ka5jwSf4vt+WQfFYxi1J5+NOWRQwbuz1SsqeB+f1FOogn6lweXcmyo
cMmussrGGL2T8YluW1z/ZyVRse3oJ3RfbDtAhaDaFcHVBH3kEpUbB3E9Hi+V
2Nt4ROE/wYC/h6gwYrpgyHArj7wtHG04epgKVtWtX8Y380iCZdeKcnv8HlVV
KteIR+ze1wYtPUqFFYlfGcxN6E8Uvj7tQAWTHpWh5YbohW5qvTtGBZfSyutd
G9Ffi+RscqLChbSSoPgN6Nf4v0lwpsI+dZEIm/U8sqTaefUUhQo/nyY/EV/H
Ix2H95w5RKMCbf5pzRf6PJI4Ytj1kI716h9ZHrqGRw7zV6yTY1LBN/15COih
V5CK9HOhgpj6Ko8ZXfQ5fz62ulKBGZERXqyDfnu/wXp3zCeqwauTq9C3v46K
86DCeqtGM31tHlF0r/w87kmF61+pA8OaPPJuNnOLjTfmTcNIUZYGj1y9dDku
/zjW/3X6faY6j9hrcQelTlAheLry/YqVPLK00mP7cV8qiJwfW/dJjUc6bewS
mk5SYeD3j4c3VXnkWr/J99X+VJgdKWc4LOeRI8F65lEBVHilYGKyVAW99NKk
4VOYrxohuzuU0acJ/dx9mgpnGpx58cvQG43vzAnC+nzc33dACX3T+5SFIZhf
RYInZZbyiBLtxZQbiwozngV6LUt4pGvq/r46NhX0k/vkYxV45PqF5HQtLhXe
iMfpWMvzyFHV838jeFQQCrzvKSWHvihg/wCfCvR00tkkg34XNdviDNa3wyq/
6MXoP+6deycM85zptXnfIvR+RoeFIqgQHjOrKynNI8oL1O/Rz1LBPKNtd5Mk
j3y4IS1cHUmFKnZ/fLQEj9xY99dhxXncj8FVklbiPOLwfOA+/wIV1j1OLJAS
45FlDq0Le6OokPJWg9e8gEfejz2iGMdQ4ZFkQ0isKI8khWWXpFzE+2TCSbMV
Qb80XmpOHBWe7Df8LSPMI//d4zGdLlFhv/q3U+2CPNJt6lX56DIVviXFrkiY
zyM3Ow7L/hdPhazbqjOH5/GIo5eZByuBCrqqcbNL5/KIyjz9qveJVEgU6lz9
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
vTi/Vril9CXxyQnXfUUafS5gq/H5sl4iemGDxeFfsP+fyT8KjeeTrpuqlO/9
eP8IXDCnPRb9hkUv93zF+43RI/8NN9GXTsnc/4bzK0lA1y+aT1Rs+xliP3De
nf61tPE6+h/1pZRBPM8eH4011/gkxe+FfMUQ3j8l4105V/nESfa+25oRnF/n
TfuqLqN/cL0i6Cfm25ARphLJJ5+I34ovv1zAUV3C0TMCfSPDa8cY7nNhlTNv
L6Gn2laljrvA4evx8UphfLLyn6nq3N94/01lCbmHoL+qxT01iffRmYzYN0F8
cmuNQv2rP7g/zmqfVAjkk5PPRNatnHKBI+Uzdq7+6Pf/uuA37QKLPohdLPPj
k56+jubuGbxPeu1rk/dFz3mrCbMuEOhZfNLVB73k44AkAQrIZdgrvOHxyarU
5I//BCmwZVR6riIXvX64znEhCpxS+6zozuaT21Xeoc/nUmBqealzhTefnDp5
qltRhALaL9I7l3uh/22px5tHAane8GDP83zSe2nrfx9FKeB+zsXxvTt65dV9
W8UpIGG+kbrKDf3jxYax8yngbNWVwjnHJ6p7Zq7+WUCBhnMM8Xom+s6Br7YS
FAi8UnNrHYNPUj0aoVCSApwkAbofjU+cRYuj5RZTICDo98kPFPQJD4a8pChg
uiUjTNuFT/q0o3c0S1NAI162J9QZ/ZuL8Vtk8O8zN1B7TqE/enb0miwFjjn8
WLHtJJ+ojdjtGZOjQGyKucg1R/QBO1JsllFgxE1fcfA4n9xZpj2ZI0+B9vJ8
p50OfHImS9FKSpEC2YlFzUlH0ZuK3nVTwvOObuP+seOTLy2j07XLKWBepmNl
Y4ue0WWzUZkC95dEH8g8jF7w3f1IFQpofnYMnHeIT1bfyBccXkkBBf2Qficb
9Oq3bC1VKXBVVpj9bD+f3H0Z8TBTjQLM4BoDOWs+cTnIFlm4Bs9/rWuduyX6
r6cdGGspULdLc3eVBZ/0863z3q2jgHhOdvTaveilDOevX4/x73KSCdiNPm3N
yTANPE+3/qsucz5ZYyj95Ksm5uutZuK2nehr/0nu1qJAeab+vWgzPklz/nYm
fSMFXt/e3zu6nU+of5uez9OhgH2pq4W1CfrIkiUumyiwYfV/nzMInwysyqS/
2UyBwv6UB2LG6AtjXqnp4nO11JQzhnxC2RewLFCPAqEz4W9Kt/KJes8518/6
+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
4p5anN8D3ze0tuH0VcgrxWbXqVAwWX6cw8gf8rX+HNJqsL6hGtbafiz0ydLN
JkCdgo88ZTXu9oX8d8v8L3spuKBjg4nYFRayu3qI+6AmBW+rXJjk92Eh0a3K
Z1P2UXCeuGoamzfkM7aVrNKiYJPiEmLOk4UeoDUbzh6g4JOaQbajlyHfNXOu
Whvq0S7etocF+YufynfoULDM8A+iiclC/cuNG30RPC8wKK2ChPztwoufMAVL
/LOcyiFYyH5n8gvtgxTcyu1oksKAfMUNwYRDFJx8PqUx2gPyJ1iUP3qwP95u
tA6is1DiiGO99WGoL44Cdk8a5L2Oi5QZULBgnW/9JSoL7eDTYggbUvDVVo8k
ewoLDaTKNF0+CvUxcCPK1B3y+wQkeowo2KOy4b6eGwudbf3L0jxGwa4y4lWa
l1hIwvHrmzvHKfjPh5gFeVfIz3fKzJtQsOkDCaMdF1ko5Ua1j7kpBauq1hYJ
uEBePLOz0IyCZ2yY+zidIV90R37zKQr27tfsXDjPQoOG164yzCn4mC9H0Pdz
kO937+mwoGD/VR9ODDixkAPjtLKqFQUXy+erdTlCfq1+UNRpClapDVdqdIB8
wp5PP6wpuPzWed2Ksyz0UEVE/YQtsPV+t2dnIN/AdSPXjoJ3jnPkPrJnIUmb
n4MbzlBwGEc9d5wdC32Z7t9HOUvBq5hMn5u2kL/eFNnqQME6XFu5rtmwkKNw
8aiiE6zXteSnTGvI56T8F36Ogp/mbzx36TTkD96MmTgP6+t0UeOsFQuldl+e
OOpMwW/OpIibW0Le7dzBDBcKtiFLJI9asJDU6hNx3K4U/Jn2RBuZs9BQ7IEf
LpcoeJ04naJ+CvLyOw0a3ShY0XRDqdxJFnKq3pi4k0KBM9FHWMwM8qf+zQVR
4e/k89ubTSH/ddxolEbBDK6XUutOsNCjK+8e6ntAP7G+1bJyHPIbXy4+YlCw
OZK++esYC0mnZ53gICm4Ktjz/IQxC40cuJfuxKTgX5w3zQeNIN8W8K+GRcGv
w23suo+y0PnzVHNJT6i36UGfVkPIL1lnXfWC/ssmWlh7BPIRh9kHvSm4LI6b
vcyAhdKkVK3xFQq+G/bo4rPDkC8VzUvyhf2d8W3ssT4LyRzjXrviB/uvrefK
Az0WGh2cs7e/SsHz7ZcUYg5BnjlQVHmNgvWDk3+EHWShC+tbeESvw/o0Mlqv
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
Jv0=
            "]], 
           LineBox[{{-0.532570215131383, 1.}, {-0.5317593765725827, 0.}}]}, 
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[5], 
           Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1: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
            "]]}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{1.0000100000000023`, 0},
        DisplayFunction->Identity,
        Frame->{{True, True}, {True, True}},
        FrameLabel->{{
           FormBox[
            TagBox[
             StyleBox[
             "\"\\!\\(\\*SuperscriptBox[\\(\[Eta]\\), \
\\(r\\)]\\)/\\!\\(\\*SubsuperscriptBox[\\(\[Eta]\\), \\(c\\), \\(r\\)]\\)\"", 
              45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}, {
           FormBox[
            TagBox[
             StyleBox[
             "\"J/J\\!\\(\\*SubscriptBox[\\(|\\), SubsuperscriptBox[\\(\[Eta]\
\\), \\(max\\), \\(r\\)]]\\)\"", 45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}},
        FrameTicks->{{{{0, 
             FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
             FormBox["\"0.50\"", TraditionalForm]}, {1, 
             FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{1.0001, 
             FormBox["\"1.00\"", TraditionalForm]}, {0, 
             FormBox["\"0.0\"", TraditionalForm]}, {300, 
             FormBox["\"300.00\"", TraditionalForm]}}, None}},
        FrameTicksStyle->Directive["Label", 
          GrayLevel[0], Bold, 45],
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->{{155.0625, 68.80078125}, {131.3720703125, 29.25}},
        ImageSize->750,
        LabelStyle->Directive[Bold, 
          GrayLevel[0], 35],
        Method->{
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
          "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox["\"(b)\"", StripOnInput -> False], TraditionalForm],
        PlotRange->{{1.00001, 300.}, {0., 1.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}], {1200., -243.3508830702711}, 
       ImageScaled[{0.5, 0.5}], {750, 463.5254915624211},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
     InsetBox[
     TemplateBox[{
       StyleBox["\"Chiral(VP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False], 
       StyleBox["\"Helical(VP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False], 
       StyleBox["\"Chiral(VTP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False], 
       StyleBox["\"Helical(VTP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "Framed"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 0.}], ImageScaled[{0.5, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->1500,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1]], 
              Line[CompressedData["
1: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
KVPX70KcEE+KiLwKviPUzTJ8S/G//fkfvLg8Yg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1], 
               AbsoluteDashing[7.5]], 
              Line[CompressedData["
1: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
fwzyi4g=
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1: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
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1:eJxdlnk01Vsfxt1EKEOqW5kiuWUsKanoIVeGTOEqZIpKyRBFGlT0VhdlLkqZ
GySlzJIhUyLzMQ/nOOc48y/ci4vc97z/vnut79rrWd+11977j+/neZROBdid
XiEgIEDw63/7/y/N3EteKYtx+P1Jx2dt8Ysoib2+zpeZgfiO9i3a4rfhWnok
d/jwa4TX6FQ3J/6JRu+YYKmG96i0qh/ZKR4PZa8wztOxIoQunRS9ZpuML47n
q6SmymCp8Qe5ITEVr+BO9//nEyyupHpL9T0DUyJfx+V6De6Miphrimci44pa
RnBoHQxv2u7p0srG/HBemYB/Pa6+SJgJsc3FzEHNGys8GlHRc/CubNBLxCYX
cq9YNSP/r2J2deJrtDP3iXnrtuC5pY+yd/EbvNer6foi04qbAaUaIn1vsTvC
wjRloQ3xmkKr8uffwamRdJbc2w77w/3928ULER+x+4kNqQNTTWKP/pH/AJP0
qySf6k48rmw88E3rI46Wf/HRf9EF6Z2ljWkoQlaH+LGWqG7g9X/2+9sW4yjt
RKy0Xw9E5QcT4FkC47kc5Q1WvVAdd+6SCirFQ+Fp8S41El5l5s+RI8qgus7Q
2ly4D5IeQSs+JpbjV/lY6tWxPni5W01H5lTAfttYx5mSfnxTGGl0KK4Eeceu
deLRA5i2qr6p0vgJtWoRb/xcB6FUFys3S6rClGpv6n3NIQj4MtIaJz8j+DfV
UdfFIYiYego8nq+GiWL4FW7jMDrVzbI/3qmBz8Yen31xIwhpuVMqK16L0dXq
7w4eH0Vy4LtPkcm1yPkZcXRBdgysn7Ef2PJ1qOQMGQSPjkHmADfF/kUdEjgy
xvY246C3xQRUan2Bv6eZtEXBOFbr6+gql37BjEPIGoU1ZIgNZnOiUA/Fphzt
dh8y3jRnJEw31WOutPu2az0Z+hzWdmfbBoRsF/zZrEDBG6pRfm1/A55t0Mle
e4WCY0LeW1Q9G3EhwuvSvg4K7lpK3I5jNoLmlxR4YPsE/nZe6pi72ASh/obH
Mjcm8PQ8Q8J9oQntNXPMvs4JpJhEH2iMaIbRDrWzQSpUpOun2Wuu/goXCVdJ
VigVWvKdTkmJX7ElOI5y6CsVvttHLRdlWxDlWD8euJmG14IhGqdyWpBeNi96
y4eG0lLz+WaNb3BJ1XS7UEJD9lOR9zuLv6Fm/tTIXkE6PKw97B8ZtKKNlHJv
2JqOntdL5KWGVkTqtJ/0SKXjXck9Fy/rNpAlhF1rKXR8Sn9d/ZXUBqaPwf1/
1SZByxGR2OX+HalGl0dlgibxWtz8yKPJ7/iR8tZ9XdkkjGXFfZYC2jHtT1/N
XOLrhb+CTs234+mXLRNPDRnocrLR8TbsAPeRE009koEvEvZKj+90gMFIlE6t
Z+D5aTvBluYORJd/Pz+xkomA5U0DS2s6QRIR44n9zoS26cWsncc60UIySZOM
YGIhaJv7qeROnFWOuDz1mQlq4IJE8kAn8nifw94vMJFPKS9sku9Cit7SK8u9
LMxJ7zBd8OyC1i8HBBv9WdBhi7Rr8OfG3+zKfbmXLOxmKpi7s7rgIFGqZzvK
gu169eJ4rW7Q7GbXea5nw2aaI10f1A35X3VlbMzZKLy29dRsSTeWj4cclbnB
Rqnk/awdi924t6n0Zd07NqbO9nc7owflx+e1zMhsmES3/h0T2YOkDQfIeWs5
SKqRFalu6sFGu+ufWYYcdN26Jja1uhfG4tWNqwI4eOqTvrTVthcbTVcs/JLG
gaHq/lGHpF4k/GtyYqCJg/1h8wV3+3tRqhtFfjDNgcTKaP8yORL+w/mevEWO
iydOaXIsDxIWFddffvg7F9nDvWWyuSTI9DjdHPTlovX96GErJglkoYwiwQQu
Ol+6VIRr9uFYCX29WCkXwlqEwvuLfThH08zgDnIhrrs/kFzcB7XEy44FP7mo
Vu57K73Qh6Tqqn2WW3jYX+LVZ3yoHznnhX9vAg+iUyGcSxH9cE+yubbFnYcL
K19wchv7UaefOuJwg4fEPZF9JLEBtHlNnD/7hIfB6mf5q2wGcFtUS/l4CQ8C
9bd99RIHMKoZJrytkweVrWXrzvUNgNxRv/47i4cSz8acVNlBxE1LWf8hSEAk
QUuhxX0QtATXD+UyBLLUAm4uZA+CWphntLiLgCVrRbMaYxAxNvOLm48QuFnk
MeesMYQh3yPkDc4ErvktrokOHEK3cPIU7wKBDz1GIpVFQ7ikSNXIDSfwwPU5
gzU/hKoynUS9WALBwqFvZQyG8b49ctvr5wRmNTUdLW4Pw+J0z/hsPgHBM/KU
sIZhPAhTaVaqIPCbSbrta1E+19aEDqo28u/bK5TZbzWC1QpfN0p2Eog0Suta
lTACswLZW52DBE6PvqHqkkagWeW/7uIEgcGPl0mnZUZRaVHXyWURMPLc+zLJ
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
n4Y=
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{155.0625, 43.23009375000004}, {131.3720703125, 
            29.25}}, DisplayFunction -> Identity, DisplayFunction -> Identity,
            AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
              HoldForm[
               Style[
               "\[Eta]/\!\(\*SubscriptBox[\(\[Eta]\), \(c\)]\)", 45, Bold, 
                GrayLevel[0]]], None}, {
              HoldForm[
               Style["P/\!\(\*SubscriptBox[\(P\), \(max\)]\)", 45, Bold, 
                GrayLevel[0]]], None}}, 
           FrameTicks -> {{{{0, "0.0"}, {0.5, "0.50"}, {1., "1.00"}}, 
              None}, {{{0.5, "0.50"}, {0, "0.0"}, {1, "1.00"}}, None}}, 
           FrameTicksStyle -> Directive["Label", 
             GrayLevel[0], Bold, 45], GridLines -> {None, None}, 
           GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 750, LabelStyle -> 
           Directive[Bold, 
             GrayLevel[0], 35], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> Style["(a)"], 
           PlotRange -> {{0., 1.001}, {0., 1.}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], {400., -243.3508830702711}, 
         ImageScaled[{0.5, 0.5}], {750, 463.5254915624211}, 
         BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1:eJws13c819/3AHBkRERk7+y99zjH26xIKCORlFBES0pJSZlJKlL23nvvvXdG
JS2KjGQ05MP39Xs8fu9/3o/n49x7zz3n3j9eV9DZy9KFgoyMbFaUjOz//smE
vNzce0yA7P9/VqRyyVLuQNi3qPhdSiwU+K3+BtrX5UBQYOz5XZFFMJaTwjdr
WwWSgskW9D61wG6dpjOQ3QxNuf0BxdotUG39e0FCrBP4pl30rbba4aTNobig
tD6Y0zhYfoWvGyjzjqStMA2DaUqQp0djLxyX9vVLGByF+wO/okI3+iEzL9nS
9NE4DCslPYgcGYQ/0r0Sm6ZvwCOfFOpcMgQH89fJsvZMQepOV/AX+2FIk+Gb
PN4zDUFHnK6Gfx+GX+OpE3fbPoLV4Qe7DjuPAH+Meuuk0GeQyW+rPtMxAsY2
/QVygV+gbn/n1BPOUfBmd4578HkGEjWGOEUdR+HFxK+g93pfYW5gPpfp+Sg0
x4RdUk7+Bnk1x4/9axmFHzYCDmFk8zBY+pzX4usosHOUm3w+9R1G/CeSD5K/
Bpw8qKzRuADs5fGnfu5/De6x0/yP+ZZg7zV4IH/gNUTZXtnz7fYynDD6Gjok
8RpqOHb/1nn/AzgPBrcFSL+Gqx5HLh1KWAHXSC94K/kagvs4vm2Y/YRhCc9l
Z5HX8Er6y8nk/37Cq7oRm8c8r6E4PH/ENH8V/sUIjnczvYbWxesmf06uwQvH
p3fOU7yGCVNSQyr9OvD5fm9t+TkKC3n0yuZ160ByW+jj/DAKFAwT2ZsXNuDt
4bbcgp5RYPNM5s/g/gUnEh7aV5eNglT/hWcWvb/gDcurxAvxowAyqnv+u/kb
grUqWn/eHwWrCLK7WZJ/IJqagnTlwii4LfX8snr7B6gY7KxYLEbB3+yZx07I
X0hgaPT4qTIK0fmnPudobAKV+WSeBNcoZDJI2lrPb4KmV6LW2H8jUOu53k/+
4h/woGEC3acRGOpv0M832YLe5Tdk060jMCMTUm37Zwt+b/FfP50xAn8irOQo
s/6DOLVylfTgEWBc5k0vtNmGhn9RbZXnR0DoyByXPc0OJECNVIbpCKgXlDym
rtyBjY4prluyIyD6UHeXnRIZimTeozdgGgG5SqEG2TAyPPLfCRea1WHQ+Lb7
BuUXMjzex/14YHQY9NmXld5qkiPrpBNbcvkwmBuPLhc+IUfNsC8VQTHDYHe9
KjvoOzmeELO/ce/GMJzJjD9rT6LAypOHml4R99Vz4h6/QhwFqhX8sn2jMwzX
adzeUq9S4GJAQ4i2wDDcUzN7NnVwF4qpbvH1UAxDhKvi0ZLkXSi0N9EnaHYI
YmLY9wT/3YX2BfGhl7qGILlzq93BghJjv53efJw7BLm/PwUoZVMiS9pBlq+P
hqBCrFOLlpwK13OPT16+PARNNnm/pm2p8CI3D62G9RD0PIwqLiuiQqGlfeKa
mkMwWunjEbqbGh2HtAOu8w3B9Dd7MScnahR9eVJylWIIvrHrfVaposbhDSUh
68FBWDMWjd/DRIPAGfHD8MUgbF/fY/vJlQbjLl5eLTszCDRZK8yVjTTIvZkk
kCY7CMyTY/3h7Lvx4hcjhf2bA8C9uzbY2Ws3euuMpFJ1DICYepK+eudu9IvX
bPd9MgCKbkHbDPy0SE83UuZ5agC0Ys9Xf/GhxYv3s9xmpAfAqMv8avUALQ6Y
hxdPbfaD+R9luUhROhRmK9K17u4He3Gu72f96TBPZCfpaGw/nLXdSdMcp0Mr
JbEjva794BU8c4pJdg/S2zimtqv1g29VN9fXoD14y2Lhm+7ufgicKxirfb8H
1WKumau+6YNwjqePo1To8SbHga2cnD6INblx2DWCHvMM75K9utUHyb6O1Dqz
9MjhYnl6t3kf5GXpNzPrMKDbMj/7D8E+KJ8UvzX3lAGpDlYxmm/0QtPuvWoN
iwx4dCtITqy7F/rU135GG+zFCs4eS5/4Xhhzm8xzf7UXN9xqj2hd7oWPsfWu
sL4X29PCV68a98J8V8oBVlNG/PXJfvcB3l5Y//Pw/fdURpzZw2Ctt9YDZBKe
sU3/GLFRZV/CcHcP3JfOluiVYMJOO56k4aQeCGnjpqk4zoRv//Vwom8PRJx8
NJN0lwmLKTU6uY/2QPQ6WUtYPhOe2ht25ox4D8SEX0n0ecOEZ+FCNit5D8QL
f711mmofnq65aaXwthtS6mxPmCrsw4SoKp7y0m7IPNarpuawD89zfWhKjOiG
/EUd1gMh+1DbvWrrh2s3FN8vWqUv34dRhecfpZG6oZJHaOj3x304JlyvUsfb
DXVlz/I/0zPjGKt1mcrfLmg23R3Wr86MJdmr/YxjXdA5c9Ot6iwz3vwQa3Kw
uAt6by0Zpj5mxh3ttsWPEV0wvN9J6FEdMw7HRwSNne+C8bwRshtzzGgaPPBR
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
UM+aEj4fpFGf+VEIO/f36LRvK2H1m0ua1h8LgVzKbb2RVhnR9JTFxBDh4bbc
mv3KOHdv+5xrcyHsui54ppxfGVvLM12oSwjz+nMVSSqj/rMptbKUQqBqfTuc
o6KMld+Mu7yjCburhaSjMiaI1ZNr3y+E3YxPMemwMqoIqQ+yXisEuvKV33HW
yvjr1RT3tgthe7PCZ6eVUXtpY2TduhDoyXPOPfZQJr6nfn34a0w4k5ov7Loy
Wij4yjJoFMJeszNjQfeU8WCAZo6sJOG1xvCACGV8mCEEjtyFsO8Fj4FfrDJu
BMGbl/SFwAI3/l1LVUbXa41nv/1XACyzYyXeBcqoNP+3H38UAGuY4vkL1co4
xnOePOsjYYVIwXNtymhZX7jAM1IA7BMLk06Dytjw9NGNxNYC4Lpt8tj+rTIG
qC7HyJUTFko3tp5Vxti8N0r9GQXA002+c3RFGftE7mj6xhL2cqw4/E8ZI9Lk
XsiHFgAfa62nEbUKkhc66vzyI1zLLqK3TwUTdpL3d3sWgMDpq1NaPCo4plpM
n32qAIRohqNVxVTwZoQLy3MLwvkyhxUUifnB1WyP9QtAxCqUQlqHmJ/TRRmj
Qvjv12pRExVkkB3szRErALFE/UuCVip4ulziRC8nYcMkcR5HFbSmPJ7wZ08B
SC5sfWBzV8G8iqUHitv5IB1lF7Pvqgqy/CmkuLFCWK3iCP0dFdzRvk7W9zkf
ZN8zU9OEqqDYlo6X1BjhQK968mcqWOfGqxvTmQ/yEn1XtxJV8JaM2UnGGsKD
4tK/c1TwiLhQdXRePihdC/rys1wF20VZDIQT80GF+3PcYpMKSqcWLDZFEW7W
tfzWS+z3XlqK+/18UHN9Sft5XAXdRpqO810nzPCnaeqTCvqFLG5Mu+eDRukx
34lFFaQ1krmSe5KwXbHcyG8V5GNMrw80zwftHYZvfRSqmM/6pN2VlA+66ecT
OhlU8ZDPET8bFcKHO4+3cKhi+T/zQUvxfMCfQgz1Qqq49kmsxI6bcExAW6Ws
Kq6+uLffY28+kHTe+5VoqCLVI7FvIeSEv2go5RuoYsHXP1yl63lgGPL8e6a5
KtocXUv69i0PjOXWklNOqOLRZpnzYu8Ij5nbxbuoYjq+cb08kAcH/fKYYr1V
8Vo+hnU1Exak7Xrip4oVD7raJcrz4HCny52IB6r4rnR59/Mswp4tqsFRqphl
dsiI4VUeHGHhX773ShU3XMO8IiPz4Gi1X/rtTCL+7qYPTyDhU5MnfUtU0Wff
pmmZTx5YUqnsv1Kviuz9FLPW5wnnRvV6dhHz/2TIUzrmwTGL5Xtuo6rof5np
QJ0F4d+HNM9Mq+LEeECuv2Ee2MRn/nSYV0WtoxaNhzXywE6fMtt2XRWLzqya
C8kQnndystpRRdvGBXMqwTywj6xnP0Knhkdop4p/7ieswjVowqqGjQW+bnO7
88Dxnc8DfQE1/FgacW5+Kxcc7o7q6Eqp4UbgfwnrK7ngJCa/oa6qhjItTZR0
s7ng3B+ep6SnhiVcX0Ml3hC+Mn9G1lQNT+x/ImzVnwtnOY24JWzUsOjzdtuD
ZsKNKSNCzmoYpH7rVFt5Lri67ITwearhPJfXtz05hPec1OP0VcOQMoujDgm5
4F5c9YclUA3TJEojqp7kwgUb1qK9j9RQwUMtmvch4f8uudK+UMMCpphj4X65
4Jk6wEeZpobqQontlN6ED0qNbxeoIfN/8m8fnM0F7x8PI/5WE+txkR4w2xF+
NmOw3qaGrT/f1Wea5cJlLb2t5UE1fNTFfc2IlAtXP8WXzr9VQ/9wxaRlVcIP
N8/PzKohVc5ZpSSpXPCRsTnwYUUNfWdohewFCI+WvnnzTw0dZSPO8LPmwo0b
TFGvqdVR+p7H/CItYX5Pk8F96mhRq57dup0Dfu3dO9086lji9SwmdS0Hbl8Q
rWwTU0efbvXs8DnC+wIvNiqqo+zphRH/9zlwp/KDSI0OEecIpr05QthB+32Z
iTpWrv/T8+/MgXu7XjwttFLHx5uGl8LqCGdvHM5xVEd92uvhycU5cN/ccle6
uzoOVBQHN2XkwIONgprEq+rIJC1pP/eS8Ms9l+PuqONNctG/HFE5EKznJvEs
VB3JeLZsLB8Q/tb2MfKZOh4P3e/51C8HwiIEY0OT1DHKeU7mgzdhJX/zoFx1
ZE4if6x4Lgci3rylDqhQxx7yf8GP7HMg8o5aw81mYr9zd/auHSUs8vTatT51
HFY1ZXMyyoEnvSvS3hPqqCYr/XxMKweiLpnNnP+sjolHtwKtFHLgKXvOS5cl
dRSH7LE3ooTrqa2c/qije5zcXTeeHHh+5gyd/S4NHP/88tbOvhyIpW1qPr5X
A8/Y0TUk0BAu5LlxlFMDb33M0DL6LxteHr8hf1hYA83e5y1srBL+N/bNUE4D
ZThd2/LnsiE+WTERNTUwIlWuznOasHGktZahBq6VenWrvM6GxKUFBtWjxPrh
iZ+perIhOdqkXd6eiNsbbb9vJKyRfkvqnAZWCG4yN5RnQ9oHcmXRSxo4G3mK
PSOXcJDjgsAtDTz4Q4LieXI2ZEjVpnA/JOIU3D0RMYSH2U+wPdHA5QWKcxER
2ZB1/eq+ffEa+J2hqe9pIGHe4a49WRqotqa7kXojG3JaZQKoSzUwT+HmeI0X
YfdQNfIGDQw3v+n6xiUb8hm/Lf/r0sDSrOOJO/aEy/Uzfo1q4O5j8tdkLLOh
0D7J4ee0BnLQan90NiFM/t/+xXkNpKeumkjUzYbiTLu+r+tEPRsrljPK2VBq
VhH4aUcD/43hQXkpwmvMWlN0mug2vbckUDAbKl54rY6zauLOucH70+yEoS97
WEATVQd3VePebKiaFT/dJ6WJti6aRjmU2VATFsTRqaqJk2Z7hbn/ZUGNwufB
Zj1NFLggdij6ZxbUTeg+rDPVRG9DzSLmOcK3X+pW2mji71WaIy+ms6BR6M9G
sbMmapM5couNEe4+lp/nqYmPbNmY6nqzoNmr+Gymrya+k2UXtm3JglbWvTwp
gZr4/Kul+b8qwrXnR1890sSprc6Q9MIsaD/dGRrzQhNnfgb0WmcQphEmPUnT
RA/Fp/SM8VnQlR/wN7xQE2PJhQ0HoglbvS96WKOJ3c6Onk9Ds6Dnr4bbvXZN
HN91+/bpu1nQl/ic//aQJhqLtXuq+BI2XBu//k4Tlx49VGXyyoLBBfNHl79q
Yvg5gaGfLoSj8gw9f2pipexvxbcns2BYjfY/1y1NXM30t+m2IvzepcyZRgsn
6pVVGw9lwWhgywUHZi1MuJzSWauXBWMS/EK2vFqY1GNP2ahOeNDvraW4FspW
7cx0yWXB5LXJKDMlLbxFo+78RpQwt8pBE10tbDxUfXWFNwveNkeR6R/UwsAO
EuteVsKuy5U6x7SQ3jFBW5E+C6YYDnupn9JC5oCkLyd3ZcF0aaao0nktvMIi
vuvRZiZM21FOy1zTQoWzfE/bf2bCpx2nZ+IBWvic6XrkrnnC6fWmQmFaeOmX
3LLxx0z4cpiLku+5FkYKWGQ/mSD806eWI1kLjcsWq78MZMJszOhlljwtNP3A
x6nVkQnfdOQl91Zq4c12hqbYesJfwj/tbtHC7YvzmVtlmfA9ZD52Vz9RX8VC
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
25cLuC9/kZGXtYdFyS+KVqG4B5KOJyraQyQv//uUwCwkbLyzVUrFHjKV3qX/
9MtCIpEzWgka9lAi4+FKP4K7J/eCmJ49VAeyJKo9ceu6DMYa2cPRVL9Ha/dk
IdHQpa2Cm+xBKHfxUBQ9C4m9LE66aGEPviHGPNNOuNfvnuYFexAZVozfZ487
UMgpzNYevlNqxbogC4k33yv4S7SHWnHFYFuLLCS5xmtlMNke6pTQ6wcbcfvJ
7F9g2MOYlbmiuUEWkmpoqDu1xx7mlsXtq7Sy0CrZE/Iz++3BPbNrj5lqFpI+
rBxw3NseTshwGNWKuGvbOr79Zw8hip6m22WykIx4iN5Rf3uoV6JOPRPDvV/3
0pfT9lC2JfgqRSALyVb2fjwUag8j9lOCQ/8ykazApe3DEfZwsKNtr/+vTCTn
Zpa2L9oeUnn1rvLP4i4Z/tkfZw/XGtUTM79lotX/WOTdHHsg3ew9sfkzbioq
6U2xh30fDql1f8hECje+CzKy7KGU/C3v5DvcixkHX123B0oEa162OxMpORIf
uxTYQ3dmoHxtG+7sRaX2Uns44t+w8kBTJlozffM0sdIepP0yHojV497JePW8
Bq9nrv722vuZaG0Kn6HtI3tg3s25eLQS99fy2CdP7cFgRpW9rjQTrdu+fxS9
sAe5LYP7u2/iZklYP+ywh4p/AjNXcjOR8qcHmRav8Xq7tu2wT8e9+b/F6nf2
oDuyn8KfmIlUYhXpmz7g8fctrmm6irv/+e2KEXt4tqIlNzY6E6kZnRY1/moP
+pWigy4RuC9oHC6dtAfrzvkuhZBMpP7m1RO9OXw+Wp4Fj5zCrROhXPAbr29m
VU+FXybSCDEK1uRxgLAXPCORR3B3DLy5zu8ACu7jua4HMpGmWpyJqqgD9H8q
EzV0x33K4mrWKgfQPMVdL8jMRFrPx8aUVjsA43rfp2EX3EopO1PXOID1xRdO
DYRMpH3MNldOzQHCy256XLfBXT/7h6PlAIOmtbKXtmciHZnrrqv0HeBetpOf
rzlub3LlVRMH8PxV7MMwyUQb7i9LiJo7QMYTNX7rDbjFSo/GbHOAr1N/rYw0
M5H+vj1N/DscQH4qTk5VBXeF8PpIewfg5qyPllHMRAb8Ned4nBzgB3kVR1gG
9y7vd+eoDkBoKjRbIZ6JDItlN/1xdYDnxjuPLQngXn7COrvXAcSNNlv84clE
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
yvEEk6aNfrqv0QcvDGp6e8L6f2GV5S/QVflpnT6eUJiVfdfhGfpqxvq03Z5A
Zvie6u1MIrt2mI+47/MEF9kiCH+URAaTFE+q7fcEe2PpUpV29KrXzg8DPOE2
hXSeaUki73qvjaUc8IQ9yVoP1t9LIrsVj5S6huLz9joIXjahm+/yUDqI6xek
TIm4hc60kW2JRH9S5DqzHl2gUSaJ9gSzdQ708htJZN/lj2yHOE9oZlks3nIt
iXx4eltJnucJO16YNH6+ii6TfeOOwBO2JvfqpVxJIh8XBe3hi9E5mrD0YhLx
9XDQ3JDoCe84CUbtZ9Fj9JukU3Aeb/xuCSxBP/Mz6OZRT/Cs1rNSL0winzra
9GOPe4KkqXp31akk4jdR1GZzAuvjLaLTc9HnHYr6k+kJ1lZ2qpOyksh+t22m
NTmeMCpfJi5KTyLD4Qu7I07i/isXNzqlohdIC6wKPIFjmXBzNAX9wVPzX4We
oHUlODYrMYn4f7/8urLEE7ppslLrxUnks64oJeSsJ+Qn/lr3kY9uz1674oIn
TK9Rtks/jB5o8WH0kiewouQVbWOSSEC2UuaVMuxPdH7yx8gk8qWx3y6gwhN0
j2Q+yghHH77xbck1T/DLvdS9MQRdM7XgU7UnWFwqyP0amEQCbfduPl/rCVUf
zOYW7E8iI3tt/+5t8IS96do7t+xDP6513uS2J/Qrz90jtRu99jP1XZMndD6R
Wli2I4kED96ZUtLsCT8OR57z5iaRbyp5FT4PPGGozXVIg4W+OsTbqA3nKdl6
sJmG7u2s2tfuCdvLpAqiPJNISJJhff4jT3B14M4225ZEvleO+XI6PUE2evbm
gc3ovQ9n6z3F+p74tC7HBV3hTPOLHk8wHM8a3eqYRELNY0NzXnqCsXEfS3FT
EvnB8DSiv/YEhRqB8NZ6dMGSjln9nrAowM43EtAvTY7tHsD9Pbtv2sq1SSTs
6fPFJ957wq7zOns+WyWRn9JXe7Z/9ISKFVWxZy3QFyWI1T97gvBFgPtOc/Tt
XpaPRnC9n6a+nrssiYTHWL09+g3P4zsOJr2LksivUpXUzT/xeoMfFuaZoHcM
gvKYJ/gOlb9jzEcfrxtunfCEEr43W9swiRycl56T+M8TxiQ1Kc/1kshvVz9H
J2kKTHsXezBXGz18wy+FyRSYUxykzZ6Fnj+nuHkK+pB7uMHMJBLxYNRdqEgB
m28Dif1qSWTs2z0pOyUKnNAfppYqo+vmX5JVoQBnYOEr32nom8KZt9UoAN1e
2ssVksihQLephzUosKBwu+qvyUnkT9b866BFgfUz7tbWSaM3/tn5bzYFRhQi
DAT/EsmfT4/V63QoUCo0W+M6kUiiNc/fitJHL76spPk7kfyF+ABrQwrQcqvT
er+j76Xpjs2jAP2G2uOzo+ipZi3XjCng7hvVHPI5kcTUykeELaRAkMWNINuP
ieTfwKsFFksoUFZ9rEPpPbpK1ZNvyyhw7eqdwWdv0a2S48vNKXg+zi4rfZNI
Yr19zIIsKKAS7W4W9iqRTEpa82qZFQUaHFb42D1Hr5yR9Nkafx8f5zLzKXrv
0OqLNhTo8P33fuBJIolTuPXO15YCDuyg1dc6EomUeWb6wg0UoLTn2Uj+Q2cE
bBiyo8BGN4cfjBZ0wabRUgcKpPMtuMvuJZLDl3RP7XKmwKDFwhjZO4lE+ul3
l/luFBiFj25Pb6FLt473b6FAWLbNo4v16IsKz5zeRgEzyqA8vyaRxG+P9PTy
pEBNwbkv9OuJRCZm62QDGgVONWyWmFeil5qUv2Jgf1RznkwtR++YxM1jU4Cr
5N7RfymRCMa7pjO9KKBkbx1bdz6RyM27VDPHhwJH/Wa/yjiD7irY+2wXBfrX
Vw4fKEYPZ2pl7qVA4tnHF91OJxJh/oo7nn4UiM6y1lt0KpFMeTA1eGYABRbN
v0IUctG/vTF4EoT9OjiuPJiJrlv9X2oIzt/T3pSm9EQi2nT00NZwClw4vaC+
MDWRyAfuXqgaSYGmzem5vCPoWeTpf4coIB/41dQnCb1xpjA5Fufv4uRddpJE
Iv70aYVLPM7bg9QtxsJEoqDZ9GaqgALvTu8YUuShQ86R+yIKfF9EzIZj0fce
sBEnUGB68NC8jkOJRJLq+HFTMgWunFzcXBmRSBRrDbLkjlLA8PN/mjlh6AO/
NjWlUoBVnaF+OBhdpf17fDrWK8itbndgIkmwKjm9LhP7c/KG+ub9iWSqd/QW
qRwKhPcXaq7ah564/V99HgX8xjvu6O9Gr1x0ITqfAqZVSnMVfRJJ4isZ+tpC
CnyU1jH5xk0k0xR65CeKKbDlTXPPSxb68rLK6jMUsA18anWfjs4Q7zh4ngLv
+2aur6QkkhQ+R23VJQoUCRx+FmxPJMqXLBt+XKGATJ2Vx5Gt6N3T91dcpcBJ
ucvsaDd06YE5wVXYn+/BM/ycE8mRhbX3llfj/rLYEshwSCQq24+HjdRQoD1Z
6aCzHXr0vnmX6ymg1hNkunY9eum6R/tvUUCo7MhfAonk6MNZcYub8HxYxRDr
r00kquNflny8S4Hkg0EWM1ajGzU/P3sf9+N0j0Q5S3TXk5I9rRTQcmqXjJkn
kmNhoauM23FeM8+afV6WSNTyXQYGOihQH3Uxtn8x+n2j40VPKMBOLgp7Zor+
bdx2Rzf2N4Y68+GCRJKq8+jz3B4K6M0+zmg2SiQzNp3Nff2CAovX6jk2GKAH
xDmd6qVAXG/jy2u66FmU36w+CjxUc5tdNgf99tISnQEKTBoTTpzTSiTqn+S2
P39HAf1HVvxijURyfOZL6ewPWJ/RJVfz1dCh4jJ1mALDt8zEucqJ5MSeRJbW
CAVm3J0mmzUtkWimek/r+kqBfyckRicU0GtWV6f9wPu9DRk6Loc+oLp7228K
xIdlbk+VSSRpyu81ZkxQ4LVpg8+xSYlEy6rh9sO/uN5vV2cf+5NAMrxOBB6R
osLFV+uCj40lEK3E/XpuslTwnr4yKPVnAsms2NiqNIUKK697qKd9SyCzXmlH
tihQgbb0AO3ECLr8N+OEaVTgd27fkDWMvvxBp4MyFYZM7z/M/YBOL+DJq1HB
rD5buuBdApnNP7j8rjoVdqxJ7yx+m0CyLm7u5WtSoY/Ldzn/Br17QfKG2VTg
Tl65q+xVAsmW+mcto0OF+2qBhtefJ5A5Czvf39SjgmPi5MMNT9G3XTgRO5cK
iyV1h5s70aN5G8k8KrxcvXvew0foJfSvfxbgv9+07XnWnkC0Hy7PrzHF531e
59bfmkByxhTcIhdToT1Dtmv4PrrR6wmrZei5vv9+30V3uXb213IqZAlvN09u
SiA6YSmUqpVUuCHfuVztVgLJPbVTLnQVFWTfB6zVq0e/v/bqCmsqLJDjvltU
g/5V3evrWiokuR8wt76eQPR1PiqXARXsnwXrOlYmkFN2t2sD1mP++vIz1HL0
gKx9S+2oIGMU8WjPZfTMwFnD9lRQ9NHKjbiQQAxu298970QFds+zyYlnE0j+
R72Qfa5UKBtPVsorQZ/5c67pFipob5a+erkQnbS1v3OnwrRw6d+38xPI3D1F
0SUeVABj5vOuvARScCxq0U4qPo9pL/NjNnqN+zMjBhUqWdRDUpnob01FfSwq
pF1LX62ZnkAMlaUtCrhUeG67M21xagI5veppH2cH1n9WetKGI+hel4/q7aLC
oqBvcxlJ6AlC8nIPFWLS3LYHSxKIUQXrU44vFW72hhglCRNI4cuV2XR/KkTc
WXmkmIcur+QwO4gK09uYGQ1x6Gb9P7qDqVCeWrOmJzqBzKPfKDwRRoW9zfqH
fkQmkCLesa0eEVT4akalqh1Ev7hnksYhKjScXfFwSSh6F1x8FEOFQYPD/U4H
Esh8KS3GscNU0MtWSd0TkECKTT8rbOHj9Zdcei70Q992p0pZRIVQhcU3i/ei
H8r1aZNQ4Qqu+c6uBGJSEjwjKYkK8y7K0AZ2JJAz7U43nY5Q4ZfluNIUL/Sx
uf6KqVS4LFJmGLPRDce076VRQd9cZYMjI4GYujy8L8ygwq6XLU2+1ARyNrQ0
3C4b53OjxusUD/RTMfMn51FB1ep6Wrk7+j2Px7dPYX+zRX1dmxPIwq+LDx8+
TYVUH/f7Ey4J5Jz25GW2xTifBe8d5jqh2z1/8a8Ufx80x8veHt2/PKHuHBXq
Fa6r+W9MIIsyJVaHLlLh9KVj9PR1CeT8Le6g9RWsR0P4mjqC/nFV2lg5FXrO
WlcMrEHXUFl/vZIKzl/PNSmvTiCLyeCXsOt4/WVZflaWCeTC7ro8ixoqqE3v
Ou+9Av1YmvP3OioYOJrHJ5uh3/AdK79JBZuqmC/XlySQJW/XlwY1UsHXOunb
24UJ5OL0OR5md6mwsX1RipoJ+qpRmS/3qDB8eGkDmY/OvXflYgsVlIJ3Cv0M
E8iyhFNsv/+oUNNV0J+tn0AuXQ1TWtRBhWPfK7ru6ySQpS9dbww9pkK4cSBn
bDb6lPl7znTh718WRZtqJZDlZn9m7n6G/cqct5yukUDKaI8b57+ggsLnmxGJ
aui8c0FvX+HzCJwpdcroFw7rF77B8272iftfpiUQ8y5qm9dbKtAjDjw0VEwg
5ZPMogzeUaFEWO7rOQXdVN60dwjnzcIkJ0EW3f1VV94nKrSkFLMbpBLIikOV
fOYXvN+FP5Xf/0rI1eIkc+2vVHComVSwcEJCVrTveP3sO9bvb5y+12/039Yp
mb/w93fcl2f+kJCVhjPWUsap4BFh39X+VUIqnIeGZv7F8+b4cmWFEfTQmxlP
JtFg18n+p7bD6Ccz7I7L0KBqtZll5AcJsbjn/22rHA0CNT/Mr3gnIZWjdgWq
CjQ49ru/9PNbdG3dze1TaVBXNVJj2oe+8fuf5Ok0MLTu99rZKyGW/i3nXFRp
wItJySp4ISFVGaep09RpYJp6x/vVM/RbEVMezKRBWzqjTrsb/cOWCvEsGuTU
Gp2lPZEQKw0Tb3ttGixwGZ2f2SEh120mqU7RowE3N2NF93/ou7vqmgxokKT1
oUOzFf3oRV+eEQ0srGulKPfRb/Bnr1+A9zv+piHjroTc6Gc0S5nSIKBxicqz
Rgmxnr4itGERDVbHhHyecwvdcqpRzFIaPBdLWKx6CVnDffNw7XJc3w1bZn6N
hNRIrsdMrMDn/7v/Q/919KtHFt+wpEGly4C8SRX6i109B1fToLkyssLvKvoU
Il61lgbOVJmRsisSUrtspuVPQoPLO7fc+HVRQtbSPvVXrKOBy9zV6uQ8enzj
seCNNHB/fXScf0ZCbC5kg7k9DRoUFwe2FktIXWfQ8IgjDXw0e4M1CtEnOeZc
dqHBvaMxcqx8dBMDR//N+Lwze+eV5KG7//q52J0GkVs7O75kS0h91H9FH7fj
/eQslawzJYQUF7ufo9DgkXTXY346+n+HpPbSaXDfNMHkYaqEwO9tl4xZNIgL
Mp6qc1RCGuYuYg5yaND0Kv7gnmR0Z5mpxd406BQHBVcmoIc8u7ZjJw18M++N
y4jRT17ZabiHBiftWcpbBRJyq1mk/mYfDd6+mXzpVLyErBtl3zq1nwbTm9Ke
fY5Fn2MZwA6kwRJm31ESLSEbNk7X1Q2mwWnTxscpkRLSuP/tg+ehNPhbq3S6
Nxw9o+Zg9kEayF9PmzALRb+ZuoAWRYOyNrPX8QfQP+x9ohVDA4XbVZs7AySk
SX1dfFccDVbu++Nosl9CNtrMMkvn0WD/he7/ovah7/rycpuQBl9i9V6175YQ
u6N3E2dIaPD1U0n4vJ0Scqc6b3VHIg3OKtnnRHij94e8O5JCg2WKnQ7tHHQl
l3S3YzSI1zWOm89CtzTaMD2NBrHp6usO0SXkLmd8pOUEDTraAhMfUyRkk6Tj
ZEIWDX6tmMlZ5IFefsbFMZcGJpu6a3ju6C9ix+VP0YB+PLngxWYJaZajnLlb
QIPlNcqqlq4SYr9sqaegCOuxf7n8USd0qtzkjaU0uODXKvxgjx7/okzmHA3u
iqtS7Owk5N75q5xbF2jAKbqrV7BeQhw6E6bHXabBnPLHln8B/Z9XDSmngVpl
RRfNBt1k9d6/FTToumn7r8paQh5sVdWqvYb7Z8ztooaVhDhFvWuKvEGD9cer
+g9YoBfVH1hdRwOtx24FHebo/6Ub/G6ggYrylwEzMwlp/eX3X9Vt3K9n/cuO
LpEQl7kbD4XeocFG7WLZ0YXoTtoLV97D82No74utJughX7u/PqCB/dm0NVfn
S0hb3n1BWRsNpsj8NZhpJCGuzfkrAh9iPc9GJoUboI+Ev1n6mAZrdg9E9+ii
z9l8ZLiTBh9VZ/6w0ZaQ/zYssLnwlAapyW9GC2ZJiNv+vx/2PUd/bBgyRRP9
xJNM01fY3w9XonzV0W+e3/T+NQ3C3+9Q6FCVkPah+O8l/TT49E19ziplCdms
Tj+9c5AG/A1ZV/Kmoa9dvmXeEA2ydFtbJiui71L41/eRBrSnfF+/KRLy8Ejv
+YLPNKh5lnPkiayEbKmuonFHaSDOGFplI43elyyv/50GqzI2+ZT8E5MtSjsr
X/6kgax/oobqHzF5ZLF2R+4Y7vebRx0ix8TEnaOuxvhDgxkbl0kN/EQXf6if
PYkOCrWwZst39PJbfk+l6bD7T/ZYzaiYPH6eOSdjMh0i3s9eY/JFTLbJBd7z
kKeDRnD6pPRP6EvtwzSm0kF8cnCTzAd0qt68x0p0KDo0qBr4Tkw6D//oOKZC
h1NL/Vmv3oqJx/nW2C0z6KA34LnYtQ/9SeESlZl0WPA6Irq2F/1f5PM2LTqo
BlzZsvilmHQZu0uS5tDhyMjj4tweMfHcarrKWZcOOY/qDk1/ih4pNaBoQIeA
VPvOmE70ou7Ue4Z0iKt1ujzySEy62y7Ziubj+j/lT93xUEwovwSf7UzosLzN
6F1nG7oBK3fyIlzfrIsbHVvQnVY6NS6hw6sMTaO6e2LyNHja78NmdNA0so5f
fldMqHl9xbYr6CAsGPUqaUS/W71tkiUdfBW1bmvfQh85Kl1vhfXk8k8fqxeT
Z7P3XD60hg6p1eqyCrViQtsArDWEDqtWn+qPqUb305w2bkuHyWrSG39WoZ8Y
vn59Ax2+HFaf518hJs8bmnaFb6JD4/MrvMEyMWEM5WhYOtLBOPqqN+cy+ozg
29+d8Xkf/7j59AL6WqfAq254f4b7SfdzYvJi51y9A1vpUHqycLy1VEyYR363
mG2nwxSrpk77YvTr7RFfPOkQ3p6yrPE0el+J8SUaHX5pv5KHfDF5NS2m049J
B4P+JHZNnpiwLTx4izh0WDQWusIqB529ePkHLzp+r4cIKzPRxbK9Z3zoIDrv
TVlxQkx6y3qSdu+mg9RqnZKy42LCeV5mvWAfHfJ/RR0wO4Y+WfL+rR8dlkxm
1V5OQV/KPVEYgPWXZPOWJYnJa8qqjd4H6OB+W+XeZYmYcA8rfzUIpUPSjwyJ
mQj93MCp3nA69EUo3yvjoz+pdT0ZSQfZCjfeingxefP3+AQzGl1zZU1lrJh4
Gfue1Y6jw22j7ACraPQt6yk98djfffi6jkSPnC2XJaBDmsjTFQ6KSV/hSDlF
jG7iE9YYKibebc1czUQ6XJDz0nYIRv95UrkzmQ6R703WtgWiG4TVHj9Kh7aS
jKfu/mLy1tF1n/txrOc8ychTXzHxCZ43S+0EHfZ4PONx9qLnTtxpz8R6Wfmk
Du5Cv/soOCWHDndfyOn4+4jxa/jsXNeTdJCwsw1+eonJrtmH26cVYL3e/z0V
w0FfT41+UEiHkTKlbHkWut+yRZISOkySKVQ+RheTd+lTntmfpQNrcd7fOVQx
2d3wUjjlAh0+pXbvKvZAf1+x8s4lOngUL3Uy24Y+I6mPV4b7+01Mac0WMXm/
ZsfR9RV04HYUxdi7icmendZE+hodLFSi2x87o6eofWqopsOadW+zuI7o199n
xdTS4ZH2tZfDm8Rk6E2DvU0DHca4j7KjNorJ3mkZPyZu0YHxekaH4nr0lf6F
N5pwP4R7xGUCOttua0Qznj+q4WeMbcTkg0hnktUDOjgWbXe8Zi0m+8q+XfjZ
Sod2qxZveyv0ngf0ynY6eL+59r3bAn3yaYWQR3QYrv/1b88KMfm0JKLKvJMO
zZP2HB43ExM/yhaf0W46NPQORCUtRY8znnGlB+fzjNtnvcXo5/41+L/Eeb8c
+7TMVEyGH3fuX/Ia9wvN09rOWEz2/72g/amPDt81r6g/m4e+gH//3AAdQnbv
89lviL6FEb73PR3oXd6LZQzQI8znm3ykw40/Yb4ZumISUKj4eHCYDm/j+HOX
aIvJl9bXccUjdKBp7nVrnIX+89pSn2/Y/2iZrzRNMRnRP/LC8CfOs2Cp0qi6
mAQ67kp485sOivItuWI19AM2VvkTdBj6WFlooIKeqzHI/keHVpM2g2ol9Dsf
j+tKM+Btw2d196liEvTl9roXsgzwu/n70Ed5MRmdlf0lewoDijbdZwjk0NcH
5dEUGdAcRa7oy4rJV18H51lKDJh0wjLyhpSYHEjXH+tSZkDA0yPVHv9E5Gv9
z5J0NQZoHjfxH50QkQPv27Zv12DAa8PejOQxdLViGXUtBqSNHrNc+EtEgtcc
utIxmwH3QvWdmr+LyDefbeyjOgz4ZL7rkc9X9JSFSpv1GWBevbFdZgT9mvSN
6YYMSC/Osi0YFpHQN093t85jQEvBhgW2H0Xkx9QrMxONGbDBZ25c73v0laJG
x4UM0Lui5hY7iM5iByksYcACj29H9N+KSJjIQr95GQPalhXb3XwjIj+vKLUJ
zNFNpwR49aL39EdutGBAj+WPabIv0WVrTGStGGDC2KpT3CMiB5ekdt2yZsDL
orFT9k9F5LfnXn6cDQMclrWd+NCJHmdrDra4HsPzUimP0c9qvf67ngHa5Qde
Lu8QkYjHn5Nr7RiQpS+7pOs/ERn7c2dNlAMDRq+t+RLZir4gb2i1M9b/yYSR
wQP0zSEZv13xeV4YttxpFpHICGe7a1sYQLE9+tb3joiMnzb8FrqNAcvijAJn
NKK3juWv9GRA+YLa/dU30X88dPtGZYBNy+qX3HoRidI/86eMgf1TO1SvUCsi
Ew6x5wLZ+HxnvdXKqtEPeFKXeTEgya2tk3YNPWfJlM87GDB4P2eabKWIHLoz
ueLCLgY0fLlYfqFcRP58fu7lu5cBdfn9DzyvoM+6qrLQjwFV93W2S19CX5dQ
996fASd2rHa7cF5EYny9fEuDGLA7eHY15ayI/Euzmr0rhAG2U/PSZEvR61Wa
54UzYLNd0evLRejvBkP6IxhQ46qSxzwtIrFq9YanD+H9qPX3FfNFZNKa9Ifc
WAbElR7bdS0P3ccvRj+eAaaivcE7c9BTNix+xcd+b1kwop4lIoevzenJFeHz
7z3z4vYJEZF+MypiJGD91z20OpCGPvW+xZxkBhhQYiYbpqKvzO9/egT7tfw4
PDoiIvGs8GMZqQzo3PllKD5ZRGREbuCZzgCttGDZlYnoV+YPa2QyIHSPVNKA
GL3nT/bjbFxvdhgvQygiPNknDql5DOB/rhpy5IuI7JLzP7fkM2D2itP1fw6j
e8YXqRQyIHLDbJkrsehxNPf/ihlAm/L36o5oEeGfNZNKPsMARf+lT7SiRGTy
Y/lLzucZIDmY4t16EP3PK8bUSww4sOwf+3AY+oIqxftXGPCjlH3fMkREhJuT
r4muMqBL5ljBpyARmRLhs3NTFQP2+IW9Ox2AfnqNulw1Xk9nJJu2H711xq3G
GgakevbWqPqKiOjHkH98PQO89853urdHROT1b+msu8UAl8uFdnG70B0yH0xq
YsDMlDWXrHzQDwQcrL+L9Q37jzfqJSLinE0Lou8zIHbQ5u45jogo3NF9sqaV
ATd8fEN9WOifvx8e/48BUgKrY3oM9Fmty6o7GDBlUDj7GVVEEtYVvgx/gvVf
bqWc5ikiU30jEy27cR51lwZs3o6etnX1j2cM8NnntHaaO3q9yburLxhQ2O8f
2rxZRBLfTUo/0MuAPG70HL6riExT616/vI8BpY2UReuc0a0vjXx5i/M33lv6
zwHdR3Dy0jsGOP79daR2k4gkJTNd9n9gQPTDw3hQiIjStRXji4bx/IrnnF69
Hv311DMfvjCgfmlw629An9rncfYrA8zGTnpdtxGR5BXVsnt+4H6Yccfr4BoR
mc46WrbgNwO2VjW3Wq1GF+7mDIzjvC6UnB6zRL9Cphf9ZUDUrY99N1aKyJFn
M2u8pZjQ1tWRfMhcRFRkh/fMlWWC2SPdQmKGvrhJ87UcE2QWlBtKL0X3zGk6
qcCErM1BSk2LRORo7IEDrGlMWNZtwxWZiojqWUcDHWUmDG8e13U2Rn9k8F+P
KhO6KRI7lfnof35FZakzoT2jreuxoYgcm99uStVkwpHGsx2ZBiKitrmkW3M2
E4qypCzZeugHowWd2kzY218hO08H/fT2FWl6TJgUetb6w2wROd6y6I37XCZs
XnKr54qWiKj/kDmiNo8Jv3686g+fia7Xs/bhAiawGgc8QB3doexDiikTktOu
m8mroQeJM10XYz7YOqRdWUQ0cjiblJYxYXqIm0GmkoikNVl+f7CcCc8ru1d6
TUX/PP20ZCUTAryryxYqiEi61sBmh1VMmH2p68R3ORGZua727xRrJtR3z3hb
L4u+7/j5O2sxb7I1SyKNnraPxgcmhP8Iqdo+Cb1unfyG9UwwyvVaY/BXSDTf
zaqUtmPCqGDc+NO4kJxQHfG+ac+EsAVGh67/RrduVo11YkLDRP0qwU8hydxx
st7GlQmuKWV09+9CMis51O/PZiZoBb16q/8VvcplTo07EyLXmXYNf0F/bXQv
woMJa0pDl9YOoytOhFpRmSDcXjqc8FFIZq94ZPSLzoRXcqfV6UNCksU821HJ
YoJhvGO+6Tt0YVxsCJcJouzDx8feCkn2ZcqSFTuwnguXDt/vE5I5z5Y+H93J
BNlZKy5mv0aXmSK5socJE+4hj31foS9+aRngy4Tmzk6OzQt0j4q3S/yZMF60
xl2lR0h0YhNTPwViv9ol5950C0nuGW/b88FMeL+/aE9FJ/qj1Z/3hjHhfmFA
kuixkORNqOaaRDDB/WT7TEaHkOjOf+/4LooJf9POTF7Wju7W8Ks4hgk+919R
ZdvQD54o9jnMhP//R6lPH6AX7N9mxGcCZd53s4v30Fs2SvcJmXBMKrci/i76
d+3L+RImPBOY51Gb0PW+MTlJTDAxyf2w9LaQnLR/MFXvCNZ3Z12u3E0h0Qsq
uP7iGBM67kRefVGHnn1wV04aE+Y9v760oga9abMGPYMJu9YxlZOqhSR/eMHt
Wdk4Dycd3X2uCYm+1r+A7lwmrDy9c3xtpZCcsu3UPXGKCVumpE/RvIq+70LL
9tNMOJBSG/blipAUHOdFqBczQVfhltP9S0Iyt45u/KiUCWVOovjCC+iDyzuP
nsP7rfquG3MOXVWRt/kiE+yrP+nQzgjJ6dWvzZSvMGHJHY/YlSVCYrjj2qvW
cibcpmnYqRahJ6UkJVYywS92uv+nAvSqndZO17E/DgvG750SksLete8VapgQ
9XDDUHGekBgpapxormNCoI3zGl4OuvnHDcKbTDhaP3eEm4XOvD26sZEJ/UkX
5CFDSIoFWadk7zLB4OPDw7rpQjL/cqDr7Xu4/+eHsP+koj+1n4hrYYJvalTe
86PoMvpn4T8maB5rJTUpQlKy6Kfnv4dM6ElwWZ+TJCQLPNom1z1mguTr69Ko
BPSYovKoLibEbwwIYIrRz0RxrZ9hfaa8zLQRCklph7vy2HPs9z2Vefp8ITGe
MK299ooJ2kbDqtLx6POk94W9YcLD63ROfyy621Mti7dMKLQgKnejheRs+OU7
3waZoLA52uBslJCYFgiDy4eYMNj4NzUpAv0Ba27QJ3x+ZvGuwHD07yvbl31h
QuMHWs72UCE5p6sU/XmUCWcdpZevDhaShfb9Cy9+Z0Ir67CxXhB64I2nvr9w
P8+8GSMbgJ59TLhwHOd/V6HlkJ+QnG/cs3LoDxOit6ltbt8nJIuGoa90EgsM
Br40V+5B19Q6ukuGBR+Xzi/I3YVu+9lmvhwL2K4ZPTwfIbmw987HfnkWbNy1
OMTXW0gWH8/NOj2VBRfOPNi/jYteG2zvNZ0Fz1yozWvY6INOP/RVWeCSVhM3
jykkl1QMC1/NYEH9/Z6s6XQhWbp6bEveTBZorMud8YuC7v3wH2MWC7wpgx9e
e6AnlV6Yo82CvgOnDFu2Ccnlyhj6M10W/JS5VF25VUiW9XooZBqwwDju9+X8
zegKS6o8jVgw3W+nXJIruvlkn5kLWMDd+rw63FlIrjCeqz0xYcFQo23bDkch
MROUN6QuYoGEewi22KNfkuzfupQFC9pCVG3s0J9ytVWXs+DidVXbhRuEpFza
6v5/K3C9zy3/01onJOaLVMKTLVng/qPthhygbx+c57KaBZSOWrnva9Fj6h5N
XYvrWf/hUp+1kFwtTYu7T1jgZmRT1WElJCs6fJeK17HgEy1X+5Yl+vj6F5s2
siD/8edXV1aiz5uTIGfPAkWRtlSBuZBUuI6uanJkQUWwYuwxMyFZGX5vIN6F
BbKnTzHil6Lnnzq+bjMLiNGd9ODF6A/C1km5syBOzWvJzoVCUvXN9Uv9dhZc
O0I3pJgIiYXu/LxoCgvO3s8McVwgJJWb/jitpbPg7TeZeWvnoQc+/j3OZEGD
c5zZMkMhuZZ1rqSawwJPrd9ZhgZCsqrx8PaD3li/4q1cTT30T1SZVTtZ8NU1
hDdVB13T7MqP3Xi9QHvZSXOE5DrIsyv2scAvvLz3m5aQWO19NS14P87T49xZ
QzPRUyurlwfi/PwbvvhKHb02affIARZYRyefeqImJDcGdsy8HIr96fEefqAi
JKtV1jTuP4jzcNYj49Z0Iam2mhG0OIoFZySuedenoXsP6X2MZkGHnvmkK4pC
UpN4s/VsHAtytD7WlsoLyZrKjMg9PBZ+73C7Tsmhv/I3MRayoEwrwjlTFl1h
U9eAmAVGJbo6x6SFpHa5Lr8oEZ+3xMIhYZKQrGV8X74jhQUto2faeX8FpJbf
0jv3GM77Xk559ISArL10Ovn1cRb8+Gk7Ej4mIHXdEWtOnWCBYbKF5MAvAbGR
3jrEymJByYL50ft/oC80ydDJZcHdu79a9nxD3z7J7vlJFphFpIf6jApIQ3TX
16wCFkxxH4zgfhEQKL2YTy1iwb39j54yh9Ef8t20SllAH12XSvuIPs7403kW
52OqbonnkIDcNFpxLu0C7odhZ43t7wTE1nUqddtlFvg+q3qxdQA97I3cjHIW
7NfYNGlLP3r+9asPK1ggM/wmyu2NgNy6f8TryDWc/xsH3F17BWTdt10qbjdY
0NXzOt7lJboOqVOqw/1dpTHd5Tn6ppm+LQ0s4Nf9HHF+JiCNAZ9mJdxmgf7u
gKUu3QKyIavxrsMdFjSt2H3HpRP9dnaI/D0WPD9/t9L1MfqnIMO7D1gwiRs2
aXOHgDTNdHzIb2PB3/fs01vaBWQjGMRseMiCh+/2nHRvQ9/za5HMYxZky0V/
296Cnvrfs5udLDj1jVdAuY9eUyyKfcoCZ99dZ+jNAmI3cMiCPGeB3tLpCuw7
AnJHeXv/n5csuC3nddOrEd1q0bGa1yx43+jUsfOWgNz1koHIfhZw1l+13tcg
IJsSn32yGsR+7OD98a9Dr7iS/es95lWKNENq0F+JHKo+soBn/U8cUY0uz/kZ
8pkF619Gbou9JiAOyy2LVozi/I7JhAkqBeQefbr712+4/uzYkcSr6Py3k8p+
smBOx7PbqWUCcv9izcWAMRbsvjb+KeuygDh2pzKW/sF+B7T4F1xEl9qnOPwP
58HQwuHsefSF666dl2bDbtm5EWVn0bfN2rlvMhteOR2UvlEqIE7RX2aYyrOh
xnrem9vFAvKg5O7Nd4ps2K+jPKu1EP1hnn+JEhts1+mXdBYISOtYiM5OFTbs
kFmX2HtKQFyMXB4YzWDDs5vM5qE8dBejg30abAgfYNC/56CHjc8v0GLD8Gvj
jZOy0U91PObMYUPZonP8qZkC4nr/zGE9XTYobGrV1jwhIG1fY5e91GeD1PVw
RcM0dB3KyxxDXL/aCdelqeh2SxPp89nwaEj1vfVRAXELkFs924QNKa87ntqn
CMh/mS8Guxey4UzubX2PJPTbV9NOLMHnbW2t9U5A/5iw3sOMDaXGPZcDxQKy
eab3iPoKNhj7PvkdIxSQdrL65CMLNixnFWck89H3qLocs2IDtFgm5cajH3s3
tnkNGyISDnSdjxOQrTX1pcqEDfnh68NqYgSk4226R5stG7TDj/q2HEJX3i+b
tIENn0M2VT2PRF+1scxpExsqfNw8Px0UEHcvbY6iIxty1qU6/w0TkEcJX5Xu
OWP9lf+kK4eiV9y/IXRjQ2RnqIVBMPrL/D12W9lQcmbI1DxIQLbJH9ScvJ0N
tIJ1wRsDBOSx2eam255s4L3erUbZj05fcOAwjQ3pKZsm7/NF5/3Vt2WiP292
jt4rIB4Xn7T9Y7Oh8l/nu6O7BaSz63xUnRcbtFYxnhbtRJfimR7yYcPklnW6
1TvQTend1rvZ4KIQUtXmJSCe25YLxvaywXTji8I+joB0HVJYcd2PDc7PfQZ+
sdBLel+HBbChcfnvyOlM9PaqFIsDbFC8GudjRBcQyljy2u8hbBjveF+wmiog
3YY7P5SHY38VtFds8UR3WZsZFInXfyY9a/d29FD1TWbRbPjaItoS4y4g1FMf
vn2OZUNgUMaL9C0C8vTerYKL8TivXtq1F93Qv2Zu9hOwwdX63+c7LujagX8X
itnQenph6CsnAaHb2Z8fSmDDGodEt18OAtLjr0c7k8yGXb1To1Tt0TN/TNl9
lA3u89LGTe3Qb7VWzD+O1+tRa9uwQUAYHwu936bjfLX4f2WtE5DnGlGqhZls
aH6Qvu8goBP3eq8cnOcrQRbHbdB3m/oZnGRDFWPY/dIaAWEdk5rTm88G+8pv
t++vFpCXN7qb8wrZQM4HCAZWob+9FMosYcPWFS7Z0pbo04VG2mfZwHEKkdZb
KSDsVayOZ+fZ4Pv90Q1rcwF5xV0Zm3mJDVlrt92lmKEnTFtCKWPDYovXRqFL
0a/29cyswP7/8nmculhAOC+rxU+q2KBR1PrkykIB6Z1yzPJ4NRv8vGVM2k3Q
zfa83VqLea/R1uEF6DRIVW3AeejiNyrNFxAuT9O2/RYbLv4tnbbYSEBeXxge
Tm5iw4j2pmLnuehdTTkuzWxIi3I66quPPinXcdoDNuz1z29N1BUQL9PgX/db
2bDBdQX9graAvHF3Kha343kR/tmqbTb6obnb7B+xYaVH3Z7PWujFv6WmdOJ8
uCcOqWgKyI729ktN3WyIG9hQs1xDQPp/lzB5PWx4L370ctsMdMOYqetf4v5q
MNwaporu7HFd6jUb9NUNZmYpC4hP6OJdDX3YP/Uq01olAXl7UlYjZoANJrSH
Kb1T0e/13Fr7ng2rDtM3yiqij5YFTHxgg95yWydjeQHZpS3RvTHMhjaN/fnO
cgIyuJHbcnCEDZq9rZsCZdH9V0Ws+saGU47ONunS6BnKxj9/sOG1xhPejUkC
svvWwJOK32wwUtg25/VfPnn3oTY+eIINwtGrUlP+8MlujTQz839sGC3us1w8
zifBepWff03igKZ0S637bz5ZcTXfjiLNgb0D1NSIn3zyzT4pt0qGAyZrD17L
/84nV1+Ef5s5mQNuPzQW3/uK+aAdTqFyHEiX1x75MsInK6dsLngyhQMHAsNk
Z33hk+/Z1r9XKHBgxkr1XbbDfFKxbMHm44ocoLNeau39yCchTWolX6dyoPfv
zVmpQ5in/f2zVYkD75ac21Pzjk9+DL/fVjadA95KAvmBAT6pjH9yTlWFAyP1
Nj+U3/JJqNZN6UBVDnQF3Vy+uo9PLC+cp7arcWCCMla74zWf/LTNuLxUnQMf
zz05kfKKT6o646ekaHDg0TnSUP2CT8L2+bOGZ3Lw718jy4EezE+iV7hocWDV
44AJ1WeYP2437cIsDijlqajYdGPeZLn3tDkciPP8Eri3E/N1OtX7tDlQzp0w
OPGYT1a5K6g+0OGAi5GBfmMHn/wa/LbLVI8DQiUn35F2PrkW1Vsn1ueA3rGd
cnr/8Um4aovGewMOcBZzhp1bMV9c5WtvyAFVrpFR5APMrz59u8SIAzEVJ0vO
3MP8f8mzp8znQMj1uvDuu5jfERG4cwEHLKT3n5hyh0+sfvs0Nxnj+hZmyVg2
8snvpC1680w5IOlaWrvzFp9cn7s2lLcQ63NxTmN6A58crDJu7VvEgc8cR627
dZh3VjdavwTrX1B6/WcN5nv/RRQs5UD3MsNS4xuYD/nwUMqMA7qtxX3U65hX
7DLmLudAGOj7JlTx8W13K6bBnAOKtCjb2go+GTO/2Km3kgOMzyXen8v5pLo5
c3GMBQfcn6d0GJTxSQSTz3tpyYFFMgbJ2y5jfjSgZ60VB6Kd7dOFF/lkXMBY
nrsan69kdKj6PJ/cmGMvnrDmQJa8UuLwWT6JvGzeS1/LgdW+vINzz/DJmo16
ljdsOPDj0cZyjxI+mXiqmDwb8Hk32VglFPFJzf4f/QdtOdDUSZvacJpPomTe
WD9dh+tNE5l8z8d8RuuxVRs40JJ7NdX0FOYXXX9/YiMHXNVaHDh5mL9ZCD/t
sD+za5zSczDvceSEhz0HHr4JzGzJ4pO1HyKHKxyw/qeeLZfJ5JM/Mbs2ajhx
YGtSn+bqE3xSq+6eE+zMgdL3B+0D0/jk0Bmbr49cOKAxIWksTcW8jamjuRsH
KKqyib1HMd+hkX9sMwd2RXXkaR3B/C6pXyNb0NP7JjYnY37io+sWdw7srzMq
Fifyic3R7qLL2zigTIvPuiXhk7/zGieUPTjQ/Pjj03ERn9RVX3L39+QAnHLd
sVLIJ9Fu2WfbKPjvFelW/nw+If0CqSU0DpRMv0I9E88n/8KDKEl03M/liY19
cXxSr8S69JHBgcrzMyN0Y/kkpsBBzpnFgRTJmghqNJ+A5UrmOTb2o+9D4/Eo
PpnUon9VkYv92KpGa4/gkwbOtKl7vTgwMyrXatpBPon9/pN7z5sDX+Uive3D
MC/pu2bsw4FP+RldvBDM6/2nLNrJgT1S/Wk3D2C+vHrn4C4OdLxyzPsbiHn7
4lq7PRxI/FP9xTqAT2xfHFUv3suBX/pzkw7u5xOpoEP7JvtyIHLm/gNVvnxy
U27PrR1+HPC9nHj6+14+icveNqtxP9b/7j6dFXswvwwCDAM4ULXqd2/QLsw3
Lbx7OJADovdzh6/4YJ6qqfsmiAOnb3duGPHG/LB0iG0wB7SqpN8u8+KTdfHD
D06FcODZ9eNtARw+kdZ6NndSGAf//oqQusLik1vnmw6ywzH/puDQCINPDtte
aa87yAE1tfF1y+l8sr4zZ4FuJAdOeAduOUDlE5l9ouhDUfjvoa+lVz355Pa/
A0+eH8LztyHA4cd2Pok/zl60JgbrIdO5fNU2Ptlg4hSfHYvXe6bqE7GVT2Tr
LJ6NxXHgvp9ab81mPmncOteMFs+B1M9Np/+5Yn5QSXSdh/OeNvvyOhfMR/1+
qSXA9eX8lRU4YV717cpwIV7PjlNwzwHzRe2JXSIOvHy6WKRkzye81TV9FhKs
f9H2yi12fLLxv5LV6Qkc8JloWpS+gU8m70g9+j2RAxGWfh+ereOTpl/R77Yl
4/uiwmpUz5ZP+El7ydUUDpCeWbY+BPNzPdJnHMX5UpvoOrsW81W2n4KOYT8f
tFV+sca80+INHakcqIiKfWGxGvO9WtlmaRxwPvXP6dAqPrELkR09ko77sWq1
dKMFn8gpfrH/coIDCo76k6au5JM7eT0n3TLxfdKXt3GrOZ8IzO/+uJjFge8a
RR2ZZnyyqbnMZXoOnrcHDUpeL8U8M6/QLxfn75z0bZMlmB8Rj7fkcaDa1XJ+
0CLMC0K2LjrFgTnTLrZXm2J+DvdMQj4HnhzdfkvGhE+mXHae9KEA65uqPe68
gE/ubljl6VjIgdgHIxHp8/hE+NTw4pkiDkz5ddu215BP7PcrT1YowfW+jHMz
ncsn8jLj9N2luH83zS4M1ueT5hMDZXfPYD8mR5F6XT4RLepQWHCOA/Yf0gwU
dfjE4WYtR3Aez5snHo7b5/CJgseZqrcXOFB0+sL1U7P45N7Q8ekbL3HAdo3Y
/6Mmn4hjYn0KL3PgjKR736qZmFf3rZEpw/dxjOQiTx3zZzxneJdzwF8t2fKh
GubXrt976yq+r2w65HRVMd+x5KZBJQfMJttp71PmE8dds7XiqjjQ79cddk2J
TxQnJvv3XsP3Cy98ltw0Prl/ZKSJVGO/GRpS2xT5RDLvhfbJGxywnJq3pEAe
89XNB/7W4PlzUargixzm3a7eZ9bhfO9eSieTMd930qC2HvvBnUlLlsF8eEK4
9k3cn01FeS+k+MRJKey/yFscuHS3xXjxJD6ZWuA1v+c2B/47GfEr6i+PPLBw
PbS6Ce+XkKfUOsEjCQ+sHmfe4UBGy4LdOuM84syZt/D3XezH+cny+3/zyLTv
Kocp9zgwGrrgU91PHmkRT3RX3efA4tgoTZUfPJKo+26pZgu+H/W+CbjfeMSl
/JEgtBXfh+WHrMtHeUTJvv7FkzYOvMqVXzl5hEdan59dsbId77+Jd8DzM48k
BaYnHH/IgTHt3h9nPmFe7vCbrx34fXN0av3EB8xn+1m5P+aAue6PB25DmF9K
PVL2hAOGJEXn9DvMN24YVO3iwO6wO+U/BnjElbrMJrAb59k1IdnxLY9MH56T
1v6UA5PcWy/k9fFI2+EpH5f2cEBmZpTq19c8kqz5dV3Kczzvlgqvb+rF/PmX
mcMv8P229mVRzkvM297/4vKKAxt7AzpHnmP+ScWmC734/mxY4rSpB/N78/Om
veHAyoQpsrlPecTtX+L3fX0c8BsZmvS1i0eUj4c7P+jHeT/bbOvQySP/Ge84
bTqA+zfoyJ2Tj3kkpdZtTDyI319Tl6f86MD8Vust79/h96d1brbLQx5RGZxf
aj/EAY+2mx8K/+OR9ki1fyUfOLA8LSVmopVHjqj83T7lE+6/nT88trXwyOai
9+d3DuP5qD0QeP4+5lc/kbnzGb/nMlzbZe9hvq2BNm8Ev0fq9YKYdzHvff4K
b5QD3CgHz8omzP86Id//Fb8H6m/EKDfyiGpSPHv9d/z+iNr5YfctHnlo4F9Z
8APPvwtWWbcaeORoJU1J+hfuR/d5idr1PLLVyW4H9ze+z/xn3Qyt5RG1XrMb
DWMcqFeSs3p4g0c6gnXU9Cc4cGN1z9eF1TxyTEFhT8wf3I+K4hHBNcznfat/
+ZcD147/M3tTiXnz3pk2k7iQ9HNJxdoKzN994JcrxQWb7VMiM8sxz6hqnJDm
guOT8PjvV3jEfaRgDkOWC5aFB9q2XOaRGYLkoBuTuXD06yD94kUeeTQ74t7s
KVzo+920cOoFHkm95KMfIc+FitE/a3efw/yGLWFPFbiQoht7rOkM5p+uaVs1
lQvfb60xMSzFvJ/xvIxpXPA2NZKOK8a8tHrUTyUuOBfO13lViPkT/zo8lLmg
xV8RsfY0j6gv+mBSqcKFefNtZuXk88jjhs5YDTUu3HxrPjZ2kkeOb7/VFTyD
CyYL5HRoeTyybejCksfqXBBtLYq7nsMjGjGZfPOZXPj6WMp4VjaPPJnBf35M
kwv++tNUDmbySFppgPmoFhd6z121enqCR7avZUi2zOaCxtcPhVbpPDKzY9Pr
y3O4cDu0YEvWcR7p3Gm+SkWHC+E1zWT8GI+kj+um+Oty4ZKrmz/jKI94HFEc
aNPjQlXN/N7aFMzP+7FmiQEX6rLIMb1kzF9/nZo0lwutcRJ+XCLmXVuHPhpy
4a7yr+t9Esz3XbN1nscF9mD4Ujsxj2iGF2acm8+FBZf/vC0V8kjXtCOfFY25
EDUz7MVUAY+cyI+022uC/X3wRMOfxyOeFrty75lygcZXTOk4jPkHW78ZL+Li
38OTHSziMM+2cRIt5oLhz2vrs2Iw/82kYHAJPq+5eszfQ5gXa/y2W4a/j5Qf
94riES1dqc3FZlzoyRNU3Y3gke6yj8WTzbng4h9zddFBHsnY1P1nxwouhDX2
jRwN4xHK89vbGlfieiIK/X+G8MiswEvnDC25EBFUtpgZzCNPJ2dLx6/iwujR
vwtvB/FIZpaA+saKC5TbB/eaBPIIdWnQZVtrLrR/V3+f4o/5RuaU/DVcMNW5
WfLDD/MUB9YkGy78NPMvZvpi/tOKCjbhwgEzlbeNezF/WH9aPeD86aR5L9rD
I7M1p3nrruPCwMSwwfFdPPLs3M/rh9Zz4d6z6foTPjySBX0qLzZwYdHdt8wd
O3iE9qRt1xo7LpR37uhp8eKROXur67I3caFk7qGMlVwe6flbpDFuz4WxZr20
PDaPZKce9aU5cmHtx7UPp7B4hG586PZ1J/x9ebNzIAPztbtnz3LhwgynK1N6
aJjfsi0w3BXX/+ad1EYq5gdIc5cbF3Zc5lhf8sR85EI9yy1cmPpJ4eosDx7R
VtEMTd/KhZVdT/bxtvHI80Lp1u/uOI9XKrw+b+WRHKthw+3bcf2NWRm0LTzC
aHsacdWDCwdpoUp33HhEx7vp4QwKF+ybrG6aufLIi5+XjQ9QudBM7SzPdeaR
3MScmA4aF64Grn2r4MQjTANRpxkD52cfZ3uoA+YrDyw+yuSC+Mwy2b5NmHdk
876wuFCUenLEzQ7zrxx73DhcOJ6Wp1O7AfPBFssvcXF9enoi0/U8oqswVzzd
mwsGJWpmGbY88jJXqddvB85f0V4tOeCRvOW/LVp9uFB7Qssm2IZHWHf7kxbt
4oKP1PSCN2t4RI/R3p+wmwuKe9Zs2GLNI6++3LD+sIcLs2hpRg1WPHKSX3LM
cR/uxx2K65eu4hH27NT3Z3y5INROOplngflL0aCwH8+TOcqrp6/E/Pq9J3b7
4zz+iVOLNsd89/bhuwF4P58u42EzzPvZblwQxAX535MOsZbxiL704hzBAS5I
eX+Z/t8SHulN1/r6NpgLzK0nXpLFPHJqoazjxlCct4jBD5cX8gin4fOpwjAu
HErtsJhrivntPT9lDnJhP9WxPtUY8+/vuHpHcEEzCfiTF2A+uqzoViQXJF+L
RWHzMD8jb8LgEBc2evjfe2/IIwalYve4aKxXfMImxlweeb0m5GxvDJ6fzp+k
/9PnkfyHHCmI40KOSDBuq8cj3J3OlJOH8TxRczCr0OGRueOWl/7G43l+f36h
sTaPvEkxlGPxuZB5THVbzmweKTBSZtYKuDDiPg4qs3jE6/pYubaICxljT/by
NDHvOqAYJeaCbVjqw18amH/zkNsj4cL7unkhfuqYD6u9tjqRC2/vR29/o4b5
aWeUs5K40J1xJMhTlUcM84/v/J3MhSumLi0tyjzStzK2lnIEzxdBsde66Txy
+v4+9WtHueBelbzy2jQe8WZ77tNM5ULQg58blkzF/Ld1t0KP4/N3PjpSqMAj
/aIlszrTuFA/rD5rjjyPFOrMDlh5Atez7MKLo3I8sqNs8t3jGVwQ1CS/lJ/M
I0abRnS+ZXKhsuLcnFgZzPc8D3bP5sKrDT+O/5TCfEDzg7IcLuSlcxz9J2F+
8tW5anlc6Oh5bj34N54YZZ08GHgS++vA3MP+E0/eLklobz+F76NZjzu6xuNJ
0e3QBcsKuKAtMg/fPBZPfChe0Smn8bzq9qPe+xVP5n9yeTJciPVzCwld9zOe
DMRZ/Y/i+o7H+u3iAK5hlVlWkp8oK5IWaVwnu200pIR72pKQcE8hFaJCpShk
JlS2hlCEZJQoiSIilEjKc54/vXh/r3Wuz7no7E13hlCDLU1lE3ySLreSn3sH
f999n7rhJ58wsqXeiWViviQ0r8sbRw8zazyysB9g79caQ9/aH16f7QwWKY/D
bn9H79ryQTsX+01mgKjyCPp/lRsi7zpDl8H12oRvfKIRl3X+a54zCBWqPFk8
xCf9Gld6LfMx38ImJ6K+8smdcq5RRgHWq+pixoIBPmFae14Uvu8MqtN06bAv
6L/YDTAe4HzPfJqc85lPBk6bkpqHzpACQUtYvXySIbnmyspiZ7icreo/3cMn
LqlLh0NLsH521osHfOQTzU3Cpn2lzjCTxvz44wP6hvGrJuXOsHrn4PDx9+gp
H8ZuVWD/rDXbONKJfvKF5dxHzrC00KPE/R2faJ1/cNP5sTMoplkHfH3LJ19V
Un49fuIMx436vZlv+CTzwfk9KlXOMLhY5fbnNj5x3Xkqlf3MGdzaR6RorXyi
3U3986HaGd5rm5d8es0ng777bLbVOgOpVLju3MwnWSKbM5OeO0Ps9sMlH5v4
xC1JXeDvC2cYcJ2WcmpEv3bRoaP1znBwdORW90v0NX9zy17i+VzU8nasR3/k
6/yljZjnkkl+3S/Qj7YeOd3kDD56Wx46PueTVWceF3S8wn5Y8nvNxxo+GVqS
I7rptTOcDHr+2amaT7LvxjsltOD7x/xaa08Vn7ib8IsmW53B8DvtL+Upn+i8
9ZI41O4Mh/YpOPU95pNvHvb0h28wX00yZuiP+CRnjnm5bIcznM8VbumvQH9F
f7HfO2co89HqdS1Hv2qZW2unM1gFCuh+K0X/SOTJuve4/nz2Pa8S9Pt/ysd9
wP1acNVzrIhPPL52e413O0NWoDHt5EM+0WXVV1v3YL+YdL80eZ9PhhcVKeV/
cgY/rui/04V8knvnlq9UH85PXiLlXz6feG6JqvP+jPtT4RHCu8cnq5sDlzd9
cYbmEIU4oTz0dPqp1QM4PnX+p8hc9NNWTRe+Yl6z1Nwkc9BHb1EfHsT3Rq/L
qktZ6Fdohuz+5gwm2bUrl2TyyUjx4tbsYaz30bWHb9zhk7t7ZrUXfncG4dak
arV0PvH6NMh1G8V+f+qPW2Yqn+gFtL99MYb5JER26N3mk+8Ln+pp/cDzyTzi
9CCFT/KSc8MifjpDS7Tpvc3JfOK9IfF9/wTW5/A3w6c30NeFrreYdIagKYtp
yyT0x46fS59yhqhvlj+brqH/ceST4LQziIn0qh+6ij7CYhP9D+bXBdHYDwl8
smbZuphnM9i/qvI2MOL5ZDRfuV/tH9bL+HPpkct8cs98wTb+LOabu6W6/yU+
Od45cemTAAX2hiz3/RfLJ/rHe4a2z6XALMtiKuwin4zNbzBOmUeBqBe5DyRj
+CQ/sThRQJAC8qUW2QlRfOKzOnXUUYgCofkiHcsvoK+KtngkTAGuTN+27HPo
DwXdUBalwJldDV3rI9F/Y0yELKBA9dOigsoI9Fyb3e8XUoAMXnlsGc4na+W2
3d4iToH8DceEWs7wyXiW1vQ1CQokKM0JdQjlkwIia/1HkgJ6ir6bBnh8cqJV
IMNemgI+uXfUfbl8ss7127+SRRSQPhy76x+bT378fXNgiQzO57Z6xlkWnxTG
VuWckqVAv5zdFtkQPvHVyJv3Vo4C6tsVRVKC0JdftTdQoEBLodNC3dPorcLy
ryzB+c3/z7zkFPrPPiK/FClAr7csNgtAf9rB8YASBX6nNTu/9uOT9ZI7Ht5f
RgH79bnGjif55Oft9eIy/1EgRbHJ/tsJPrlvqELzVaFAuMCqrEAfPjnZsLDs
9XIKsC7eXyN8nE82UCal16pRICnYceSSF59M/PrkcnEFBdJP/ter6sknD841
PhpdSQHBNQMS+e584qdSKmelQYGXLrk+xA39gzTPPE0K3OuiLGx0Qb/j4jMJ
bQos3jPTeZSJ/kPwUq9VFBhjefYO0dH7upxo0KHAd6Os5UE0Ptkosv+Fzmqs
hz3pVxZQ+eTXdaJyXg9/f+aA8VVnPnmovypgaA0F9hdnr9B24hP/GrnGnWsp
cKXs+tbSY3xicGTuyqx1FHB3U7qw04FPJr8PB4luoIDmbeXFnUf4pCi047XL
RgoUWsQ3udvzScCSaq3nBlhfW08/nbFDf/ceR2MTBRo9y4YuHEJvfP1NmBEF
VKr37vrvIPo34au/bKbA43WaPff2o/fwPWO2lQLs3M25xrZ8YjjHsSt1GwXK
tELyWq35ZOryznXzgQLM2x/7GVZ8Uqy9MZK6nQL/FOwP/t7LJ6ceLe95akyB
yPPvp8/tQb9f3FDVFM9rnmOb8m70A1NRXDMKUMNff87fySclIX2fP5pT4NQK
HR2zHXwSuOjVFrCkgNiQY8ZbCz7ZdKcs7uYOCrwZcbb3MOeT35vvDP7bifVo
oW4sYIb+Vez2Y7spcFoixfGSCXo6K6FiDwWsqDUFmsZ8YjTt+l1pH+4vM3Jz
BfDJdNQB82ArCtSSnt/WhE9K1bYndVpj/ck+Gv6ylU9OF+v8NLLF/ZZRkA/e
gn6Pwq6r+3E/PT76SW9G3zPv1u8DFJhjLbbgzib0/t+n7A5RwGsqumWLIfqF
nfuK7Sgwdd3x9euNfLI5uSZd3p4ChsHeQq4b+OTP+oK//kcosOVNoffsOj4p
e5G0v/0oBcLGVSSurOWToGNnszccw/XLZffo6PPJlh8n5152pMCGC+aDVXp8
MhPudPinEwXa0vs1jqzmk3Kl3fdsKRRY/4B3dVyHT4LzDYQLqRQQlRAzjlyF
3lzt2CI6BbwXnFJW1Ub/TuKBDwPrVahMr1QTvff0wmYmBSKoL/xsNNDP/0JZ
40qBi/z40cGVfLI1sbkk2o0CzQ1Lkvkr+OSvboXUd3cK+OaYhiqp8UnF0wzm
Xk8KiFwQS3qwnE9CDl2qzPXC+/iRPrhXBf03tqz4cQoYLzXzGFBGz3H38PCh
wI/7N1R5y9DLHqqqP0GB+5pMcSUl9FnGiqtOUmDmZ6zOQ0U+2UZW+0T6UeDa
NTmO1RI++dey5PlXfzy/lC/CQ/J8Uuki+N+OUzh+zGTVGTk+Yf0d9csIpID5
+Nb7KrLoY7teCgdR4NGhu2/LFqNXf67GDKaAsO1W/UOL0JcVnq4Jwf0+3V0x
LoXe6mbzSjYFpBhnWVGSfAKfIzXPcCiQWqjnqy3BJwKn/dl9XMzTubXXasT4
5JEEpd2Ej/v7y2SKspBP2Lf36N4OpYDrhmsRs6J8Qgw3hc4No4Cf65Pd10XQ
N6zodA6nQDHJNt0kzCePnaXWPomgQJrLnuPtgnzC+fUnQiWSApPx15t85+P4
5/q72ecoUBR6gSI9D71Ky8bu8xRY91VGK28O+vuVF7ZF4Xr4Gmp7BNDvyOpL
iqaA5OJSq6F/PAIfLm/+G4P16fAk/+xfHpnjy409Gov1rLXWXHOGR54Ie34t
i6PAEuM5ErXTPMK9bgdLL1Ng+qSaKOM3j2zXN40/fYUCznEXDASn0NfojXTE
4/x91iem/kJvv9RsUyIFcvrFVptOoP8udD3hKgVWvFr4q/cH+tDx8clreB6i
6mP8cR6Zu+TDjkNJOJ+TVv+tGOORp7kvkh/ewPr9xeY8+84jPOMHk7LJFHDz
z5Shj/CI8ZvkvX4p2B8/PukUHEbvcT6t9RYFApdXtqUPoRc4NbMuFe+jTtxc
y0H0l6m2cWkUOPxzA+XrAHrtfVnj6RSwO3HtZ2Q/j8x/ZDTHJgP3K6W4ROcL
jzyzVbfLz6TAbRYvv7GPR0IHpPOksikQJzbSebyXR0xD/goez8Hz3TdquPgT
jwgu+nq0KRfzbi/r+YOPPFKd3lq4Oo8Cq+UuRNp188iZzY8XRN2jgGKhNPvP
ex4xe5XtPJyP4xnMSb/RhZ4eX7y7kAIOD61mt3ei/82TzLmP9W85Efm5A32U
F2PhQwo8E+mzPPsWvZp9hVsRBVxkFm3SfcMjQsVmMnXFFMg4f/JIcxuP1OzW
d9cqxXy9LHDPr5VHwnqUnkaUUeD6weyNii08Yu4vsmSgnAICmIOVzegX/vS2
qMR8zNV/R32F/mZ3TfojCuinTP4SaUK/vn6Z0BM8b9F8s7sN6F88PEl/SoFS
Jdsa25c8InzsVv2zKgpskm059buOR2rHL6iuqKbAgJ66w80XPBIeHhjIr8H7
nbPd1+w5j1go0V99qsX3RpNi2VAN+nwrDeMXFND5kL4+thq92RZWSh0FlFQ7
uw2foX+n0SbwEr/Xn1Pe/RS992IdpwYK/MeWrg97wiMi82d5jxpxP4z+LVj9
mEeeJwx2KL/C++XtEtxWySMRuu1rWM14nwPM/gup4BHLp0/C37/G88qJ/LGi
nEdED+V+2NJKAd3jur9flvLIi6GEDdfbKMBXVVvjV8IjZzmh5/+04/tD0zlh
WTGP7JA93mv/lgLRQ136NQ/RZx0xKu2ggG3buRmvB+i3WVxc0ok/76dOyd9H
37J24FQXBfI67FY+KUDvokzevsf3Uocz3y2fRxb8Fb1i0E2BkTrfRTL3eKTu
4sS3Kx9xfZqhryvu8kikeo/Jrx4KbPWKqGLm8sjOspdXD/Ri3i7z/yydg96q
eOx+H74fio0Ny7PQ9922lPlCgc6a3jJGJvrA6Ju+/Xh+r/Yel85ALxH06/UA
1otz4IHydB5ZeJuxZ+0gvsdED7sz03ik3sAm9eIQvk/te/MXpfLIuZdb/4x+
o4DZoLhW5S0e2eWsZWM1QoGH+xpfuaag/yWTmfcd75O6YqZsMvpIAQHJMdxP
sf78JzfQ//ftoNc4nu8t7SHPJPT33+Q2/MB+d/7dfsXrPCK+o2q+7gQFNvt8
G6m5yiMN7+8eOf+LAn+mD5T4JvLIhRNXC4Ym8e/bxe6rJPDIHuEw0V2/cT8L
hLobrvCIxHUfp6xpzCfjTUZBl3mkcY1DkegMBTK3XK3WvMQjUdWWEq5/KbDN
7j9ueyyP7LVfT3/+jwLLrCs9Qi+i//5fuYYAFW589ohYG4Oev3Bx+BwqzHmj
0voxCr3CpOuXuVTw+tq0L/oC+txPj83mU2Gi1/vP1vPojRvl0wSpEB3zq/1b
JI80tZd4zRemglL54U/XzvJItHtaNVWECoc3Ri/bFcEj+wQuKlWJUuFH8/mI
6TAekbwc7Ku6kAo+NEu1rDPotVzquGJUgJqi4cOh6Cttl/eIUyHv9at+UT56
W3IKJKnQzzwrXcpFP6DddFOKCr8Zb9zcODzyKlhOfVaaCi8L7/1QZPNIjPTc
kGOLqaC5YWFOfQiPWKUPt1TIUOFea1dccDCPSG3u0F4mR4Vu1tJs3SD0Tc+4
wfJUkFarGPsQiJ52722nAhX8C4uYMafQ/76mt1mRCotXzhE3DkAfFR52dSkV
6r2je3748Uizqu/730pUsI6y+5x2kkcuFh1bf1iZCnosGwU7Xx6x3r3zXPF/
VKjGl/2CEzyyqGfDJ/nlVNjefm9hxXEeee23fFOAKhUyLea89PbmkdgF4jHt
alRovG5fpurFIzY3p75sWEkFm56CjjYP9Ov7tl5Wp0KOmoDGWXf0z5su/dSg
gryf4e0tbugdyoZstahw+6v13lEX9OPpxoXaVNBOMNZMZfLI4vDYxEU6VNh7
VUDfjsEjLUtZoz66VGCL8VzE6DwSd8/Vonk1FcbEKxofU3nE1uzAjTVr8HuP
71D9KOjfwUS0PhUcdxhqaDuj99LZ/X0tFbKbaEu6HdHPU7i9dz0VPoSoGV06
hj5h3nTuBios5Lqd3eHAIzK6363EDaggLLpGePYI+ifv7ngYUuGEpVvhfXv0
B2v+1W/C8U5KRrkdRj+Uf2DVZioUV8vGq9ih5yTlRG6hwjl/38b2gzzSKnN2
3uBWKhQ9U15/4QCPXMo8ab+DUCFmVPy5yX4e2b/NKT8DqLBqq0HktA36ll0i
IsZUODAaczrfGj3TwJFpQoUEG+lEFyv0M6oPa0ypYJB39/N/+9BflBBXN6eC
zn5Hpzd7eEROfZp6xgLrK3aJaPRuHmkv/VzaZ0mF+PKWbvNdPHJlX7O06U4q
XNEK7fu3g0cO9pW73N5FhSn95fJFljwiH5jxaO4eKpjppwR4W/DIG/FLcpS9
uL4z04Ka5jwSf4vt+WQfFYxi1J5+NOWRQwbuz1SsqeB+f1FOogn6lweXcmyo
cMmussrGGL2T8YluW1z/ZyVRse3oJ3RfbDtAhaDaFcHVBH3kEpUbB3E9Hi+V
2Nt4ROE/wYC/h6gwYrpgyHArj7wtHG04epgKVtWtX8Y380iCZdeKcnv8HlVV
KteIR+ze1wYtPUqFFYlfGcxN6E8Uvj7tQAWTHpWh5YbohW5qvTtGBZfSyutd
G9Ffi+RscqLChbSSoPgN6Nf4v0lwpsI+dZEIm/U8sqTaefUUhQo/nyY/EV/H
Ix2H95w5RKMCbf5pzRf6PJI4Ytj1kI716h9ZHrqGRw7zV6yTY1LBN/15COih
V5CK9HOhgpj6Ko8ZXfQ5fz62ulKBGZERXqyDfnu/wXp3zCeqwauTq9C3v46K
86DCeqtGM31tHlF0r/w87kmF61+pA8OaPPJuNnOLjTfmTcNIUZYGj1y9dDku
/zjW/3X6faY6j9hrcQelTlAheLry/YqVPLK00mP7cV8qiJwfW/dJjUc6bewS
mk5SYeD3j4c3VXnkWr/J99X+VJgdKWc4LOeRI8F65lEBVHilYGKyVAW99NKk
4VOYrxohuzuU0acJ/dx9mgpnGpx58cvQG43vzAnC+nzc33dACX3T+5SFIZhf
RYInZZbyiBLtxZQbiwozngV6LUt4pGvq/r46NhX0k/vkYxV45PqF5HQtLhXe
iMfpWMvzyFHV838jeFQQCrzvKSWHvihg/wCfCvR00tkkg34XNdviDNa3wyq/
6MXoP+6deycM85zptXnfIvR+RoeFIqgQHjOrKynNI8oL1O/Rz1LBPKNtd5Mk
j3y4IS1cHUmFKnZ/fLQEj9xY99dhxXncj8FVklbiPOLwfOA+/wIV1j1OLJAS
45FlDq0Le6OokPJWg9e8gEfejz2iGMdQ4ZFkQ0isKI8khWWXpFzE+2TCSbMV
Qb80XmpOHBWe7Df8LSPMI//d4zGdLlFhv/q3U+2CPNJt6lX56DIVviXFrkiY
zyM3Ow7L/hdPhazbqjOH5/GIo5eZByuBCrqqcbNL5/KIyjz9qveJVEgU6lz9
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
vTi/Vril9CXxyQnXfUUafS5gq/H5sl4iemGDxeFfsP+fyT8KjeeTrpuqlO/9
eP8IXDCnPRb9hkUv93zF+43RI/8NN9GXTsnc/4bzK0lA1y+aT1Rs+xliP3De
nf61tPE6+h/1pZRBPM8eH4011/gkxe+FfMUQ3j8l4105V/nESfa+25oRnF/n
TfuqLqN/cL0i6Cfm25ARphLJJ5+I34ovv1zAUV3C0TMCfSPDa8cY7nNhlTNv
L6Gn2laljrvA4evx8UphfLLyn6nq3N94/01lCbmHoL+qxT01iffRmYzYN0F8
cmuNQv2rP7g/zmqfVAjkk5PPRNatnHKBI+Uzdq7+6Pf/uuA37QKLPohdLPPj
k56+jubuGbxPeu1rk/dFz3mrCbMuEOhZfNLVB73k44AkAQrIZdgrvOHxyarU
5I//BCmwZVR6riIXvX64znEhCpxS+6zozuaT21Xeoc/nUmBqealzhTefnDp5
qltRhALaL9I7l3uh/22px5tHAane8GDP83zSe2nrfx9FKeB+zsXxvTt65dV9
W8UpIGG+kbrKDf3jxYax8yngbNWVwjnHJ6p7Zq7+WUCBhnMM8Xom+s6Br7YS
FAi8UnNrHYNPUj0aoVCSApwkAbofjU+cRYuj5RZTICDo98kPFPQJD4a8pChg
uiUjTNuFT/q0o3c0S1NAI162J9QZ/ZuL8Vtk8O8zN1B7TqE/enb0miwFjjn8
WLHtJJ+ojdjtGZOjQGyKucg1R/QBO1JsllFgxE1fcfA4n9xZpj2ZI0+B9vJ8
p50OfHImS9FKSpEC2YlFzUlH0ZuK3nVTwvOObuP+seOTLy2j07XLKWBepmNl
Y4ue0WWzUZkC95dEH8g8jF7w3f1IFQpofnYMnHeIT1bfyBccXkkBBf2Qficb
9Oq3bC1VKXBVVpj9bD+f3H0Z8TBTjQLM4BoDOWs+cTnIFlm4Bs9/rWuduyX6
r6cdGGspULdLc3eVBZ/0863z3q2jgHhOdvTaveilDOevX4/x73KSCdiNPm3N
yTANPE+3/qsucz5ZYyj95Ksm5uutZuK2nehr/0nu1qJAeab+vWgzPklz/nYm
fSMFXt/e3zu6nU+of5uez9OhgH2pq4W1CfrIkiUumyiwYfV/nzMInwysyqS/
2UyBwv6UB2LG6AtjXqnp4nO11JQzhnxC2RewLFCPAqEz4W9Kt/KJes8518/6
+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
4p5anN8D3ze0tuH0VcgrxWbXqVAwWX6cw8gf8rX+HNJqsL6hGtbafiz0ydLN
JkCdgo88ZTXu9oX8d8v8L3spuKBjg4nYFRayu3qI+6AmBW+rXJjk92Eh0a3K
Z1P2UXCeuGoamzfkM7aVrNKiYJPiEmLOk4UeoDUbzh6g4JOaQbajlyHfNXOu
Whvq0S7etocF+YufynfoULDM8A+iiclC/cuNG30RPC8wKK2ChPztwoufMAVL
/LOcyiFYyH5n8gvtgxTcyu1oksKAfMUNwYRDFJx8PqUx2gPyJ1iUP3qwP95u
tA6is1DiiGO99WGoL44Cdk8a5L2Oi5QZULBgnW/9JSoL7eDTYggbUvDVVo8k
ewoLDaTKNF0+CvUxcCPK1B3y+wQkeowo2KOy4b6eGwudbf3L0jxGwa4y4lWa
l1hIwvHrmzvHKfjPh5gFeVfIz3fKzJtQsOkDCaMdF1ko5Ua1j7kpBauq1hYJ
uEBePLOz0IyCZ2yY+zidIV90R37zKQr27tfsXDjPQoOG164yzCn4mC9H0Pdz
kO937+mwoGD/VR9ODDixkAPjtLKqFQUXy+erdTlCfq1+UNRpClapDVdqdIB8
wp5PP6wpuPzWed2Ksyz0UEVE/YQtsPV+t2dnIN/AdSPXjoJ3jnPkPrJnIUmb
n4MbzlBwGEc9d5wdC32Z7t9HOUvBq5hMn5u2kL/eFNnqQME6XFu5rtmwkKNw
8aiiE6zXteSnTGvI56T8F36Ogp/mbzx36TTkD96MmTgP6+t0UeOsFQuldl+e
OOpMwW/OpIibW0Le7dzBDBcKtiFLJI9asJDU6hNx3K4U/Jn2RBuZs9BQ7IEf
LpcoeJ04naJ+CvLyOw0a3ShY0XRDqdxJFnKq3pi4k0KBM9FHWMwM8qf+zQVR
4e/k89ubTSH/ddxolEbBDK6XUutOsNCjK+8e6ntAP7G+1bJyHPIbXy4+YlCw
OZK++esYC0mnZ53gICm4Ktjz/IQxC40cuJfuxKTgX5w3zQeNIN8W8K+GRcGv
w23suo+y0PnzVHNJT6i36UGfVkPIL1lnXfWC/ssmWlh7BPIRh9kHvSm4LI6b
vcyAhdKkVK3xFQq+G/bo4rPDkC8VzUvyhf2d8W3ssT4LyRzjXrviB/uvrefK
Az0WGh2cs7e/SsHz7ZcUYg5BnjlQVHmNgvWDk3+EHWShC+tbeESvw/o0Mlqv
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
Jv0=
               "]], 
              Line[{{-0.532570215131383, 1.}, {-0.5317593765725827, 0.}}]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1: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
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{155.0625, 68.80078125}, {131.3720703125, 29.25}},
            DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {1.0000100000000023`, 0}, 
           DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}},
            FrameLabel -> {{
              HoldForm[
               Style[
               "\!\(\*SuperscriptBox[\(\[Eta]\), \
\(r\)]\)/\!\(\*SubsuperscriptBox[\(\[Eta]\), \(c\), \(r\)]\)", 45, Bold, 
                GrayLevel[0]]], None}, {
              HoldForm[
               Style[
               "J/J\!\(\*SubscriptBox[\(|\), SubsuperscriptBox[\(\[Eta]\), \
\(max\), \(r\)]]\)", 45, Bold, 
                GrayLevel[0]]], None}}, 
           FrameTicks -> {{{{0, "0.0"}, {0.5, "0.50"}, {1, "1.00"}}, 
              None}, {{{1.0001, "1.00"}, {0, "0.0"}, {300, "300.00"}}, None}},
            FrameTicksStyle -> Directive["Label", 
             GrayLevel[0], Bold, 45], GridLines -> {None, None}, 
           GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 750, LabelStyle -> 
           Directive[Bold, 
             GrayLevel[0], 35], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> Style["(b)"], 
           PlotRange -> {{1.00001, 300.}, {0., 1.}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], {1200., -243.3508830702711}, 
         ImageScaled[{0.5, 0.5}], {750, 463.5254915624211}, 
         BaseStyle -> {
          Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}}, 
     ImageSize -> 1500, {PlotRangePadding -> {6, 5}}, ImageSize -> 1500], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[5]], 
        Directive[
         RGBColor[1, 0, 0], 
         AbsoluteThickness[5]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[5], 
         Dashing[{Small, Small}]], 
        Directive[
         RGBColor[1, 0, 0], 
         AbsoluteThickness[5], 
         Dashing[{Small, Small}]]}, {
        Style["Chiral(VP)", Bold, 
         GrayLevel[0], 35], 
        Style["Helical(VP)", Bold, 
         GrayLevel[0], 35], 
        Style["Chiral(VTP)", Bold, 
         GrayLevel[0], 35], 
        Style["Helical(VTP)", Bold, 
         GrayLevel[0], 35]}, LegendFunction -> Framed, LegendLayout -> 
       "Row"]], {0.5, 0.}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.913592267591353*^9, {3.9137234966627617`*^9, 3.91372350846686*^9}, 
   3.9137235455488586`*^9, 3.913772611980953*^9, 3.9137728091949863`*^9, 
   3.913773084529327*^9, 3.913773145490184*^9, 3.913773459188767*^9},
 CellLabel->"Out[140]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
2MW6YHZIh6i5hT9xG++Ebhrb7cPeDywNhQKnLhC2EPw8dFHHcI5nZXHi9/3O
P3bwBYeg0335sYsWyn5jwg5zubDOWpSjDWcGlO4XSjjODHW0NkrLhTraJn6b
SDhy1/+vywVxV/4eHB4c48Cut0SrrQb4+NUuHu5CUyIHHSIpWpfXF/ISouY/
68P50xqV+gB+bIU03awlZxvtKqcMcqSy95DOMyXcKK0lPzfqe6eE43HN4rWk
hfuGBtzeEo48jE3zvRW4P0o49jH3evJZAz840EyqwEFNuF3DNbFZTT52/i/4
PnEe/NhoC4tM1U7ZzQpzgNFH5XREEaZOWTlfVpVw1IFyrzAfN/BTtr7/z1cY
dh8sdFfZx2ZLTO1Y1kGx/Er/uLoCBxPmMiXcy2R5ud+11/dzo11U+49Kf7tZ
Xu5x7e0uKeE4HkpkcbpgKUlTfZSWly8b9SknjMXLSxvuardLml0s4cjrHzLq
W0PCsb7cy8sNBhyU/eQ4SavCRu34Nd4rqoPXAFcW5XNJdD5idK+blcUi67YS
jmJXmbo4VZTpeJRWlncZ+CkP+nwri1dWinksric8e883VpbzDbi9jRVjLQnX
G59rGXA1223KdlHWEivLzgY5cYD0gbIOuirCTezxEo6S9hOSnOzjor6yXN8J
P862jxr1jWhl4VgNGu3Ol3CWEYzGN+Uwz+mSe2XZzahPOTFzZbnd/zSPxfNc
kPDbGCvGVhKud94CV5ajjfp+bKwsNdttynZRfjyKK8t9Bs2mS7jACH2vCz8o
NSL3UsL6JhuInyHhOPluaa+v8XUBBjfrPoOXiQ5au7XSTDdLyVVG99aXcONb
3UtmMM6NqyXcKC0laxj4KQ/4DEvJe+K7yw2UfiqbIot+woCz7LSLujiWoYFl
fb+TcBTHaggyiGM1xdnu7RLOsiMJO9cjlXcnym9HSURvYdT3ewm3TYTrQsw1
FQ85KqGWVsk+5pZg7zVw31LCkV9hw7iFhcF1jWME2NottNeRn5OdTjTQ6UaC
PeDa61tZwpGdLGf2O413a8pvufLmlmqWRvK4gXM3Um2r+O7VBkqYCSmAkajD
B/yZCtwTEqWXiVRT0YysD0r1diUc2RD/SQtaBqn2bqPdayQch3QDAw7sdZpr
Z4eB8ttRkmpvM+q7TsKNglQL22aKB2mdHS2ppsw2xH2ChKPfgcX/c5xwzyDf
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
v2K9cDurJu95mHWGP3oIQPdL21da55N5UeBZd1As718srHtV2gWZymykZbvf
k/VVRuf0zNULh5s6wzQK3WKuF46X8ja2ov+JCMbr4QrcCQYczq9ns7i+8NS5
gC2vbtanYlhYHxSESytwd9gdC49fZa6ecCsb3VLdH71u6fFSBjkyxNnyQ65E
BxhwDznhf0n/0H0MOOj1Yyr1WSk03mQjHB6nZa5+0qihG+Wvuz1+CPo8VvnQ
upcNdt6qB9k0A+GzDITVkSU1qWsNuBk2wpK+2aofPXQ1fdd37QOj7ohnA9al
2SrPPE2aWMSr/kHKgYL1WVcsq0jdCn1PzVz96KGr6ftR40OVTZw7GeMeyt6f
Gggb1ynrTOBE2LpD8nYbYUnfbNWPHrqavocaH14lPyR9Lc9b6wa2qQYcdkpJ
oLG+bQw4yB99yNxG32zVjx66mr4nGB9a2emszPP3SzgivKsBZ+Uss+4meK2E
q9D3lMzVTxw1dKMGW9JXnV6wAeWOxAbUxpsNjJNwRFi5DLG+W436XmHUt7WN
sKRvtupHD11NX2vd+rrRwBZGA8roTYStheByo74Boz4VhWjTN1v1o4eupu9c
owGlF7ABSwFc00B4plHfiC5Kt+mbrfrRQ1fTN9tF4EQ4253RNn2zVT966Gr6
ZrvfmAhnuw2X0dHF7rvvnuDC6XaBV0+U78sNdrZ2c/ejkX4IiD+JBxUIDsHz
RhUqHSuHoONFr0S9i7tbddqJcggC7rG4NcJzsHjcjS9udK8rznZbFse63YuD
3WHFx9wJxVQ3p1jN/avoc8+6Hnzkxvr9sAd1xR998XgU3/HFi8hiF1+29MXr
w4XfchVNQM9ptZn+njHehf85NXOHcxOwoQm4Af4RF9/V8RLnbTAur+zLq3x5
oy9v82WaL1v6sr0vO/myqy97+rKPL1/yZYYvR/jyPV9+7MvPfDnJl1/78ntf
zvflEl+u9OVaX2725TZf/u3Lf3x5xJf5vjwfBtU/3hsGVRNYi4nSC7ITj3a8
HpQk7uLGT72vt3j0deE5pnjJLVHc7VYs/uSpeprboTjKfaH4nPt+sb37TbGu
u7qY7KmxhHupYbPpdytsuo5k07Nazaa/Tmyarc+5aVhh0w3xj5iXeTm8XJIs
+hpf1vdlo8Axzu3sy+5ky6+QJY8mO55CVvwj2fBvZMG7yX7Pxsb8c++OvJft
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
khrZHqqlQ6X1dDEf/Ab4PkitCcK2bKOrYaODxr6OpzjbsuviLbNd7gglhrHU
LmQPfNLGtlnfVh9+QEnAeMeWNBxXISKia3BHtElvf1q3/04iUl8SXxvjzFVP
xSWpvD6zlJZGJHfs547zR/MNN79W/eku3oNR1yD/m5NM2B8H86q2gaAD/oxX
Af8f8aj/6oDa+axO1Lll4zBYfJ8zRdkgqeW1QHgGVgRRD9uzCjmRZ+tj9nfu
BHa6266Do+3aLbFdf0ts15Uzu11WTVFBvBB94x3vNLaL4NQ/tF3wAy/srAKr
K+RJIa22d5ZgyF1flFIjO+cxSvZn7AsZH+SKMW7eeDo7B0MlGL7g8hox2VY1
9BtcHjuKxSHhao3tC5zpp0Icusabje3j3JHTCmtFF/PhOou01ChEobhpP9EW
DpZGY5sKLkR6cW0mvprq05TavpO1BTdH2/eFxPblnW+i7XtmZrfvDFtLhxjg
wWKSviXvAg2JBZlgKK0c9nDjxh4uZEzNmxDxHmJqzKU95Ho3Lq8g/jshM2u4
mSV0vsxOod9jRg71v30dDwfjbmcZf0dLosGLaQfg+0aIkQaP67e1fCgQtCzW
kJek3+DUwZ+GKECkaE+x9Eh92V1n70HtqXU7pkWqz/PZS4SU6vqX2lPUd9jI
hx6DBiherdwcetYm2jDeUxUChNIoXKH4nOGC6O+ftbG95/jfPoMeVQnPKnb5
go2dhZmiS+fMdNPGzi6ond1eXBB7h+OFQjFEO0uvZ+7A4f6nW93X/D23igz4
uzDD6ZxX+wsFkAP8jUziZd+FN9NHA4ca8VPSjzCnRruoaYZdG1kbqjO5h7aT
21sp4F7U8EZQ8y6datLRlxC+tdO4wtbSTp/vLAMdOrOO675R6xhnwYJke+Jo
mythm/8ogtKpLeRu3GVDIc2tdMqx2hRymz/eeBUsoXni1jm23jDwYFcz2tj4
C+zt8wsXGAvPNTYeKYrfGRn2Fb3Ffc82HsUWKYrWcJBOBdHMSToZXdp4XF5r
ZtbJvpn6Qov5nTJim8+Ob8ZvP/MXIQcgcXuQbERHQJqRdrpPQ3NwgucIaayk
0AOhuQ1g8MKxTMJ0O+iEsdsf5QRQRX2ihpoyLSwo7DXlJ1ThGBu4RrKB1+Ls
7oeOB3XAh/n/6+XWY6Hs3tj6QgOO8fZOGCUWHpYymsLzdir876vj8Wb2Dgwp
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
KrrvKtfoY9on4WRhqNpUrQQXGEcsXBRshZiDQS7E9RdnvRQnCjksCacwWZLw
8YUj5BRuO0wRVTvISd0yZO/zl3bSzuWRukXr5stf/mACIf9Xt9Na6XgH3Pue
TFbEmzjpVve1Srgiqic9tLCJUckFu4P0Ge1Eqn9OYEwhJ9jtcgV+3TOmZusd
tbrFENH4RJA1QtYbd7uvDAnIKvWFppAlyx2Dn14jXlhcnECS/+//9YW0ut1y
5Xp0n40w8M59bo1hAQM9mLNVVAoOKl2Cie75qKS2j8PM4fbSZyau5m3/4lpr
x9rxw7pdq1oKZamlLyhjNyyp0J/acP+bzLDcZX1Z+1BuH0O5TFEG9+kC27i3
bLjU/PW73DpzB2hLbVlde4EeHTKyg+pEqCKPM/6tfSj75apa3UdMBv8tTYD+
ZbobMCgAWmqOGaC12KPEgx9mZL7ktuCb+XtnrSUbuW/1B97NFIsIuKPq0ZWv
pVaEepdTNJTrM9rFQptlufFGuEi/i2ir15AbrvvhbllLa+O2o/oJciy8tJx7
cjofygyamv3eOSysVC0WBibEKxIGClqU3ArsRygPYZ8mR+MLWSBHto+dfrlj
VjfQr5D9739cMR307l+73zd39H4r+z06rLP0OlaJskKelVjb6jHwps7WYLwU
/iGvz3d2dyOApLJm2sHXWPto5u+k/Z99QJ3VXtnzMX+uemTV/v2IWyWuOXgg
e7A7SzVk4agQJBKO8i7j/JhNWeVIEYfCdEJv8o13B/cTgvrt3ton7QOSi+8I
1FTzv6sfzenen/SZHbqz6zLx5i6bSNgJFn+MnULVlElJf9xgg+G4eat87n7C
Ti/vub2kDJYn7IMDG8SRXwL/4Cg3/qdhHfOUTWAd7zsQPbnDTPpQokDFH6dV
tUBIGTmIPBzWT/jwn3+pB2hPj6HtFLTZ7y9oWPCnlkJbqCoQtECxcRhsqoOv
AiUyGg6GX/jCsxPUjIjrrwVQjR346+0za75OZnMonSoFtZDrKLUc/keeC4zp
NwIPV4i3yRbvJ/CsLewglGn47556D5YzkRAYIwRGTg8nrFR50rHfKt7zDvud
6VX19cOez98DIgqtiFboJyAt9ljhiNLGCvctjkmZViil2H1eHT+mBwC5hPy6
JilJrdmQAOACPQA4MgbQFPIaRxrfAZGZ7Z35w1hNSm/S/LgPvlCA/9ly+C3i
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
KtyzJGhHxtCKnC5IjGvLYzA2gR7/37Zj15Y40EG8iJIrbnbLFCKPildud43+
TqWokLjHjM3b12jp6IK53izHWL9Z9f2PCjtPFWy7H2TP9XXzTc5l2Jj+lpsv
T+rsCRvHJqB8MV69sNFvFnfq3MwcNizOhjOo/o3s+dN7bq4P6k5Jgx3vP+RW
Pedct6PHyMY9YKNwCXfEdZux0W/WcP9jw5g/3rR6NsbnEL4qGX/neDdqzgaN
UNbga+427R4rneFCAVppojSFLiDevyZ22m9Wa8p7NHMYUZLpctn/Zmei/j+v
fNa9OfDkBu62XI0bKGVummUKH32G24Uc+M26x45XzfLW4Wr71G/25eH9jg0p
j/Nm/0t+13/5s7KdcGyFhLfgSqQ9wqGvuOErH+0OdJuXTWo9G2faouv/hCdB
u1Ck6QYzfHymojUli1bw/v4he9aoWxOILXoAuF0Tqp0M4+4BPdE+uNVFdpZt
a+dLX3D/C3/8NHsuz57N6lrvD8omtP9tz0CJvCL9BJ68+APijB6Z0j93rS6W
S150i/2sLqfq1mWTWjO6Ur0/lcwyc1AYt/fh7psy6vvoMbfilRe5bWQjZ6j2
ARQPgnzNj+iYjuD/timb10zton59Sr+v/re2evZg6+Pdvnde7rb8LDN5lGf9
3oOucRWKib/Of0Zbw/Nc9hyVPSsz43Zl76n3+8rVfKBzD3fK7n9wv3roarfZ
1JfdImJxK7WaxtVscfVXsgebbU1n/gmVks6WFdvFNxVMWxpOn5c9b1PUYSsm
+aRpxbhV6wPCUnaafSvdz1ZKLtQO2fOP7KFSWZr52/e5hktlj9m3qr38PylZ
qi+fqToHZH/EF+9dBFIMkfN5mtNsXJq9qprpQ/WvZ88pOhd33JPZavMqW+FV
t/DD17jvrPZ792v3q74sTayEzIR5Cst9vd3lGm+pIEE5FJksqH+QPYo+3v9T
d2EuRG3PK58/75a4J9MtdzzJ7QWz2KvvAFQheO44GZ89+2bPsvUw/rV2ATGp
RdV2PdM3fOfmoPh8OtB9/HGAws5Y5eP/uS/cdpn7wfcyVgcU+/YFCqn/aHR5
0wfxyWfqdnPLHDlEL88kRIsnBOC9L7jF832xsF8Fn/247Pld9tlXM3XuwDYg
+lLEzoOv6466c8UJXmoXIpPI9OFp1mI67jzcHdIUA6xQiEyrYAoSiOod3AZE
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
Uh58/Mcywk9SnqQ8SXmS8v9G2ZzyDzsuYgA=\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"b68edf8a-d5ba-441d-a14c-f7f20ba24310"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/sachiraj/Phd_Work/Second work(Thermoelectricity)/fig3.pdf\>\"", 
   ",", "A5", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.9135923042834253`*^9, 3.9135923045668383`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"1889f875-64b4-47b6-98d2-b3bf076cdc6e"],

Cell[BoxData["\<\"/home/sachiraj/Phd_Work/Second \
work(Thermoelectricity)/fig3.pdf\"\>"], "Output",
 CellChangeTimes->{3.9135923066336107`*^9, 3.913723560964093*^9, 
  3.913772626108938*^9, 3.9137728148044853`*^9, 3.913773158054996*^9, 
  3.913773464612257*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"daf7360b-31ae-4219-917e-ae6ca2ec0647"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kb", "=", 
   RowBox[{"1.38", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "23"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"6.634", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "34"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", 
   RowBox[{"1.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "19"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", 
   RowBox[{"1.05", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "34"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ae", "=", 
   RowBox[{"1.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "22"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"0.1", "*", "kb", "*", 
    RowBox[{"T", "/", "hb"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"kb", " ", "*", "T"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "ec", ")"}], "^", "2"}], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", "=", 
   RowBox[{"ec", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lp", "=", 
   RowBox[{"ec", "/", "h"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lh", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12uu", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12dd", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13uu", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13dd", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21uu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21dd", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23uu", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23dd", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31uu", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31dd", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32uu", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32dd", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33uu", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", " ", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33dd", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"2", "*", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]T", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"kb", "*", "\[Delta]T"}], ")"}], "2"], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Pi]", "*", "kb"}], 
       RowBox[{
        SqrtBox["3"], "ec"}]], ")"}], "2"], "T"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vg", "=", 
   RowBox[{"5.20", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"x1", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2", "=", 
   RowBox[{"2", "ec", "*", "Vg"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1", "=", 
   RowBox[{"ec", "*", "Vg"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
      RowBox[{"(", "a", ")"}]}], "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
           RowBox[{"(", "a", ")"}]}], "]"}], "+", "1"}], ")"}], "^", "2"}], 
      " ", "a"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n0", "=", 
   RowBox[{"\[Mu]", "-", 
    RowBox[{"0.1", "*", "ae"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"\[Mu]", "+", 
    RowBox[{"0.1", "*", "ae"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G11", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", "T11uu", "-", "T11dd"}], ")"}], "*", "G0", "*", 
      "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G12", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", "G0", "*", "df"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G13", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", "G0", "*", "df"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G31", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", "G0", "*", "df"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G32", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", "G0", "*", "df"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G33", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", "G0", 
      "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L11", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L12", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L13", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L23", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T23uu"}], "-", "T23dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L33", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L31", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L32", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Pi]11", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Pi]12", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Pi]13", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Pi]31", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Pi]33", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K11", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K12", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K13", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K31", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K32", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K33", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gc", "=", 
   RowBox[{"G11", "+", 
    FractionBox[
     RowBox[{"G13", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L33", " ", "\[Pi]31"}], "-", 
        RowBox[{"G31", "*", "K33"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"G33", "*", "K33"}], "-", 
      RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
    FractionBox[
     RowBox[{"L13", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"G33", "*", "\[Pi]31"}], "-", 
        RowBox[{"G31", "*", "\[Pi]33"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"G33", "*", "K33"}], "-", 
      RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LeT", "=", 
   RowBox[{"L11", "+", 
    FractionBox[
     RowBox[{"G13", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L33", " ", "K31"}], "-", 
        RowBox[{"L31", "*", "K33"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"G33", "*", "K33"}], "-", 
      RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
    FractionBox[
     RowBox[{"L13", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"G33", "*", "K31"}], "-", 
        RowBox[{"L31", "*", "\[Pi]33"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"G33", "*", "K33"}], "-", 
      RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LhV", "=", 
   RowBox[{"\[Pi]11", "+", 
    FractionBox[
     RowBox[{"\[Pi]13", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L33", " ", "\[Pi]31"}], "-", 
        RowBox[{"G31", "*", "K33"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"G33", "*", "K33"}], "-", 
      RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
    FractionBox[
     RowBox[{"K13", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"G33", "*", "\[Pi]31"}], "-", 
        RowBox[{"G31", "*", "\[Pi]33"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"G33", "*", "K33"}], "-", 
      RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LhT", "=", 
   RowBox[{"K11", "+", 
    FractionBox[
     RowBox[{"\[Pi]13", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L33", " ", "K31"}], "-", 
        RowBox[{"L31", "*", "K33"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"G33", "*", "K33"}], "-", 
      RowBox[{"L33", "*", "\[Pi]33"}]}]], "-", 
    FractionBox[
     RowBox[{"K13", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"G33", "*", "K31"}], "-", 
        RowBox[{"L31", "*", "\[Pi]33"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"G33", "*", "K33"}], "-", 
      RowBox[{"L33", "*", "\[Pi]33"}]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sc", "=", 
   RowBox[{"LeT", "/", "Gc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pc", "=", 
   RowBox[{"LhV", "/", "Gc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kc", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"LhT", "*", "Gc"}], "-", 
     RowBox[{"LhV", "*", "LeT"}]}], "Gc"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", "LeT", ")"}], "2"], 
     RowBox[{"4", "*", "Gc"}]], "*", 
    SuperscriptBox[
     RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Eta]", "=", 
   FractionBox[
    RowBox[{"T", 
     SuperscriptBox[
      RowBox[{"(", "LeT", ")"}], "2"]}], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "Gc", "*", "LhT"}], "-", 
       RowBox[{"LeT", "*", "LhV"}]}], ")"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"T", "*", 
    FractionBox["LeT", "LhV"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   FractionBox[
    RowBox[{"LhV", "*", "LeT"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gc", "*", "LhT"}], "-", 
      RowBox[{"LeT", "*", "LhV"}]}], ")"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Eta]m", "=", 
   FractionBox[
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   FractionBox[
    RowBox[{"Gc", "*", 
     SuperscriptBox["Sc", "2"], "*", "T"}], "Kc"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jq", "=", 
   RowBox[{"LhT", 
    RowBox[{"(", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"Gc", "*", "LhT"}], "-", 
        RowBox[{"LeT", "*", "LhV"}]}], 
       RowBox[{"Gc", "*", "LhT"}]]], ")"}], "\[Delta]T"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Eta]", "r"], "=", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     SqrtBox[
      RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}], 
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"y", "+", "1"}]], "+", "1"}], 
     ")"}]}]]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.913416796111149*^9, 3.913416851553672*^9}, {
  3.9134348372199697`*^9, 3.913434837714362*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"60582468-475b-4b0e-a62d-2dc0712e6b02"],

Cell[BoxData["0.9399402319873488`"], "Output",
 CellChangeTimes->{3.913416876259356*^9, 3.9134171897168427`*^9, 
  3.91341729195571*^9, 3.913434847938284*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"1b5afbd8-c181-4b8e-b2bf-08e95f77f59a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", "=", 
  RowBox[{
   FractionBox["LhT", "LhV"], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"Gc", "*", "LhT"}], "-", 
        RowBox[{"LeT", "*", "LhV"}]}], 
       RowBox[{"Gc", "*", "LhT"}]]]}], ")"}], "*", "0.01"}]}]], "Input",
 CellChangeTimes->{{3.9134169085011787`*^9, 3.913416981903695*^9}, {
  3.913417087200279*^9, 3.9134170885912447`*^9}, {3.9134171561436863`*^9, 
  3.913417159678501*^9}, {3.913434856989493*^9, 3.913434860141222*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"624e9b5d-dae3-4f89-b659-e8bf335d9d5a"],

Cell[BoxData["9.6834154072082`*^-6"], "Output",
 CellChangeTimes->{{3.913416975054838*^9, 3.913416983322282*^9}, 
   3.913417089624462*^9, 3.913434860770314*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"b22b0734-9664-4e2a-ad5d-76c7d11c63d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"ec", "*", "V"}], "a"]], "Input",
 CellChangeTimes->{{3.913416987211595*^9, 3.913416993343622*^9}, {
  3.913417163375498*^9, 3.913417166510268*^9}, {3.913434864045192*^9, 
  3.913434867516878*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"3be2624e-f617-408b-adfb-07092830da77"],

Cell[BoxData["1.1227148298212406`"], "Output",
 CellChangeTimes->{3.913416993852203*^9, 3.913417092188884*^9, 
  3.913434868512588*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"3469c276-979b-4e06-9ae4-8bae3794d2bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"x1", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", "1.1227"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1", "=", 
   RowBox[{
    RowBox[{"Gc", "*", 
     RowBox[{"(", 
      RowBox[{"-", "V"}], ")"}]}], "+", 
    RowBox[{"LeT", "*", "0.01"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J1", "=", 
   RowBox[{
    RowBox[{"LhV", "*", 
     RowBox[{"(", 
      RowBox[{"-", "V"}], ")"}]}], "+", 
    RowBox[{"LhT", "*", "0.01"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Eta]r1", "=", 
  RowBox[{
   FractionBox["J1", 
    RowBox[{"V", "*", "I1"}]], "*", "0.1"}]}]}], "Input",
 CellChangeTimes->{{3.913417142786481*^9, 3.913417148766645*^9}, {
  3.913417195566606*^9, 3.913417271277713*^9}, {3.9134173919657373`*^9, 
  3.9134173976605186`*^9}, {3.9134348888462067`*^9, 3.913434890237363*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"c588c586-5efd-42b2-b948-6db00a2405dd"],

Cell[BoxData["0.939940226687927`"], "Output",
 CellChangeTimes->{{3.913417253068132*^9, 3.9134172951141853`*^9}, 
   3.913417398327991*^9, 3.913434891594716*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"915ad48f-e489-4313-9fb8-fde41c06e14b"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.913417134260244*^9, 3.9134171402705936`*^9}, 
   3.913417194190229*^9},ExpressionUUID->"620d81cf-0644-4371-9bea-\
f5077a99cb7c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"kb", "=", 
   RowBox[{"1.38", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "23"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"6.634", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "34"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", 
   RowBox[{"1.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "19"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", 
   RowBox[{"1.05", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "34"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ae", "=", 
   RowBox[{"1.6", "*", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "22"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", 
   RowBox[{"0.1", "*", "kb", "*", 
    RowBox[{"T", "/", "hb"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"kb", " ", "*", "T"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G0", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "ec", ")"}], "^", "2"}], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L0", "=", 
   RowBox[{"ec", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lp", "=", 
   RowBox[{"ec", "/", "h"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Lh", "=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"h", "*", "T"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T11dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TX"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12uu", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12dd", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13uu", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13dd", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21uu", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T21dd", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22uu", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T22dd", "=", 
   RowBox[{"(", 
    RowBox[{"1", "-", "TY"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23uu", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T23dd", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31uu", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31dd", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32uu", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32dd", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33uu", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", " ", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T33dd", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G", "=."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Gamma]", "=", 
   RowBox[{"2", "*", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]T", "=", "0.01"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"kb", "*", "\[Delta]T"}], ")"}], "2"], "/", "h"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"W0", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"\[Pi]", "*", "kb"}], 
       RowBox[{
        SqrtBox["3"], "ec"}]], ")"}], "2"], "T"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vg", "=", 
   RowBox[{"0.8", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", 
   RowBox[{"x1", "*", 
    RowBox[{"a", "/", "ec"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E2", "=", 
   RowBox[{"2", "ec", "*", "Vg"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1", "=", 
   RowBox[{"ec", "*", "Vg"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"df", "=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
      RowBox[{"(", "a", ")"}]}], "]"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"G", "-", "\[Mu]"}], ")"}], "/", 
           RowBox[{"(", "a", ")"}]}], "]"}], "+", "1"}], ")"}], "^", "2"}], 
      " ", "a"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n0", "=", 
   RowBox[{"\[Mu]", "-", 
    RowBox[{"0.1", "*", "ae"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", "=", 
   RowBox[{"\[Mu]", "+", 
    RowBox[{"0.1", "*", "ae"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G11", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "-", "T11uu", "-", "T11dd"}], ")"}], "*", "G0", "*", 
      "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G12", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", "G0", "*", "df"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G13", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", "G0", "*", "df"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G31", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", "G0", "*", "df"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G32", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", "G0", "*", "df"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"G33", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", "G0", 
      "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L11", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L12", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L13", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L23", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T23uu"}], "-", "T23dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L33", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L31", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"L32", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "L0", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Pi]11", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Pi]12", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Pi]13", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Pi]31", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Pi]33", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"G", "-", "\[Mu]"}], ")"}], "*", "Lp", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K11", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T11uu", "+", "1", "-", "T11dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K12", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T12uu"}], "-", "T12dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K13", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T13uu"}], "-", "T13dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K31", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T31uu"}], "-", "T31dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K32", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "T32uu"}], "-", "T32dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K33", "=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "T33uu", "+", "1", "-", "T33dd"}], ")"}], "*", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"G", "-", "\[Mu]"}], ")"}], "2"], "*", "Lh", "*", "df"}], ",", 
     RowBox[{"{", 
      RowBox[{"G", ",", "n0", ",", "n1"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<GlobalAdaptive\>\"", ",", 
        RowBox[{"\"\<SymbolicProcessing\>\"", "\[Rule]", "0"}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Gc", "=", 
   RowBox[{"G11", "-", 
    FractionBox[
     RowBox[{"G13", "*", 
      RowBox[{"(", "G31", ")"}]}], 
     RowBox[{"(", "G33", ")"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LeT", "=", 
   RowBox[{"L11", "-", 
    FractionBox[
     RowBox[{"G13", "*", "L31"}], "G33"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LhV", "=", 
   RowBox[{"\[Pi]11", "-", 
    FractionBox[
     RowBox[{"\[Pi]13", "*", "G31"}], "G33"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LhT", "=", 
   RowBox[{"K11", "-", 
    FractionBox[
     RowBox[{"\[Pi]13", "*", "L31"}], "G33"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Sc", "=", 
   RowBox[{"LeT", "/", "Gc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Pc", "=", 
   RowBox[{"LhV", "/", "Gc"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kc", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"LhT", "*", "Gc"}], "-", 
     RowBox[{"LhV", "*", "LeT"}]}], "Gc"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"I1", "=", 
   RowBox[{
    RowBox[{"Gc", "*", 
     RowBox[{"(", 
      RowBox[{"-", "V"}], ")"}]}], "+", 
    RowBox[{"LeT", "*", "0.01"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J1", "=", 
   RowBox[{
    RowBox[{"LhV", "*", 
     RowBox[{"(", 
      RowBox[{"-", "V"}], ")"}]}], "+", 
    RowBox[{"LhT", "*", "0.01"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P1", "=", 
   RowBox[{"V", "*", "I1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Eta]1", "=", 
   RowBox[{
    FractionBox[
     RowBox[{"V", "*", "I1"}], "J1"], "*", "10"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", "LeT", ")"}], "2"], 
     RowBox[{"4", "*", "Gc"}]], "*", 
    SuperscriptBox[
     RowBox[{"(", "\[Delta]T", ")"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Eta]", "=", 
   FractionBox[
    RowBox[{"T", 
     SuperscriptBox[
      RowBox[{"(", "LeT", ")"}], "2"]}], 
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "Gc", "*", "LhT"}], "-", 
       RowBox[{"LeT", "*", "LhV"}]}], ")"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{"T", "*", 
    FractionBox["LeT", "LhV"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   FractionBox[
    RowBox[{"LhV", "*", "LeT"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gc", "*", "LhT"}], "-", 
      RowBox[{"LeT", "*", "LhV"}]}], ")"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Eta]m", "=", 
   FractionBox[
    RowBox[{"x", 
     RowBox[{"(", 
      RowBox[{
       SqrtBox[
        RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   FractionBox[
    RowBox[{"Gc", "*", 
     SuperscriptBox["Sc", "2"], "*", "T"}], "Kc"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jq", "=", 
   RowBox[{"LhT", 
    RowBox[{"(", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"Gc", "*", "LhT"}], "-", 
        RowBox[{"LeT", "*", "LhV"}]}], 
       RowBox[{"Gc", "*", "LhT"}]]], ")"}], "\[Delta]T"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["\[Eta]", "r"], "=", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     SqrtBox[
      RowBox[{"y", "+", "1"}]], "-", "1"}], ")"}], 
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{
      SqrtBox[
       RowBox[{"y", "+", "1"}]], "+", "1"}], ")"}]}]]}]}], "Input",
 CellChangeTimes->{{3.913432143383922*^9, 3.9134321987145157`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"f0902f0e-d953-46b0-b840-6854bc1ec35d"],

Cell[BoxData["0.2833386611950797`"], "Output",
 CellChangeTimes->{3.913432207044054*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"02bad7d8-8d76-49b2-ac2d-05c6e4beaec8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"V", "=", 
  RowBox[{
   FractionBox["LhT", "LhV"], 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"Gc", "*", "LhT"}], "-", 
        RowBox[{"LeT", "*", "LhV"}]}], 
       RowBox[{"Gc", "*", "LhT"}]]]}], ")"}], "*", "0.01"}]}]], "Input",
 CellLabel->"In[90]:=",ExpressionUUID->"b2279938-7e29-4dc9-be98-af60d39db58c"],

Cell[BoxData["4.473614393812007`*^-6"], "Output",
 CellChangeTimes->{3.9134322225361032`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"0cb87165-6bf7-454f-8706-49607ea34368"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"ec", "*", "V"}], "a"]], "Input",
 CellChangeTimes->{{3.91343222649898*^9, 3.9134322317834044`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"5fe5b332-5c36-4b53-abb5-dea60468c830"],

Cell[BoxData["0.5186799297173342`"], "Output",
 CellChangeTimes->{3.913432232834189*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"259ced43-9e63-47cb-82fd-80f833fedac2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox["J1", 
     RowBox[{"V", "*", "I1"}]], "*", "0.1"}], ")"}], "/.", 
  RowBox[{"{", 
   RowBox[{"x1", "\[Rule]", "0.51868"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.913432248418414*^9, 3.913432286359511*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"6b0085d3-d104-4487-a5e5-5e979d0e0237"],

Cell[BoxData["0.2833386995882977`"], "Output",
 CellChangeTimes->{{3.913432259363553*^9, 3.913432287119563*^9}},
 CellLabel->"Out[94]=",ExpressionUUID->"8befeac7-f6eb-4af0-9c09-acf2c91206e7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Nonlinear chiral refrigerator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["V", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["V", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "80e46396-609a-4c91-8f9c-c36259666f61"],
 ")(voltage probe)"
}], "Title",
 CellChangeTimes->{{3.9135004512063723`*^9, 
  3.913500481351713*^9}},ExpressionUUID->"d70e625e-f4a2-423f-be92-\
694f2332d3a7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T31", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{"-", "V"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V2"}]}], 
       RowBox[{"kb", "*", "T2"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V1"}]}], 
       RowBox[{"kb", "*", "T1"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V3"}]}], 
       RowBox[{"kb", "*", "T3"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T3", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E1", "=", "Vg"}], ";", "\[IndentingNewLine]", 
       RowBox[{"E2", "=", 
        RowBox[{"2", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I3", "[", 
         RowBox[{"V3_", "?", "NumericQ"}], "]"}], ":=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T31", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T32", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<GaussKronrodRule\>\""}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"I4", "=", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"I3", "[", "V3", "]"}], "==", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"V3", ",", "Vg"}], "}"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"V3", "=", 
        RowBox[{"V3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T12", 
              RowBox[{"(", 
               RowBox[{"f2", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T13", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "G", ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T12", 
               RowBox[{"(", 
                RowBox[{"f2", "-", "f1"}], ")"}]}], "+", 
              RowBox[{"T13", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f1"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        RowBox[{"J1", "/", 
         RowBox[{"(", 
          RowBox[{"V", "*", "I1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"Vg", ",", "V3", ",", 
            RowBox[{"J1", "/", 
             RowBox[{"(", "0.82", ")"}]}], ",", "\[Eta]"}], "}"}]}], "]"}]}], 
       ";"}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Vg", ",", "0", ",", "7.5", ",", "0.1"}], "}"}]}], "]"}], ";"}],
   "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check50.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.911372241972043*^9, 3.91137231080877*^9, {3.911372416559032*^9, 
   3.9113724185255203`*^9}, {3.911372454003127*^9, 3.91137248793719*^9}, {
   3.911372855198627*^9, 3.911372855395171*^9}, {3.91137309717948*^9, 
   3.911373099840811*^9}, {3.911373772951397*^9, 3.911373780880994*^9}, {
   3.911374330840699*^9, 3.911374335217552*^9}, {3.911374697713975*^9, 
   3.911374704318377*^9}, {3.911375152590949*^9, 3.911375157827443*^9}, {
   3.911375673065969*^9, 3.911375677993338*^9}, {3.9123316974083643`*^9, 
   3.912331710180681*^9}, {3.913584834967244*^9, 3.9135848394241858`*^9}, {
   3.9135849584355907`*^9, 3.913584958712121*^9}, {3.913585356546399*^9, 
   3.913585357826095*^9}, {3.9135855624296427`*^9, 3.913585564777787*^9}, {
   3.913585634709412*^9, 3.913585635164785*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d2f738e7-2fd7-4f15-ad1d-6ce8250f9cc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135856601703987`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c33c1adb-fe97-4c22-be8f-09cd81a7bed2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"3.848917712323541`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"3.995347131541603`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585660413354*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f7783690-942b-4a6a-9847-227eb95a0cf7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585660763055*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ef8548dd-6b8e-4f5f-913a-fe070a8ac3ee"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"9.923054469482715`*^-14\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2657992161539816`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135856608927526`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4ddf4274-d98d-41b3-b607-e08ac1a2715f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585660951016*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7e7f6c29-6290-44e3-842a-1e847c69a1b5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135856610068207`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"dd7c87c4-c9c5-4dfc-a510-e01d4c3ab7da"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"9.923054469482715`*^-14\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2657992161539816`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585661163148*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"bec1f201-5d5b-413c-94b6-36dcaefa29f4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585661225281*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4a9090ca-608b-426c-8e32-ef053221105e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585672534934*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d61538e5-86ad-4c35-800b-fb7b29d62b75"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585672590269*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b9da3ffa-2bf4-4ddb-88e2-1cca0c0f16c9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585672958604*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"017d118d-b156-48d0-8612-aab01765c9db"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585673041502*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"45b0af28-fd32-47ac-bf47-085e8e4d0996"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585673099585*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"883673a2-6bc3-4c3d-9f58-662f3f98e53f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585673162015*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"689b7a98-263a-497d-a630-a949f1140f3c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585673225415*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"89c16ef0-64a9-4915-bfbd-7e9740b7deac"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585673293446*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b6aaf843-ac85-4773-b3ea-31390f2e2d30"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585675242229*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c9475f17-8265-473a-bf50-03138b758776"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585675352585*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6325cb8e-3d49-41aa-9286-b0b68c578a51"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585675473778*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"21a1c4f5-c68d-49e5-89cb-c395655ca2f9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585675587225*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d7d280d3-a5c1-46b4-a8fe-13da4e55d77b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"24.029347`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913585009630519*^9, 3.913585404395454*^9, 
  3.9135856111525*^9, 3.9135856782812223`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"1cb0b1bb-5111-43f3-8c7f-c2874dd3c097"],

Cell[BoxData["\<\"check50.dat\"\>"], "Output",
 CellChangeTimes->{3.913585009630519*^9, 3.913585404395454*^9, 
  3.9135856111525*^9, 3.913585678291954*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"a315db1e-3f6b-4a06-aa5e-a15991793982"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Nonlinear chiral refrigerator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["V", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["V", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "eabf887e-c1d2-4d0b-b42f-5cb7f542622d"],
 ")(voltage-temperature probe)"
}], "Title",
 CellChangeTimes->{{3.913585754993722*^9, 
  3.913585760661455*^9}},ExpressionUUID->"02a89ed0-736b-4c86-8e1d-\
69bdf394def8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T31", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{"-", "V"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V2"}]}], 
       RowBox[{"kb", "*", "T2"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V1"}]}], 
       RowBox[{"kb", "*", "T1"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V3"}]}], 
       RowBox[{"kb", "*", "T3"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E1", "=", "Vg"}], ";", "\[IndentingNewLine]", 
       RowBox[{"E2", "=", 
        RowBox[{"2", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I3", "[", 
         RowBox[{
          RowBox[{"V3_", "?", "NumericQ"}], ",", 
          RowBox[{"T3_", "?", "NumericQ"}]}], "]"}], ":=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T31", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T32", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<GlobalAdaptive\>\""}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"J3", "[", 
         RowBox[{
          RowBox[{"V3_", "?", "NumericQ"}], ",", 
          RowBox[{"T3_", "?", "NumericQ"}]}], "]"}], ":=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "G", ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T31", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
              RowBox[{"T32", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GlobalAdaptive\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"I4", "=", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"I3", "[", 
              RowBox[{"V3", ",", "T3"}], "]"}], "==", "0"}], ",", 
            RowBox[{
             RowBox[{"J3", "[", 
              RowBox[{"V3", ",", "T3"}], "]"}], "==", "0"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"V3", ",", "V"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"T3", ",", 
              RowBox[{"2", "*", "T2"}]}], "}"}]}], "}"}], ",", 
          RowBox[{"AccuracyGoal", "->", "4"}], ",", 
          RowBox[{"PrecisionGoal", "->", "4"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"V3", "=", 
        RowBox[{"V3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"T3", "=", 
        RowBox[{"T3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T12", 
              RowBox[{"(", 
               RowBox[{"f1", "-", "f2"}], ")"}]}], "+", 
             RowBox[{"T13", 
              RowBox[{"(", 
               RowBox[{"f1", "-", "f3"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "G", ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T12", 
               RowBox[{"(", 
                RowBox[{"f1", "-", "f2"}], ")"}]}], "+", 
              RowBox[{"T13", 
               RowBox[{"(", 
                RowBox[{"f1", "-", "f3"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]r", "=", 
        FractionBox["J1", "P"]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"Vg", ",", 
            RowBox[{"P", "/", 
             RowBox[{"(", "0.316493", ")"}]}], ",", 
            RowBox[{
             RowBox[{"-", "J1"}], "/", "0.82"}], ",", "\[Eta]r"}], "}"}]}], 
         "]"}]}], ";"}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Vg", ",", "0.0", ",", "9.20", ",", "0.1"}], "}"}]}], "]"}], 
   ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check60.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.913507258967388*^9, 3.913507301349927*^9}, {
   3.913507913432147*^9, 3.913507921627277*^9}, {3.913508040285308*^9, 
   3.913508054157343*^9}, {3.9135082597854013`*^9, 3.9135082730967503`*^9}, 
   3.9135083717586117`*^9, {3.913508491794861*^9, 3.9135084963151407`*^9}, {
   3.9135087195111237`*^9, 3.91350871991404*^9}, {3.913509193679927*^9, 
   3.913509194121735*^9}, {3.913509376695812*^9, 3.913509376905169*^9}, {
   3.9135096982384577`*^9, 3.9135097024613333`*^9}, {3.9135098895709553`*^9, 
   3.9135098939687557`*^9}, 3.913510515387556*^9, {3.913510587328726*^9, 
   3.913510601249092*^9}, {3.913510970635275*^9, 3.913510977386307*^9}, {
   3.913532514011552*^9, 3.913532525320052*^9}, {3.913533179281219*^9, 
   3.913533179403286*^9}, {3.9135341357068777`*^9, 3.913534135803259*^9}, {
   3.913534631236343*^9, 3.9135346346986027`*^9}, {3.913535561960737*^9, 
   3.913535562373942*^9}, {3.913535953647637*^9, 3.9135359550459023`*^9}, {
   3.913536467730844*^9, 3.913536470286932*^9}, {3.913536873822322*^9, 
   3.913536878305884*^9}, {3.913584399923903*^9, 3.9135844003371696`*^9}, 
   3.9135845187021713`*^9, {3.913585039737302*^9, 3.913585041314869*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"cea85809-3c5e-4af3-a984-92894fe2aad7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358506972152*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"261be659-da73-4a8c-a61f-2d9db2fa8bd9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.3582832823925145`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2556102997786455`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585069843383*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"13362f88-b1bb-4f7c-abb2-6f2e8067f093"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585072984249*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e9898db7-0349-4477-a260-191ac2d1b02a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585076515966*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"69bd1eed-8563-4d28-9011-c6b54567d368"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.8968430518649196`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2727215469114904`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135850767614*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"1500e8f2-71dc-43b1-9c60-04945bb8bdbd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585076868919*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7ed7f2d6-4963-4978-9782-49774704a3d8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585076970771*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ecc23a29-9291-4832-8b1b-2808d62e58c4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.06370276843457`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.390050392156199`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135850770664988`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8a5cd368-0cb0-45eb-aae0-b4e8ba3df76d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585078851468*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"aec10b04-f40c-4b67-a61c-e088c5824e4e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.5870916506474474`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"8.336527960744471`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135850804582863`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"1f691721-a3b3-49fe-9836-4dada923c48a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358508055869*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fa28a762-7e8a-4289-a0dc-c08804f5506d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585098951865*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5e081057-e3b2-47e5-9263-4b56759f9b13"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585099040297*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ee2ea26e-d54d-4df3-bfd9-e45a2e5d2743"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585127627287*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"fcde4057-f336-41c3-9a76-e2c01395d48c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585127721455*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a0558e52-b530-4814-b2b7-d967e8e80b89"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585127820815*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"582b28fa-1149-49b8-b102-ca413dcc753a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585127919718*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"4159a587-5e9e-4a7c-aba2-4a44d362f82c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.6112116754841424`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.1191287172364024`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135851281616287`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"e48a6916-9c07-48eb-8a0f-8ac5675570fd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585136241457*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"141f10f3-c2c8-4ccc-8f10-f81ae6c7159d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358515364185*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5408d735-394c-407e-ae97-8f5a25b073e6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358515370437*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"dc10d89e-740f-440c-b342-81dd66daf081"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585157793449*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6890fe50-5425-423c-859a-171d2bfa6f25"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135851578573236`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d11b6b29-8769-4940-9b5c-493834713b3a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135851922217493`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"43357377-c4eb-49f1-af90-c75a88c9b36a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585192315926*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ed378d29-f859-4a3d-bfeb-792e50b91870"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135851924154997`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6131f7fd-e74d-4dd1-8019-e9cdd5dac929"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135851925091267`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4cc37b58-2a6c-43de-a288-b61cb437491d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585231510249*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b43e28f1-c3cc-4b73-86e8-9ed950758133"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135852315896378`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"7c22d839-f523-496f-b444-8d98b8e8e642"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585236731349*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"41fe317c-824d-4636-a048-8dd6b9109e8c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913585236795409*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"478705c6-8ae2-4328-86d4-4698af395f85"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"182.702329`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913584695280065*^9, 3.913585243812639*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"3f3330cf-8cef-4754-b82a-fecdb6a18c11"],

Cell[BoxData["\<\"check60.dat\"\>"], "Output",
 CellChangeTimes->{3.913584695280065*^9, 3.913585243896809*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"bed60b16-8e6e-4387-bee6-6f461eb3171a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Nonlinear helical refrigerator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["V", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["V", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "fb09a359-3570-48fa-89c4-735fc355ed15"],
 ")(voltage probe)"
}], "Title",
 CellChangeTimes->{{3.913585769828822*^9, 
  3.9135857751724873`*^9}},ExpressionUUID->"d8cd7aa9-c352-417f-9671-\
daa1c519625e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T31u", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31d", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32u", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32d", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12u", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12d", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13u", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13d", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31", "=", 
   RowBox[{"T31u", "+", "T31d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32", "=", 
   RowBox[{"T32u", "+", "T32d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12", "=", 
   RowBox[{"T12u", "+", "T12d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13", "=", 
   RowBox[{"T13u", "+", "T13d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{"-", "V"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V2"}]}], 
       RowBox[{"kb", "*", "T2"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V1"}]}], 
       RowBox[{"kb", "*", "T1"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V3"}]}], 
       RowBox[{"kb", "*", "T3"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T3", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E1", "=", "Vg"}], ";", "\[IndentingNewLine]", 
       RowBox[{"E2", "=", 
        RowBox[{"2", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I3", "[", 
         RowBox[{"V3_", "?", "NumericQ"}], "]"}], ":=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T31", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T32", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<GaussKronrodRule\>\""}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"I4", "=", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"I3", "[", "V3", "]"}], "==", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"V3", ",", "Vg"}], "}"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"V3", "=", 
        RowBox[{"V3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T12", 
              RowBox[{"(", 
               RowBox[{"f2", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T13", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "G", ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T12", 
               RowBox[{"(", 
                RowBox[{"f2", "-", "f1"}], ")"}]}], "+", 
              RowBox[{"T13", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f1"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        RowBox[{"J1", "/", 
         RowBox[{"(", 
          RowBox[{"V", "*", "I1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"Vg", ",", "V3", ",", 
            RowBox[{"J1", "/", 
             RowBox[{"(", "0.82", ")"}]}], ",", "\[Eta]"}], "}"}]}], "]"}]}], 
       ";"}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Vg", ",", "0", ",", "7.20", ",", "0.1"}], "}"}]}], "]"}], 
   ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check70.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.911376221590494*^9, 3.9113762382665873`*^9}, {
  3.911376391995223*^9, 3.911376392088031*^9}, {3.911376809472108*^9, 
  3.911376818935999*^9}, {3.91137720784361*^9, 3.911377214383307*^9}, {
  3.911377650848321*^9, 3.91137765577288*^9}, {3.9113781014411907`*^9, 
  3.911378114500001*^9}, {3.9113785443001347`*^9, 3.9113785507305393`*^9}, {
  3.911378955322057*^9, 3.9113789643648863`*^9}, {3.91233099514515*^9, 
  3.9123310325248537`*^9}, {3.91358585766321*^9, 3.913585870134199*^9}, {
  3.9135861637354*^9, 3.913586165434976*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"eac57cc6-12c5-4d25-85fc-4e66e8cbe70d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586208925486*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"13e0a6ef-9502-4b42-ae2c-e56a13832457"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586208990478*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"bee515a2-6af5-4243-881e-ae1bc6ddd43f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"3.729655473350135`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"9.266576720114887`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862091680727`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a2bf1a6e-2363-4fc0-80ca-30b45e0231f3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"7.101524229780054`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.8088704892957917`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586209231125*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"564fd99f-8f98-43b1-8214-ba5b1e437bb1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586209452222*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"bd498320-cb02-4f6a-9340-f9891b9fe992"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862095404053`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c149bb25-09a0-4ed6-b798-0b2eae50caf1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.347297703431117`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.9865775321392785`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586209612336*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a2921013-3fe6-48c5-be51-304e9007768f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.0003530082357557`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.76508014900618`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586209684432*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"bfae03de-ebb9-43a4-9a4d-b22ecd4503d9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862099332848`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a69a009d-8000-4064-914b-a0817177e12d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586210005311*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fed4c19c-43b7-49bb-99a2-d19abbdfdb3e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586210090567*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b4ef1f43-65a8-4848-a2a4-6728e392f013"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"6.4565323573684275`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.3599363709121794`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862101762247`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"00c92aa9-7fa6-4920-aecb-01247ad32125"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862102019663`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8159fabf-dca3-48e6-8fa4-66405384714b"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586210284153*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8562802b-51dd-471c-a142-ad63098fb23a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.3040783730655647`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.5671157936247102`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586210368379*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"60d3f4b8-a054-4a3a-8a92-6d0bca1dc0e7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586210450721*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2604af54-f9d9-492b-b3e0-834f0cf07753"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586215058385*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f90c7de8-caca-4ef6-a46c-1ab60fd03fff"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.568644197703325`*^-13\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"4.012334692634965`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862152186527`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a1dde016-eef0-4d44-9a80-86f02817c2dd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586215298491*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"27280db6-db31-448f-9123-ad2d1470ead3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.568644197703325`*^-13\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"4.012334692634965`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862154461403`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d42a36be-334c-4cd6-a8a2-14e7b97d85b3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586215539249*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6f225e4e-cfc4-4359-9b65-4941c6680528"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586215635213*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"683610c2-311a-456c-a2d7-7c58147e1073"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.453889935837843`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"4.653751675826431`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586215699358*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"554b53ac-3079-482d-a1c0-4012de77c767"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586215768878*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"0934e580-9fb8-44dc-956b-7dd7addc1660"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586215846931*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"56b31850-c9ac-4a3a-ba4c-a9d8e3157e8a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.924578609072182`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"9.819718721249376`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862159373913`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2448ff82-7d52-487d-ba60-aa304d93f840"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586216044897*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9eebbf8b-1051-4b6c-a11e-923035ec10ed"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.924578609072182`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"9.819718721249376`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586216159443*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"c86abcb5-18b5-42ae-aaac-350c5c6b61dd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586216267709*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b05430b0-dd1f-4e8c-b429-8bc8c317df00"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586216368099*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"251d2a29-25a7-4d70-9f86-c960978f1446"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"2.286988957586611`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"5.65928732787072`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586216443416*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"06df208c-3331-4c36-a4ac-9a5786f91604"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586216522479*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"2234c0cb-c43a-4c90-85cc-81a0f6256d86"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862217721443`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"88764104-fda4-4738-a009-570ef8d64bda"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.418046247112132`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.6918556347461353`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586221917515*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"855324cb-85b6-49e0-bcde-22568e3abceb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586222020938*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"bd3f85dd-9be6-436f-bf96-5e601be1f345"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.418046247112132`*^-18\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.6918556347461353`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586222120738*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"b9317604-5481-4ef0-911c-bc5dcb7bda59"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862222208843`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f61bed44-b266-4033-8c46-7e9d9ced8cbc"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586222336709*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"f2035f57-42c8-4cd9-9bd5-0e22d5f85245"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.61465655570351`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.3098739049042938`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862224306498`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9470d9a6-13e2-4f0e-8330-a28d31c8a6bb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586222511984*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2d1eb28b-aef6-48f9-884c-6f68df0b1298"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862226918573`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"44c119ec-1c51-4697-af18-6935ccfdb902"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"4.213988912590144`*^-20\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.0363981861014267`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862228654118`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"387d8fe7-8cac-4a45-9ec1-f9d825f4cef1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586223397686*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b81c7b63-d252-437c-a4dd-940f439e77ed"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.112789534455337`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.2529096653234188`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586223573866*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"98ff79b7-cda1-4fc2-bea1-0d8b24cf2687"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586224275749*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d1573370-a8e4-4e66-bcf3-69d585530673"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862243456697`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"267c4b37-e613-4fe1-9017-6b0c6110b72e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"5.749236129488564`*^-20\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.1765478973719143`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862247096157`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"472457be-aea7-4563-841d-9b3789cd8f74"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586224781089*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"41bea401-88b1-487b-b248-46175c7b560e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358622972439*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"1814b064-d222-4b37-a6bf-b06fd7036d40"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135862298393583`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"23bcfc66-2e1a-4f91-a00a-4ab8983aa8cd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586229960227*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"97970344-f77d-4ead-a576-b940d9d921ff"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586230065892*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"a34aae7f-809a-4651-a217-a2733dd0f69f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358623183702*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"a8147f72-059b-45c8-a56e-631d49132761"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586231945312*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1093ed46-e975-4abb-9686-e4209b657e03"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586232053958*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"eefd2f90-7813-4775-b922-26c2fc4f88ad"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586232157103*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"9e8cf2e6-f5a5-46b9-a4f8-ea00958b3824"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"31.43285`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913585922849597*^9, 3.913586234544175*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"7edb7b5f-75e7-4ed5-b493-87da21c07f71"],

Cell[BoxData["\<\"check70.dat\"\>"], "Output",
 CellChangeTimes->{3.913585922849597*^9, 3.913586234555637*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"bd4f6a0e-2e38-4b5a-ac45-a16009fbbe05"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Nonlinear helical refrigerator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubscriptBox["E", "1"], "=", 
      SubscriptBox["V", "g"]}], ",", 
     RowBox[{
      SubscriptBox["E", "2"], "=", 
      RowBox[{"2", 
       SubscriptBox["V", "g"]}]}]}]}], TraditionalForm]],ExpressionUUID->
  "decdc3a7-d1b3-42fc-80bc-2c935c478c19"],
 ")(voltage-temperature probe)"
}], "Title",
 CellChangeTimes->{{3.913585937884123*^9, 
  3.913585944351594*^9}},ExpressionUUID->"0eaa386d-5319-448a-b1c9-\
b791aab5ae78"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"T31u", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31d", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32u", "=", 
   RowBox[{"TY", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TX"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32d", "=", "TY"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12u", "=", 
   RowBox[{"TX", "*", "TY"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12d", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13u", "=", 
   RowBox[{"TX", 
    RowBox[{"(", 
     RowBox[{"1", "-", "TY"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13d", "=", "TX"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T31", "=", 
   RowBox[{"T31u", "+", "T31d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T32", "=", 
   RowBox[{"T32u", "+", "T32d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T12", "=", 
   RowBox[{"T12u", "+", "T12d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T13", "=", 
   RowBox[{"T13u", "+", "T13d"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ec", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TX", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TY", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "2"}], "\[Pi]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"G", "-", "E2"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"hb", "*", "\[Omega]"}], ")"}]}]}], "]"}]}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V1", "=", 
   RowBox[{"-", "V"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V2", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V2"}]}], 
       RowBox[{"kb", "*", "T2"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V1"}]}], 
       RowBox[{"kb", "*", "T1"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   FractionBox["1", 
    RowBox[{"1", "+", 
     RowBox[{"Exp", "[", 
      FractionBox[
       RowBox[{"G", "-", 
        RowBox[{"ec", "*", "V3"}]}], 
       RowBox[{"kb", "*", "T3"}]], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Omega]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"h", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetSharedVariable", "[", "list1", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list1", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ParallelDo", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"E1", "=", "Vg"}], ";", "\[IndentingNewLine]", 
       RowBox[{"E2", "=", 
        RowBox[{"2", "Vg"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I3", "[", 
         RowBox[{
          RowBox[{"V3_", "?", "NumericQ"}], ",", 
          RowBox[{"T3_", "?", "NumericQ"}]}], "]"}], ":=", 
        RowBox[{
         FractionBox["ec", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T31", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T32", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"Method", "\[Rule]", "\"\<GaussKronrodRule\>\""}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"J3", "[", 
         RowBox[{
          RowBox[{"V3_", "?", "NumericQ"}], ",", 
          RowBox[{"T3_", "?", "NumericQ"}]}], "]"}], ":=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "G", ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T31", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f1"}], ")"}]}], "+", 
              RowBox[{"T32", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f2"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"I4", "=", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"I3", "[", 
              RowBox[{"V3", ",", "T3"}], "]"}], "==", "0"}], ",", 
            RowBox[{
             RowBox[{"J3", "[", 
              RowBox[{"V3", ",", "T3"}], "]"}], "==", "0"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"V3", ",", "Vg"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"T3", ",", 
              RowBox[{"2", "*", "T2"}]}], "}"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"V3", "=", 
        RowBox[{"V3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"T3", "=", 
        RowBox[{"T3", "/.", 
         RowBox[{"I4", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"I1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"T12", 
              RowBox[{"(", 
               RowBox[{"f2", "-", "f1"}], ")"}]}], "+", 
             RowBox[{"T13", 
              RowBox[{"(", 
               RowBox[{"f3", "-", "f1"}], ")"}]}]}], ")"}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"J1", "=", 
        RowBox[{
         FractionBox["1", "h"], 
         RowBox[{"NIntegrate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "G", ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"T12", 
               RowBox[{"(", 
                RowBox[{"f2", "-", "f1"}], ")"}]}], "+", 
              RowBox[{"T13", 
               RowBox[{"(", 
                RowBox[{"f3", "-", "f1"}], ")"}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"G", ",", 
             RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
           RowBox[{"MaxRecursion", "\[Rule]", "1000"}], ",", 
           RowBox[{"AccuracyGoal", "\[Rule]", "20"}], ",", 
           RowBox[{"Method", "->", "\"\<GaussKronrodRule\>\""}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"P", "=", 
        RowBox[{"V", "*", "I1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]", "=", 
        RowBox[{"J1", "/", 
         RowBox[{"(", 
          RowBox[{"V", "*", "I1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"list", "=", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"list1", ",", 
          RowBox[{"{", 
           RowBox[{"Vg", ",", "V3", ",", 
            RowBox[{"J1", "/", 
             RowBox[{"(", "0.82", ")"}]}], ",", "\[Eta]"}], "}"}]}], "]"}]}], 
       ";"}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Vg", ",", "0", ",", "9.20", ",", "0.1"}], "}"}]}], "]"}], 
   ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"Sort", "[", "list1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<check80.dat\>\"", ",", "list"}], "]"}]}], "Input",
 CellChangeTimes->{{3.911376357143487*^9, 3.911376384346552*^9}, {
   3.911376506360409*^9, 3.911376507899831*^9}, {3.9113769080158663`*^9, 
   3.911376911094204*^9}, 3.91137719730195*^9, {3.911377315194736*^9, 
   3.9113773156395884`*^9}, {3.9113777666881933`*^9, 3.911377771651187*^9}, {
   3.911378215529352*^9, 3.911378220849955*^9}, {3.911378650942083*^9, 
   3.911378659052602*^9}, 3.911378949425405*^9, {3.911379065038679*^9, 
   3.9113790655632*^9}, {3.912331159144885*^9, 3.912331172169936*^9}, {
   3.913585966959991*^9, 3.913585974613059*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"5c46eda5-5301-4ae2-b5bb-624226b63541"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586001966528*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"5e0326db-ec8e-4532-b30a-4c419a15c2eb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586002087216*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5cf97329-1f58-4562-ba76-06b9421f947a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.727473089334041`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2921599544908847`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860022823067`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"6c138405-a7c8-453b-9770-318604e13045"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586002359351*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"da75d5f7-526c-49cd-b40a-b966ad8fb396"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.3674499900473425`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.2173373012389444`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586002442058*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"5f7cc4a1-f612-4ae8-ac31-1c3bb49db711"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"9.66335843809174`*^-15\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.1498840885919825`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586002533662*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"b419a6d3-9e90-4d29-bd09-2129aab7300a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586002595229*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"8d4a84a4-056a-4c5f-83c4-3b31db1be227"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586002664036*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4a083e2c-e66b-46b7-aa41-5925d4dadaf4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"-\\\", \\\"7.361732751176575`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"2.4913925203949513`*^-17\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586002731801*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"399405ca-dc5c-4202-a011-4b1518076834"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358600282008*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"0bc1c6a3-4029-4102-ac5c-5f35debecf4c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.727473089334041`*^-15\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.2921599544908847`*^-17\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586002884447*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7727d1d6-0872-4147-9504-e8e969266c5f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586003498577*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"d716a855-5ef3-413b-bad9-1c652a549fe7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586003766963*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"c796b29a-5ff9-404a-b886-026477ddedbd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586003836493*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6bfbef4b-a0d6-451d-bd6a-bae79ccb44b5"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"7.935512869646638`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"9.529736902941668`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586003962144*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ca164bfe-9500-44e7-abb5-e3390924c1fb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586004057851*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"41206ac1-203c-44b4-853e-a3da51d89741"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586019104183*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"7500cb73-1e22-4c0a-a9cc-157dac4e63c4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"8.807109772371313`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.0954722692496397`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586019222766*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"24e4d770-c687-4247-99cf-371f51fe3da4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586019308239*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"701fdc15-3889-4966-9bdd-a0f9fff17326"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"3.059889581297215`*^-16\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"7.048988643951791`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586019424643*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8a1ffa28-b789-4aa4-b1ea-042fa22a91c9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586019506378*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4a13b2c8-6183-4292-8288-0c7b3533cfcd"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586019590784*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"e1deae12-515c-446e-9c99-fef53247d901"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"8.807109772371313`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.0954722692496397`*^-18\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860196746473`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9727096e-7179-4abe-927b-cb1810dd0227"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586019759618*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8e33eb33-0d4a-489f-9e54-6f547ec4643e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586020505468*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"89afb27f-43df-40c0-9054-854d40fe052c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.4899309542203143`*^-18\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.7088947958058778`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586020623637*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"19962508-e670-48c4-a7e6-58eb6f9036f9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586020715147*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ab9b049e-54c1-4e43-aa1f-7102531704f6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.1678890276742293`*^-17\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.1578493632800866`*^-18\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586020827812*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"6cdd1b37-af6e-473c-8833-0d73a0ab3283"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586022371922*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d3c02e69-a797-4295-9103-590a896c174a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860224604483`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"95fb42c5-f279-41dd-983e-b829f3d50ef1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.489443910275643`*^-17\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.3018853837045609`*^-19\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860225687513`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"58d9d21c-af92-4fbf-96d2-f855e4f50f20"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586022649249*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1281a98e-8bec-4de0-b6fd-175a7baa07ba"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586039753684*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"763f89ee-6d08-4159-86fb-df29bc852b51"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586039906777*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"f075afe2-ebd9-4a0d-84d2-e012b0c296d8"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.6371312021578573`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.6957320599907152`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358604002495*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"677d1abb-92a2-4fc4-a61c-48ddec116ad3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586040115532*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"8a5dd701-a4d0-4edf-bc52-59f519631892"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860401999702`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ac227c54-3f24-42ec-9c14-0363abd784ba"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.6371312021578573`*^-16\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.6957320599907152`*^-19\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358604038899*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"ba464c12-b0da-4313-9378-74fc3f874152"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"8.422766587321204`*^-20\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.270532197465454`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860406013536`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"fd2e55d7-603f-4095-8926-5f74097884ac"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358604070503*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"de4073fc-d686-4789-9f43-fab58641a59d"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860408092117`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"77002927-af4c-4b68-80fb-93853afc8c1e"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586040937661*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"d666ef65-52f0-433b-a8f6-6d179ccfcfcb"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860410366163`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"2e6f1eb5-35ba-4d40-a2bd-3db9621a4339"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860411320257`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"413ae1a6-0d3b-441d-b9bf-49eaf294c685"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"4.055699630571997`*^-19\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"2.5066717707687972`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860420933228`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"250f70a5-3890-4637-b1f5-3efeb00dbaa6"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"1.8122622492241856`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.3981482185348316`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860437218227`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"ee3f772c-caf1-4cd5-bd66-7228c31a7eb2"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"2.6076041630121644`*^-19\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"1.6545728044494154`*^-20\\\"}]\\) for the integral and \
error estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586045158244*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"45273a60-6d06-4a3a-a37b-b641e898fa8a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"eincr\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860452201567`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"439e19a2-4fb2-4b18-b088-3061a2dae885"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586057814787*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"1503801b-a735-4e5f-a89e-9e29c0641c16"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860578894653`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"66f9d67a-6205-4fd5-b4e8-e665a3d494f7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860579685793`*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"76c6deb8-35ce-4403-b25d-307ca5d6d2d1"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586058056015*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"7bb37379-e072-4e5b-8354-d6be8b8928a3"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "eincr"}], "MessageName"], " ", ":", 
  "  ", "\<\"The global error of the strategy GlobalAdaptive has increased \
more than \\!\\(\\*RowBox[{\\\"400\\\"}]\\) times. The global error is \
expected to decrease monotonically after a number of integrand evaluations. \
Suspect one of the following: the working precision is insufficient for the \
specified precision goal; the integrand is highly oscillatory or it is not a \
(piecewise) smooth function; or the true value of the integral is 0. \
Increasing the value of the GlobalAdaptive option MaxErrorIncreases might \
lead to a convergent numerical integration. NIntegrate obtained \
\\!\\(\\*RowBox[{\\\"8.574554229724685`*^-21\\\"}]\\) and \\!\\(\\*RowBox[{\\\
\"1.0834154571434518`*^-20\\\"}]\\) for the integral and error \
estimates.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586059771245*^9},
 CellLabel->
  "(kernel 2)",ExpressionUUID->"3f9a3d4f-5d0c-4e18-99ca-fd14e1b8bde9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358606640729*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"cd91c6c3-fc92-41f0-afa8-5ca56e908836"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.913586074835197*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"9bf2dfc7-a616-411e-9852-541e7b52dc9c"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NIntegrate", "::", "slwcon"}], "MessageName"], " ", ":", 
  "  ", "\<\"Numerical integration converging too slowly; suspect one of the \
following: singularity, value of the integration is 0, highly oscillatory \
integrand, or WorkingPrecision too small.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9135860749061747`*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"4df6b017-8f2f-445f-be08-06eab305e7a9"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], " ", ":", 
  "  ", "\<\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NIntegrate\\\", \
\\\"::\\\", \\\"slwcon\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"\>"}]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91358607500179*^9},
 CellLabel->
  "(kernel 1)",ExpressionUUID->"897591de-f1e5-4222-89c5-f7e751880709"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"84.581857`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.913586079841949*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"ae6367bc-8664-4475-a700-453ef78235ab"],

Cell[BoxData["\<\"check80.dat\"\>"], "Output",
 CellChangeTimes->{3.9135860799310837`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"d9a9f393-2a66-4b48-95a5-dc30668c6259"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check50.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check60.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check70.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data4", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check80.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"A1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data1", ",", "data2", ",", "data3", ",", "data4"}], "}"}], ",", 
    
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "9.20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\"\<1.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "\"\<2.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"9.20", ",", "\"\<9.20\>\""}], "}"}]}], "}"}], ",", 
         "None"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(eV\), \(g\)]\)/\!\(\*SubscriptBox[\(k\), \
\(B\)]\)\[Theta]\>\"", ",", "45", ",", "Bold", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<J\>\"", ",", "45", ",", "Bold", ",", "Black"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"\"\<Label\>\"", ",", "Black", ",", "Bold", ",", "45"}], 
      "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue", ",", "Dashed"}], 
        "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red", ",", "Dashed"}], 
        "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", "\"\<(a)\>\"", "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", "Black", ",", "35"}], "]"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.911694771150426*^9, 3.911694862116467*^9}, {
  3.911694921445726*^9, 3.911694963857287*^9}, {3.9116949966463833`*^9, 
  3.911695029075528*^9}, {3.9135841443766127`*^9, 3.9135841716505003`*^9}, {
  3.9135862767932167`*^9, 3.913586305395714*^9}, {3.9135863360649014`*^9, 
  3.913586382920826*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"7a220dcb-84f7-42f1-8e36-9435603abb15"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], LineBox[CompressedData["
1:eJw10g1MzHEYB/C76OXS63Wle8nVLHWKImsK9zwkzcQqXJqh6MLYkWSItpIM
IVfHohBZpRcyKYRU5KU7izjvvSkiuaQrqsN1j+/233+//Z7n83v+//1c1m4J
kxoxGIzgf4/+/T+R3/z8o801cCpLnxsAxXVxqorvtH4E6QFM1vubPTDDR5/n
4H7G1lMR8I32XwNOtiicFv8VDFoLLJDwrVtlXVTfDkf5E+u8F32C9TH6dMKs
omHTD8IO6u+CpKCz+W9H2kDZoE83zI/MDqnsbSFPA+Up7kPBZh+ovhdkReH1
fvFvYJT36YPSlH0ajZea+n+CyVS3bR7+TTB6XIwWjk9eJyyRN5I3CPO1cbKl
m1Xk/QLui5g/A/CY5h2CX8LYmo2KB+QNw8d95RzrqFrydHC3OFvhdbKaPAbu
eno/s2ZFFdUzMKgr2zrXo5J8JibVXy5Qy69RvxFueR0v7U8oo/nHYPKj8qQT
xSXkjUVfye0BlWsheWMxV3dFZLLwInnG2FMTl6/U5ZJnguFWL+dNlZ4hzxTV
Kk5va14WeWbolh/RlpKjIM8MWQWt9pwZcvJYGBkr35t4/ih55jhl3ZwXX+8d
JG8cHhNIl+su7CfPAnXXS9HXI5k8C9ytDEyo2pNIniWu3lm78suxXeRZoXbP
CUb4pnjyrFE5lPS0+XsseTZYlyo09jSRUb0Nhr5b+8fZaSP5//b7/RZf0kVT
vy3mSDqvlhyKovNscWtY4GOH4FXksXHvhvIdVXEryGMjnF2vLZUuI4+NvGkP
XaXMUPLsMPR+09t+STB5dngg9bPnk6wg8ji4U4hwJC+A7i8HM6sLjpdJkDwO
jvgI3ytFs+j+2GO76cjLlHRf8uxR+zumg3trOnkO6KfK6C5je5HngB6H0y0z
qkXkOWDpmtzBy2Gu5I3HJc7h8rkXXMgbj+ZqPBfp6gTMUc8RdTc7XdwtHclz
xITq6dE3Gu1ANeo5YhNL1uK/xIY8Lm7furujsd6cPC6W2Bov8/5hTB4PeZ0R
7DsaJnk89E7kR6TBiNgwHw8fTJmdOq52QGz4f3x8aNTUHOXfJzZ4fJQH9j1P
HuwRG75XgM6TAofTGj6LDZ4AGSsDBHkV7eQJ0GaBVUIIp1lsmM8JnfvqW4dm
viLPCdsUfJHs9DPyJmAaV9SmZjWI/wJpTf7w
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw10Asw23ccAPAIrffqkUq8ItGt2zqpCXVz1f/ve9wxyrBHsRsa05TbebRq
ZVuVWaps3Ml0yrX1Oqw0ZzTa6TDOY1GPFrlZ2irX0DBZJRilsa3ku+/d//73
v//3+/k+uPGp75+g02i0mJfP9vv/6DzBiwQzDako3452MrJnM2z09hJ+DxLP
K0ntk3eeES/P7Zggrl5npYX+f+F/BZmeXYzlZiwSvTZDjhbKh+6mLGC+krxh
t9LHOKoiJ4Xb8ZQM30h90OEyh/ULxMMmt79t6wkZGd4ONflg/jwp1s6gpyFi
nQ+1bPwY87WEv1S2ojjzAP0VUtQobyhynySjO/WrxEN3pLrfR4791sjNGhUv
QDxGDHa856TB96pE9NkoehukIVl62I3cRe8FIUphe3XpAHo6opKGeoUc7yWJ
O94/JMstzzr9h26cjwZFlTJ+VGQHzk8Dwz9F6oADP6NvANTY2nxxiRTnoYPY
2WGy64sW7GcIeWFGivcaJTifEYQvGAZJ9l3H/kagWZblmwXWobcLMuPk3eu6
avR2g49sf/2w4Bp6xmB4Pl0qqy5HzwSS+m71t1RcQs8EzOPEom88xOiZQmTF
p/UzV4vRMwO+h+2hwc4C9MzB6kp4YXiVCD0LEI43/r72+te4rwU8adUMWJzN
Rs8SFMem7usKs9B7BQJzI3LYJzPQ2wPTw7miMPUpvJ8VPP9q/KEfLYXspAut
oK/SzDKSlYS+FSw92gqY30wgO+We1tCUdzt4Kl+A/axB2mXSevDdGPRswH6w
sSPhVBR6NpDtEJrRk/AhejaQvGGp6TSIwHlsQRuoK9VEh6BnC933LmjvXQvE
fRnAXJN5C5r8cR8GDC347WLHAd6TAaJi0+DTRw6jtxcMFr+nl9V7o7cXRpvq
Yv0n+OjZgVfO9ZLSAHf07ED40VxX+vqb6NnBuadBl02/ew09JqxVycYrHnPR
Y8IZnmTjUKUz7ssCVmKvNKqAhfuyQP75Q8eSMAbuywLdjYOJzBErvJ89PDre
7nd6wBw9ezBM7qyRanaj5wDxN4vHyDM6eg6QYc7fXPb+l9J7L//zUstS2jYo
vecIaes/duXv/5vSe47QZrLeYy/QUnrPCVQetAsjIjWl39cJ/iiqi56NVaHn
BDG+x5R2bCWl39cZ3BKDlUbvTKPnDLO1dLEiVUHp78eGuLcnLoVK5OixgVO2
KvftvU/p78cGG5ecZgFrCD0X8DuXG39gvB89F7BmjoYF5fTgfBx41WeCa6n5
BfM58C3TLWLrrVvoc6CKxx+WZbVgPQcktZPjMxFNOD8HZi6Ky5td63A+Lni5
v3Bs3leFHhd6Y43n+L6X0eOC+re0zLTBEvS48MmX2fH0oAL0uJAZHb2qcMlF
zxVWauN//TghAz1XUDFruqZahei5grY/S33npxDqP0vXens=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], LineBox[CompressedData["
1:eJw10g1MjHEYAPA3XUgfurvuut6yaaWIrHWXjLr/c9Y4I6uoIVFv1CSkD63M
ZH13rU+S1PrS0sdUTIqzJmTpA8ciy612ihtrl76T0nWPZ3v37t37PL/nebbH
hrnoe2YVRVH7lx/t+3/UJT6mh0NmSPFtbbQRN+/iT93d0/jdRXz9mYMhmiki
EmrjAwmsPimllZP4f4DceN0qVZZNEJ02RJ74yHd/kfzGfBUxyDHWj3ynIWGh
2hglbfGjVMb9MaxXk79MwhH6+U/S26ONXyQ2nweH1T/Q05D7WTZWLNEo5o8T
D9Y+PVGdiqzwwgkymyKcyfAZxvpJclQq8Gg+piQr7UKnyUcaqkLjv6A3Szrm
haLZpX705khZSPPejh8fcN4/ZM6W2iNzeo/eAnGazm/0z+7F+RdJqdHNQvpE
F3oUsKfqF+lHrzCfAjAP4ydkdqCvB716V712lbRj/SqoM5I0vh55gv30YSfv
rr9soAU9FtS7vIxqC36IHgvU3oqYzvAm9AyAlVurLu+sR281NGU5PJ2Pq0Fv
DUS83RtV3VdF9Fa8taA4ULiF97Cc9K14a4Fpu9JQZlOCniGkBl3XODfcQm8d
wIBVvsf3AvSMQJqncD7bmoueMdhur/a352ShZwzus25NLbI09EyAnSLbFyZP
Qs8UwmuEDgtpieith8Pb93wbaLiC+5pBWWvgy2L7OMw3gyLPLib/eDTubwZ2
SfxmZmsk1rPBTzlIhVDnsB8bLuRdC5hPC0WPA46XIrI5bxj0OLC1vygn0ecU
ehxIFlSOFPOOo8eFzsn0fqrFDz0uJLpwDf6a+uK+5lBwJ2LMwuAQeuaQ/jm6
VzMmxf3N4d5RV1dRsyd6PFCaBOSe3ixBb/mW183Jks+743x8MI2qvfwi1Q3v
kw+B3Ubl3VFCnI8PD8IzUx+YOuN9W0CqQ9y5jARH9CxAwESOuPRsQk8AkhfP
Jm+pbdATwL3K6Xaf4A3oCWDbkVjXMUMBepZwckkhKyjlomcJhtU7coLU69Gj
4SJ7Gyd30BD3pUF+01oi/8pCjwZLrlce3U7hvlYAsWkC3qN5sc6zAjmowio2
Tol1njWMqxR+Jlkasc6zhpGgIWaoUC3WedYgsautKIhRif8BP2znMw==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw10AlMk3cUAPBSOQUsttBiqaVlYyKMbtAJCOz7v4xNkCMMGJKZlk3GlYki
deiMyAJaBRnQoIagBIHBgCy6SVEpIHI0Q6dMLOLahXXIWVGCHHKIwQl9e8mX
L1++937vECakRyfRaTSa9O2z9v4/evPdI0oYS+Ri2VqoyFhqs9B0cBG/75Kc
qGRTJlkkH4nXop+cPK6xmAhfwP86UgE3DO0OL4lRGyK5p3p1TlfmMH+EiNi6
G02usyQleS3GifzwXIO74gXWPyXVNZ6utfNTpPf+WjwnB2LLMi30k+i9IDOX
z5qkPZ/A/Bnyhcp6d637GPpzRBp7+redl4fJn+v184RlsqOGRAxhvwVycGj/
9N5vB4nJurdEnrWe0wh+0aK3TNwuvUeFxQ2gt0LeXGotbEjRoPealFYdTwmo
f0BS171Vcv+o02i02z2cjwZFWaXVdVQPzk8DfsyR4n/+7kbfBEYaR4vzpjpw
HjoUKkxE3X1t2G8DmOZ1CTqzmnE+UxB5er2R9zRhf1NQ2rq2bSy/hp4Z+E3/
FRX54Ap65vD+hEz1WNyAngWUWWbaakNq0bOEJ8GyEM+XVehZQol4ZXn5swr0
rKCH9jGvJbsMvY3gO1/vtXD4AnrWcJ1jE15qVYKeDWhKQwvokUW4rw3c/CRy
kSfLR88WLvDVGeIv5ehtgmPTZyI8xnPQY0BsdNVX3asn8H52MMD0cnbgHyPr
6cl2sIf+KCPELBN9O/CnPKxWzmeQ9XLxZvg1flrllXQA+20GnnqlJrw4FT0m
FKqzO4NzE9FjQp3yTiuDvw89JqyyA7NExRKchwUetE5f17449FhgsV3RXqmN
wX3toUnglhyb9znuYw9HtyX+5JcXhve0h4HAeHHY5C70HMB9U+WP5+yC0HOA
BMtQP+11gh4bvkvNlNyS+KPHhoIW1r/Vhh3osaGLa2hsEHujx4ETq7JJn0AR
ehyQKl9vGORux30d4aFk5xn943dxX0cICpTdcQ0T4r6OwJ6du5pxjYf32wKs
d6xy5fc46G2BD9r0aVkqFnpcyG5klMjj7NDjwqfmJXtuMqzR44Ky5VVywTfm
6DmBTX1RQnYOHT0naDOE/mBVvEoZPR4ElwUobnkvU8Z9eTA8yA30vj1PGT0e
5P6uSz1kO0MZ990K5fsrvhe+ekYZva0QHzkkFY+PU8b78aE5v3BS2DiMHh8s
bJKK9If0lPF+fOCH0R/WKLXoOYN8xn9m71I/es4Q/4dmNonVh/MJ4MORxNHb
HXcxXwBKncTzUY4afQGcf2Lw3+fbgfUCMMto1X19UIXzv81vd5f7tClxPiEw
55z8iwKuoicEdUzdySn1z+gJ4Yi+Pr2/uxI9ITylS8fKJ0vRE0LFYNq4JkiB
ngucNXC2maWfQs8FZNqe3VETmei5gELk02XeLaH+Ayyhav0=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox["\"J\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(eV\\), \
\\(g\\)]\\)/\\!\\(\\*SubscriptBox[\\(k\\), \\(B\\)]\\)\[Theta]\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {1, 
       FormBox["\"1.00\"", TraditionalForm]}, {2, 
       FormBox["\"2.00\"", TraditionalForm]}}, None}, {{{0, 
       FormBox["\"0.00\"", TraditionalForm]}, {9.2, 
       FormBox["\"9.20\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive["Label", 
    GrayLevel[0], Bold, 45],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->Directive[Bold, 
    GrayLevel[0], 35],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 9.2}, {0., 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.91358422206504*^9, 3.913584715016479*^9, {3.913586311241791*^9, 
   3.913586341342229*^9}, {3.913586372514402*^9, 3.913586383893537*^9}},
 CellLabel->"Out[70]=",ExpressionUUID->"f107c54d-3765-42bd-9702-1482fae3655b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check50.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check60.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check70.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data4", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check80.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"A1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data1", ",", "data2", ",", "data3", ",", "data4"}], "}"}], ",", 
    
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "9.20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "\"\<0.50\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\"\<1.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"9.20", ",", "\"\<9.20\>\""}], "}"}]}], "}"}], ",", 
         "None"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(eV\), \(g\)]\)/\!\(\*SubscriptBox[\(k\), \
\(B\)]\)\[Theta]\>\"", ",", "45", ",", "Bold", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<J\>\"", ",", "45", ",", "Bold", ",", "Black"}], "]"}]}], 
      "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"\"\<Label\>\"", ",", "Black", ",", "Bold", ",", "45"}], 
      "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue", ",", "Dashed"}], 
        "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red", ",", "Dashed"}], 
        "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", "\"\<(a)\>\"", "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", "Black", ",", "35"}], "]"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.9135863953201723`*^9, 3.913586417160831*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"d3b85dfd-1773-4aec-ba14-f5b2402a2d0d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], LineBox[CompressedData["
1:eJw10gtQTGEUAOC7K49qy9Zma2vzSsYji0njMfIfW1GUIS0GkzC7FU2MUdtk
xqOYHiQxBj0Im0caMtrYkpoeih7WtvTatLuXZQuFRoXx2Jx7Zu7cuXPP+f5z
/v+ftmtfqJRNUVTwv8fyZiL9SE7vBuVdkn3JEiriEVXray29j9/PyAHV+pw9
BQ/IIm9LtJIose25JQNK/N9B3tPlez39H5H/mp70iEoSt+aXYT5NjqYcihgc
U0EiZZYwkdIzJzTusZVYbyaa+oBTrP4q0txkiY8k7EJI1b7Z1egNELHsBfVH
WoP5X4iqav2CcEUtGeW9v5FwZb1VwNs6rB8kBbJz7DjPejK6nOw7EfHMbaWR
DegNkyduRdKuwmfojZDkpuIjZZ+fY78/yXRx9u2F3k3o/SIlx+LOeiQ0o/eb
DHnEL5FXtKBHgWJEkXuSpcZ8CjK1/skJCjX6LOgdka1LXP0S69mgE9w3pPW+
xP7HgHXq6cb8DA16VhAdNThVtaAVPStYubRP3Nzait5YmNdyr7QtXoveOCi/
93BII3iF3niYSkvCVI9foTcBKkz9Dcd3vEZvAtgc19WI2G3oWYPdbnpcsaIN
PRuobpySR61uR88Wfr+2j3Q2t6PHAT+uV785vQM9Dqx5l1cf49WJnh3sif/6
Jqu5Ez17mLlWrwqK7UJvIoRvl3sn2evQ44IorHPtzLs6zOeCeiP7gXtIN/pc
OMiJ8Anu68Z6B9gqL3bJSn2D6znAFV5+xNMZPeg5gtZBPlBZ2YOeI4QuVK8q
8NKj5wh9XNtt5xP06PFAki5TZNTo0ePBDJ7ph9TOgJ4TlAd+Ke2XGPD+OgEr
ZOf1wVwDek6wWCms9TEa8P5MAucqpTna04jeJOgQ+toslxnR40OjFZEEKYzo
8eFKNnd4co8RPT5sLm88sZhPo+cM0VTh16FAGj1nyPLz5xXF04Q16rlAkGlX
WtJlGj0XuNgd05tSSZOWUc8FNvmYNVfbGU8A2lk/tqR8YDwBBAgkdWWfGM8V
MuKk246aGM8VdJyuvVo1jf25woiHza0dhTTunxusKLqWGb2f8dyg3VN0p2EK
jfMKIVgwtEhdwswrhG4zp2HZXGZeIVTn8W84HGb2zx3kt+ZczbzJnIc75CSb
Qikxc76TYd6dTXnz63TkLwhwFE0=
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw10A1Q03UYB/ABixcB2WAwZG9sEb4gnAYhUd3vSV6kG2qO6MKT7FTGkIKr
a2ci4gtHVl5RJhRw6rAoAxWFIFgZIASjAJHXMYeMsY29ULwMUVRYsR6eu//9
73//3+/zPN+HfyBblOZIoVBS/3tW3quVOVouXJRdJ6UlK9VIWi7QNG5pN/G7
kxxwi3n4UUUtiQhfqX7ymLk3f/dMHf4fITJ3l13xsQ3kf01DKsX51DMyOZ6f
IFtDBI1h1FskXbxSBlLtZNRKsprwvomwFJzpLdPNpLtrpaaI8lDzrcqNt9Gb
IeohhkuCuBXPz5JS1XcODd+3oW8l2kVZUK3uD9Jjvz9PHKknzY+f68B+C6Tz
i6W4FImCONi9RySIc9F4qaoTvUUiipB8+OP0n+g9IQPGK2W7IrrQe0riahSS
o0e7icTuLZOOghvptKYenI8C6k2ZDicde3F+CrS6J1rLKnrRd4DJvJBXBhPu
4jyOEKIafyF46i72c4LNwsbgzwr7cD4qMGps3KXn+7E/FaISqf3HhvrRewYi
hRm5TjkD6DlDgbKx5SvOIHoukPhzfHlQyyB6rnCnRLhffmgIPVeoTN95ZI/r
MHpuIK9XFBqrhtFbA8X/CLPzdivRc4eHXC8r3apEzwOabaw1l4tHMK8HpBVs
vRoarULPE+4J2YraURV6a+FZKrwdfuoeel5wrWJPSlWQGvdHA2svrSxAoSb2
42IaxDF8509kjqJPg0+Wi3iqtfeJ/Xo4HXI7Dv6+vuY+9qNDqPB9UXryGHre
cG7h2xe/eTSGnjcU2mIHVDs16HmDtJkneueSBufxAc8d7GXVjAY9H0jLyyh/
bfs45mXAW/lt2sqvxzEPA+ach19d0o3jPhkgSgn2JpFa9Hyh4ddIadYZLXq+
wMoYTfpUqUXPD7J4RW9+vnECPT8wRJ1VH8mZQM8PBBH1s3F/TaDHBJmJsn2e
pUOPCbaLlz1OvKvDvP6wqXqGrv1Nh3n94UkUOeXvqce8/jB6TTTOTtXj/tbB
NtfN88arevTWwTllUrH0qR69ALD98kaxXGhALwB6OM2nr5ca0AuALYePZ8eb
DOixoHAx/yfptkn0WPD6hqK9oQWT6LEhOibUZ1/fJOZlQ1tCReTfXCN6bPCq
WIpWHDZiXg4k02Ju3qkzoseBK9Sq5TGbEffHhRvzTZXdCSb0uFDOlPod/NKE
++MC88GUMHXIhB4P5t77uDY9wIweD3aI28/77jPjfIGgmvqAjJSa8XwgsJ2D
vBYGzegHwg8NFnGmhwXvB8Jijs7c97IF5w+Es3XtFzakWXA+PiTJnFSS0xb0
+NAVVu+pLrSgxwd9rii3umDV40OY24Nj+uRVjw/Vs+3Hb+vM6AngpfXM81lz
q3kE0FsSu7+ndXWfApDK6S3iCQ35F1wYifM=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], LineBox[CompressedData["
1:eJw10g0slHEYAPDrQw5Hd4fDkda6PqwcUxNW/k/YfKUvqklm1Sj6NGllFgrJ
ujTjioi0UPp2TOrW5evy7ZyvO/cqRK5YGokSdXru2d69e/c+z+95nvf9rzpy
Zm/oYhqN5v3v0ty14ZhpU9ST/4RkZ2niFTFJExo/2/Icn+vJkIVnftybF2Tz
Jk3ICWT8NBjfU4rvFSTOLyZ6w5SI/Nc+kpBEZ2ZEUTnmD5LUutjEkaMV5FiY
JoaJwMN98x+bSqxXEwFbJuZNvybNTZoYJZ+DBbd0m8XojZMhJxUVU/QW878T
SZ77SlItIQv8pglSdtmOkyN6h/WTZAd3vvJCURVZaBc2RczOOwel3KlGb5oU
D9TPp96sQW+GHJfbRfkm1+K8v4nU/n5CbmwderPEMaXj3KEoKc4/R+hSviQ8
4j16NPBKGxotOVyP+TTgBEpzDQMb0F8EWaxVtbG7G7F+MVxyIBNqzybstwS8
bE699STN6C2FRwNVbqmOLegthZgvLg8KbVvR04H8yhMHvdlt6C2DNyrKrUDQ
hp4u8B+wGAq6jCxa8Oig0PePH7kiIy0LHh1s9TLojXMy9PRgbMPyhJiL7ejp
Q/HO/UvGJ9rRMwA/j2fvVp+Wo8cAjzY/CWNEjh4DxDzre/mHO9AzBJlsY5Bc
2YGeEXxY16QW+neitxzqAnInlY2duC8TIhmJodfduzCfCS23XcYzKrtwfyZM
7uMlK+27sZ4FfnxRqWthN/ZjQemvp4O53B702LBCWB3fIuhBjw0d/cHTefM9
6LGhvM88RXFGgZ4xZLaHfHLqU6BnDIdyorLP+ihxXxNwvbbVYa1IiZ4J8Mt+
zHzj9uL+JmAQ8DJq76Ve9Ezh1JjPLjHVi54pSCJq+q46qXA+DhTEDqtHBSo8
nxyYLOmS6lAqnI8DThVTwhoehefbDISPk0+OHaXQM4P09PVeRlkUeuZAN0hK
i66i0DOHwc762rV9FHrmEGnUv6ZZrfUsoP9hu6hkQOtZgB6/EFJrtR4Xgtd/
Kb57g8J9uRAecvF+pLPW48Ie3qNZsUSF+1rCrDCT5W2tQs8Stlg3TL/06UXP
CmYONPhu3ab9flYQGMg0jvuq/R9W0MranmTm3U3+AtB7BgY=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw10AtMU2cUB/BSHi0M5VWgQiktxMcWmTIcAxb3HR2wgISHUIdMCCNaxsTp
CCPhFYfbdGK2oQ4I4ObktQ0JUoR1hQBSFJWVZ3nIo9qWttB2QJ1zFSu4lR1O
cnNzc7/vd87/cNNOHjxGpVAoyf895vdGvSfxfy0hr4lUVphLRM5R+0sUdAF+
3yehiirrzGctZE+AuaQk993S01Orrfh/ihxWy/zfZgjJ/5qcMC3fqB0IEuH5
OVK448ZOktFB0vnm0pBd168W1tZ04n0tqdC5X07RdJMBibn+JJkXGrvozB70
DGSl8lGChIjx/GPSlZXi9DKjF/0npGDZ9Ftw2W0yuH7/b7KvorR36+072O8f
Ish4U5n3pI9YrHvPyJGIp+0vfO+ht0JC9EUuubz76JlI0H6aX9+5fvRekO7w
2aye9j/IR+veGtkVGRcWvSTB+Sjw8W4bK57PIM5Pgd+NUXvFh4bQtwAhVfpS
HDaM81DBb/ev9RHyYexnCcr8Huly3gjOZwXDE7GJAtdR7G8FZbc2/1XcPIqe
NRSw5K/nHZCiZwOk7vPEQo0UPRqkft3Bv1w0hh4dGjlCYwdrHD06sPxfjTYK
x9GzBaOHTUJ4/AR6dnC+ybamYWkCvVcgVhb4/bbiSfTsoZ6viOnc+gDz2oPU
fqcmq+cBepuAnu6dE5U8hd5mcA90YMeuTKHnADGfinK+Kp3G/TlCw4G000/9
Z8j6cb4jwLcpww2DM+g7wrxJNyk4PkvWrwc4AU22bGLayrCfE7AH+BJDvQw9
ZwhVprtFhT1EzxlGP+s3EtVD9JxBs29mZO6LRziPC3jFnfhuh7McPRcokS8X
j6TJMS8DyoRLdqabcszDgLarw0dvWitwnwy4sxhdQE9UoOcKLdX8NZvrCvRc
4a1CRq5oTYGeG9S304K3xyvRc4ODA6F+8b8o0XODGt54a8iaEj13EI5kl48l
zKHnDtt9b+13bJzDvEyQLRqzxy1VmJcJl+oYp6yOqDAvEzzsmI9zWlW4vy1g
2nY02WKTGr0tEOB4Qpt9TI2eB/RGny+/1qlGzwOafDPiEl016HkAPTWhLjNT
g54nJDmfNbSJNeh5gkpsGHNgzqPHgnQBz3A4cx7zsmCG2qnK6Z5HjwXl+Yfu
RjotYF4vKHE9uUf04QJ6XjB7qra9unkB98cGxXPFO8rVBfTYoI65cS0iQov7
Y4N1UmXvD5e06HnDT7yk/ItTWvS8IY8hbuvy0uF8HFBUy6avpOjwPAeU6sr6
rCod+hzwFYZ/A1Id3udA8+oHn/xopcf5ORDSNj10xk+P83EhsciWI4/Uo8eF
Ovni86X39ehxISg4MKUvSo8eFzxTL9JiPDc8Luwdcv/y3s869HzgbjXQjC0b
eXxAe2bg+OTZjX36QFUR78rygpz8CxJXjJ0=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox["\"J\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(eV\\), \
\\(g\\)]\\)/\\!\\(\\*SubscriptBox[\\(k\\), \\(B\\)]\\)\[Theta]\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
       FormBox["\"0.50\"", TraditionalForm]}, {1, 
       FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{0, 
       FormBox["\"0.00\"", TraditionalForm]}, {9.2, 
       FormBox["\"9.20\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive["Label", 
    GrayLevel[0], Bold, 45],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->Directive[Bold, 
    GrayLevel[0], 35],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 9.2}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.913586424419301*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"5780ebe6-7cf8-4bbe-8037-8d9c9be055df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check50.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check60.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"A1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data1", ",", "data2"}], "}"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "9.20"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\"\<1.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "\"\<2.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "\"\<-1.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"9.30", ",", "\"\<9.30\>\""}], "}"}]}], "}"}], ",", 
         "None"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(eV\), \(g\)]\)/\!\(\*SubscriptBox[\(k\), \
\(B\)]\)\[Theta]\>\"", ",", "45", ",", "Bold", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SubsuperscriptBox[\(J\), \(max\), \(c\)]\)\>\"", ",", "45",
          ",", "Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"\"\<Label\>\"", ",", "Black", ",", "Bold", ",", "45"}], 
      "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue", ",", "Dashed"}], 
        "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red", ",", "Dashed"}], 
        "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", "\"\<(a)\>\"", "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", "Black", ",", "35"}], "]"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.9135842693807983`*^9, 3.913584272419887*^9}, {
  3.913584764438025*^9, 3.9135847649552402`*^9}, {3.91358547405221*^9, 
  3.913585489384214*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"dc7c75de-5aba-4ac0-a97e-953e64361953"],

Cell[BoxData[
 TemplateBox[{
  "General", "obspkg", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"PlotLegends`\\\\\\\"\\\"}]\\) is now \
obsolete. The legacy version being loaded may conflict with current \
functionality. See the Compatibility Guide for updating information.\"", 2, 
   29, 1, 24962754045586514659, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.913585617715435*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"6fa456c8-6cb5-4f01-b251-5d5bb95bdb46"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[5], 
     Opacity[1], LineBox[CompressedData["
1:eJw10wlQjGEYB/BvV462LVubra0tRzKOrEwaxzDvYytJMkmLwSTHbgeDMWqb
zBAxEUmMQQdhc6Qho40tqdFJh7UtXZs9PpYtlDQSJmye/c9888473/P8nnfm
+96p2/dGSJgURYX9eyyrNemHc3rWKu6R7MuWKIlXbM0yW8kD3D8n+5XhOfEF
D8kCP0taSazI7vyifgW+7yAf6PJd3oGPyX9NT3TCkuRN+WVYT5OUtIPRg2Mq
SIzUEhMpPXtc7bGnEvvNRF0fdJrRV0Wamyz5RCIvhlXtnfUMvX4ikr6k/kiq
sf4rUVaF+0bJa8go7/eNRCnqbYLe1WL/ICmQnmcmeNeT0XHS70TINbeVxjSg
94M8dS+SdBU+R2+YpDYVHy778gLP+4tME2Xfme/XhN5vUnIk4ZxXUjN6I2TI
K3GRrKIFPQrkw/LcUwwV1lOQqQlMTZKr0GdAz7B0TXLwK+xngpb/wHCy5xWe
fwzYnjjTmJ+hRs8G4mIHpyh9W9GzgeWLe0XNra3ojYW5LfdL2xI16I2D8vuP
htT81+iNhym0OFL55DV6E6DC1NdwbOsb9CYA65i2WshsQ88W7HfQ44rlbeix
4Fnj5DwquB09Oxh54xDjYm5Hjw0BHJ8+c3oHemxY9T6vfrdPJ3r2EJ848Dar
uRM9B5gRqleG7OlCbyJEbZH5HXXQoscBYWRn6Ix7WqzngGod86FHWDf6HDjA
jvZf3duN/Y6wSVbsmnXiLc5zhKvc/Oi66Tr0nEDjKOuvrNSh5wQR81UrCnz0
6DlBL8du84UkPXpcEKdL5RnVevS4MJ1r+imxN6DnDOUrv5b2iQ3oOQMjbNuN
wVwDes6wUCGo8Tca0JsE/CqFOc7biN4k6BAsYy2VGtHjQaMNEYfIjejx4Go2
54enzogeDzaUNx5fyKPRcwEJVTgwtJJGzwWyAgK5RYk0eq4Qatp+8ugVGu+X
K1zq3t2TVkmj5wrh/mb1tXYa/28+aGb+3Jj20erxIYgvri37bPXc4GyCZHOK
yeq5gZbdtUujsnpuMOzFur210Oq5Aym6nhm3z+q5Q7u38G7DZJowRj0BBPOH
FqhKjOgJoNvMblgyx0haRj0B1OXxbjoeMqDnAbLbs69l3rJ+Dw/ISTVFUCId
ep4w7e76vHm1WvQ8YSdrVuyZug7yF3eIGms=
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[5], 
     Opacity[1], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJw10A1Q03UYB/ABixcB2WAwZG9sEb4gnAYhUd3vSV6kG2qO6MKT7FTGkIKr
a2ci4gtHVl5RJhRw6rAoAxWFIFgZIASjAJHXMYeMsY29ULwMUVRYsR6eu//9
73//3+/zPN+HfyBblOZIoVBS/3tW3quVOVouXJRdJ6UlK9VIWi7QNG5pN/G7
kxxwi3n4UUUtiQhfqX7ymLk3f/dMHf4fITJ3l13xsQ3kf01DKsX51DMyOZ6f
IFtDBI1h1FskXbxSBlLtZNRKsprwvomwFJzpLdPNpLtrpaaI8lDzrcqNt9Gb
IeohhkuCuBXPz5JS1XcODd+3oW8l2kVZUK3uD9Jjvz9PHKknzY+f68B+C6Tz
i6W4FImCONi9RySIc9F4qaoTvUUiipB8+OP0n+g9IQPGK2W7IrrQe0riahSS
o0e7icTuLZOOghvptKYenI8C6k2ZDicde3F+CrS6J1rLKnrRd4DJvJBXBhPu
4jyOEKIafyF46i72c4LNwsbgzwr7cD4qMGps3KXn+7E/FaISqf3HhvrRewYi
hRm5TjkD6DlDgbKx5SvOIHoukPhzfHlQyyB6rnCnRLhffmgIPVeoTN95ZI/r
MHpuIK9XFBqrhtFbA8X/CLPzdivRc4eHXC8r3apEzwOabaw1l4tHMK8HpBVs
vRoarULPE+4J2YraURV6a+FZKrwdfuoeel5wrWJPSlWQGvdHA2svrSxAoSb2
42IaxDF8509kjqJPg0+Wi3iqtfeJ/Xo4HXI7Dv6+vuY+9qNDqPB9UXryGHre
cG7h2xe/eTSGnjcU2mIHVDs16HmDtJkneueSBufxAc8d7GXVjAY9H0jLyyh/
bfs45mXAW/lt2sqvxzEPA+ach19d0o3jPhkgSgn2JpFa9Hyh4ddIadYZLXq+
wMoYTfpUqUXPD7J4RW9+vnECPT8wRJ1VH8mZQM8PBBH1s3F/TaDHBJmJsn2e
pUOPCbaLlz1OvKvDvP6wqXqGrv1Nh3n94UkUOeXvqce8/jB6TTTOTtXj/tbB
NtfN88arevTWwTllUrH0qR69ALD98kaxXGhALwB6OM2nr5ca0AuALYePZ8eb
DOixoHAx/yfptkn0WPD6hqK9oQWT6LEhOibUZ1/fJOZlQ1tCReTfXCN6bPCq
WIpWHDZiXg4k02Ju3qkzoseBK9Sq5TGbEffHhRvzTZXdCSb0uFDOlPod/NKE
++MC88GUMHXIhB4P5t77uDY9wIweD3aI28/77jPjfIGgmvqAjJSa8XwgsJ2D
vBYGzegHwg8NFnGmhwXvB8Jijs7c97IF5w+Es3XtFzakWXA+PiTJnFSS0xb0
+NAVVu+pLrSgxwd9rii3umDV40OY24Nj+uRVjw/Vs+3Hb+vM6AngpfXM81lz
q3kE0FsSu7+ndXWfApDK6S3iCQ35F1wYifM=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"\\!\\(\\*SubsuperscriptBox[\\(J\\), \\(max\\), \\(c\\)]\\)\"", 45, 
        Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(eV\\), \
\\(g\\)]\\)/\\!\\(\\*SubscriptBox[\\(k\\), \\(B\\)]\\)\[Theta]\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {1, 
       FormBox["\"1.00\"", TraditionalForm]}, {2, 
       FormBox["\"2.00\"", TraditionalForm]}}, None}, {{{-1, 
       FormBox["\"-1.00\"", TraditionalForm]}, {9.3, 
       FormBox["\"9.30\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive["Label", 
    GrayLevel[0], Bold, 45],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->Directive[Bold, 
    GrayLevel[0], 35],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 9.2}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9135842730539293`*^9, 3.913584718984253*^9, 
  3.913584765774168*^9, 3.913585490551092*^9, 3.913585618344919*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"3dbd81a1-fad6-4284-8276-6befbcc4087a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check11.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check12.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check13.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data4", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check14.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"A1", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data1", ",", "data2", ",", "data3", ",", "data4"}], "}"}], ",", 
    
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "\"\<0.50\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\"\<1.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.0", ",", "\"\<1.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.0\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "\"\<2.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<P/\!\(\*SubsuperscriptBox[\(P\), \(max\), \(Wh\)]\)\>\"", ",", 
         "45", ",", "Bold", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\[Eta]/\!\(\*SubscriptBox[\(\[Eta]\), \(c\)]\)\>\"", ",", "45", 
         ",", "Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"\"\<Label\>\"", ",", "Black", ",", "Bold", ",", "45"}], 
      "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue", ",", 
         RowBox[{"AbsoluteDashing", "[", "15", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red", ",", 
         RowBox[{"AbsoluteDashing", "[", "15", "]"}]}], "]"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", "\"\<(a)\>\"", "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", "Black", ",", "35"}], "]"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.913590977493764*^9, 3.913590979563635*^9}, {
  3.9135910207547083`*^9, 3.9135910228877068`*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"3a8324b8-3986-407e-861d-6b27c23fca80"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], LineBox[CompressedData["
1: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
cNM/HkRScPafzw8Owv/9bf8DEVoGeQ==
      "]], LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAAPWHK+THQbwAAAAAAAAAAPqYBPwm
AJs8I4lgIbGuRT0DcZPOivGaPKDg5ngVPEY97eZPJetMlTyyW0YoVRBCPfq2
rkClSJM8EDpVyz7OQD3NhKXNu+uPPG0PkLx5ljw9l/hsO5TIkDx8kXbfpuQ+
PQHyxVCcF4o8hh9Ol3utOD0RsKIpppWLPHUnDa9yzzo9L5Pwdev9gzyH4aND
yvczPQ951rtgJIQ8Jef/FpWsND3OnX6ocoh5PEDWyoiV7io9TCsDerTLfTz3
/YaNByYwPTIvy0/D0Hg8wATfiXSkKz10O+/hqfx8PGlTrcBDlzA9Cv45sD+w
cjzP7LPw/vslPQA0ahF+Jmo8aKopNdicHz0n3wvXYpJmPGVKO75/Chw9c9H7
+UUwXDwloKihUP4RPdBrpM5QSms8il8h9NDmIT0lmtqGwG1YPHt6hDmwdxA9
RtNwqnS1WjxDR4uYl4ASPUJlcWWCF2M8f4QrC8YuGz3nH5KaqA9kPCjkF8s8
Wh09QKadpGrp7TsAAAAAAAAAAAbfs3A=
      "]], 
     LineBox[{{-1.7482891887326614`*^-20, 0.}, {8.75617094308391*^-19, 
      2.770896726759408*^-15}, {1.8611120547135377`*^-20, 0.}}], 
     LineBox[{{-1.8101496134619278`*^-20, 0.}, {8.286186057251568*^-19, 
      2.769161272097717*^-15}, {2.0327725772788658`*^-20, 0.}}], 
     LineBox[{{-9.916216052543838*^-21, 0.}, {3.5931450590058615`*^-19, 
      1.6208787031326511`*^-15}, {4.3016843872716995`*^-18, 
      1.9941518741444643`*^-14}, {3.2918177976542563`*^-18, 
      1.5681926415185916`*^-14}, {2.571634854154754*^-18, 
      1.25897432460486*^-14}, {5.682723202713798*^-19, 
      2.8589596897697117`*^-15}, {1.2256450352414521`*^-20, 0.}}], 
     LineBox[{{-1.653717032331811*^-21, 0.}, {6.150659039751249*^-20, 
      3.2678426414989453`*^-16}, {2.94082493890027*^-18, 
      1.6056565268748606`*^-14}, {2.1276721593488602`*^-20, 0.}}], 
     LineBox[{{-3.454015678810442*^-21, 0.}, {2.0526952653998908`*^-19, 
      1.24992523524158*^-15}, {5.0441071184035665`*^-21, 0.}}], 
     LineBox[{{-9.76643279028455*^-21, 0.}, {4.268110095507568*^-19, 
      2.7446265997601575`*^-15}, {2.0636012230673944`*^-18, 
      1.3636957733486757`*^-14}, {1.9045716188833066`*^-18, 
      1.2934007202113946`*^-14}, {2.208705563690822*^-21, 0.}}], 
     LineBox[{{-1.960232261697936*^-21, 0.}, {5.570736413474629*^-19, 
      3.9951820161278644`*^-15}, {6.460830547693344*^-21, 0.}}], 
     LineBox[{{-8.095089499997252*^-21, 0.}, {3.3715216140432984`*^-19, 
      2.9265688938527493`*^-15}, {8.138112651965307*^-21, 0.}}], 
     LineBox[{{-3.7462980439042486`*^-20, 0.}, {1.374105503397344*^-18, 
      1.7003067987916326`*^-14}, {1.5741929698135102`*^-20, 0.}}], 
     LineBox[{{-3.491696377573823*^-21, 0.}, {1.4531101341567823`*^-19, 
      1.898865455521903*^-15}, {3.3196736217550154`*^-21, 0.}}], 
     LineBox[{{-1.1357285820444092`*^-20, 0.}, {8.746979495632542*^-19, 
      1.2070971889582269`*^-14}, {1.2503967218207833`*^-20, 0.}}], 
     LineBox[{{-7.565903156287823*^-21, 0.}, {3.8619802593243415`*^-19, 
      5.628370324985521*^-15}, {6.7534713979236926`*^-21, 0.}}], 
     LineBox[{{-5.727009838460788*^-21, 0.}, {1.032713901853706*^-18, 
      1.923760525842252*^-14}, {1.0558873892042578`*^-19, 
      2.0213097424239236`*^-15}, {2.4561153978407414`*^-21, 0.}}], 
     LineBox[{{-4.2268521792933594`*^-21, 0.}, {2.0101754120397766`*^-19, 
      4.063851154952539*^-15}, {4.379983284547011*^-21, 0.}}], 
     LineBox[{{-3.641729175387087*^-21, 0.}, {1.4965374234117773`*^-19, 
      3.2834037867341697`*^-15}, {3.55917482299323*^-21, 0.}}], 
     LineBox[{{-6.143876632778049*^-21, 0.}, {2.7980304919432976`*^-19, 
      6.4830258641146645`*^-15}, {6.067812299710343*^-21, 0.}}], 
     LineBox[{{-4.0988776747634885`*^-21, 0.}, {2.56435111294875*^-19, 
      8.944737002833803*^-15}, {2.0915966757014688`*^-21, 0.}}], 
     LineBox[{{-2.7199927629551517`*^-21, 0.}, {1.2916534525838065`*^-19, 
      4.8895523740690356`*^-15}, {1.5578858175750825`*^-21, 0.}}], 
     LineBox[{{-8.804605302521819*^-22, 0.}, {4.686049141949669*^-20, 
      1.873348645573019*^-15}, {1.132645592325979*^-21, 0.}}], 
     LineBox[{{-6.229604105134879*^-22, 0.}, {2.4739127899138174`*^-20, 
      1.1029949721012563`*^-15}, {4.623724604727093*^-19, 
      2.118485291303688*^-14}, {2.0174683530566962`*^-19, 
      9.499146231387844*^-15}, {3.2306399699431755`*^-21, 0.}}], 
     LineBox[{{-2.338298257710945*^-22, 0.}, {8.719957141933382*^-21, 
      4.3359163332087097`*^-16}, {1.987159157821241*^-20, 
      1.0154149366498252`*^-15}, {3.3047058964009*^-19, 
      1.735353929685027*^-14}, {4.51115591204725*^-21, 0.}}], 
     LineBox[{{-3.0184386202189397`*^-21, 0.}, {1.4505258236358784`*^-19, 
      8.971123906362788*^-15}, {2.7626121579623922`*^-21, 0.}}], 
     LineBox[{{-1.2953435712075025`*^-21, 0.}, {4.694663510352682*^-20, 
      4.371106191800863*^-15}, {1.0257583751923687`*^-21, 0.}}], 
     LineBox[{{-8.594065442504543*^-22, 0.}, {1.7065481979592108`*^-19, 
      1.8714217995115532`*^-14}, {1.4120873409366091`*^-19, 
      1.5913256413110075`*^-14}, {1.965414150201985*^-21, 
      2.2761241958676056`*^-16}, {1.9695958824364572`*^-20, 
      2.3440311632025344`*^-15}, {5.013790282290535*^-20, 
      6.131924442092747*^-15}, {1.0322333283604907`*^-21, 0.}}], 
     LineBox[{{-9.13415649115652*^-22, 0.}, {4.1402042998463564`*^-20, 
      5.647157695270026*^-15}, {1.8351113737758278`*^-20, 
      2.572260505488557*^-15}, {3.0940650814742276`*^-22, 0.}}], 
     LineBox[{{-6.481355384528116*^-22, 0.}, {1.1938176452260924`*^-19, 
      1.7671738497143066`*^-14}, {9.509259101190029*^-20, 
      1.4465463175497807`*^-14}, {1.5455200251783569`*^-21, 0.}}], 
     LineBox[{{-1.4310450896784535`*^-21, 0.}, {8.304251140504489*^-20, 
      1.3340585796295719`*^-14}, {5.897747874210365*^-20, 
      9.736548014225503*^-15}, {1.022602859157265*^-21, 0.}}], 
     LineBox[{{-6.580314943139763*^-22, 0.}, {7.875296235244597*^-20, 
      2.0669988850529527`*^-14}, {8.72321930981597*^-22, 0.}}], 
     LineBox[{{-2.575771681945772*^-22, 0.}, {1.1340759810539655`*^-20, 
      3.1434334454276266`*^-15}, {3.449594554860897*^-20, 
      9.82595018578274*^-15}, {5.900342408151528*^-22, 0.}}], 
     LineBox[{{-9.050374365445514*^-22, 0.}, {7.686860193406997*^-20, 
      2.3123004403622436`*^-14}, {1.465134574517875*^-20, 
      4.529155008501277*^-15}, {1.097702056883537*^-20, 
      3.4871331744936923`*^-15}, {2.0743502232666786`*^-22, 0.}}], 
     LineBox[{{-6.243913992609773*^-22, 0.}, {4.5728914676848473`*^-20, 
      1.6201398472500565`*^-14}, {5.374400720389193*^-20, 
      1.9567531572101456`*^-14}, {3.419118980080734*^-22, 0.}}], 
     LineBox[{{-5.0091164400405703`*^-23, 0.}, {2.3803151885943553`*^-21, 
      9.932587814830014*^-16}, {1.0050200142293426`*^-19, 
      4.3097000606808675`*^-14}, {8.539313232725525*^-22, 0.}}], 
     LineBox[{{-7.304650267430084*^-22, 0.}, {6.628996020833452*^-20, 
      3.001987460595986*^-14}, {2.7939827623241253`*^-22, 0.}}], 
     LineBox[{{-1.9426954588971379`*^-22, 0.}, {1.768120023379581*^-20, 
      8.455935051472915*^-15}, {4.276376952483824*^-22, 0.}}], 
     LineBox[{{-1.2021822663901072`*^-22, 0.}, {1.6617367553346058`*^-20, 
      1.1964043705456804`*^-14}, {6.664949378607826*^-20, 
      4.931249904241652*^-14}, {2.90760023995094*^-20, 
      2.2107480214187726`*^-14}, {9.25416102246403*^-24, 0.}}], 
     LineBox[{{-2.527619477481522*^-22, 0.}, {4.374328987580829*^-20, 
      3.609517637780852*^-14}, {3.4060209049776945`*^-22, 
      2.888214388518413*^-16}, {1.683420343761668*^-20, 
      1.4669627351265003`*^-14}, {2.9779998026094844`*^-22, 0.}}], 
     LineBox[{{-3.016678469206873*^-22, 0.}, {1.5783425602486417`*^-20, 
      1.576339438014834*^-14}, {2.694966836808758*^-22, 0.}}], 
     LineBox[{{-1.6700438786606327`*^-22, 0.}, {1.9966935073158374`*^-20, 
      2.1641783995681568`*^-14}, {2.023435684955288*^-20, 
      2.2538003925854242`*^-14}, {3.875412554679912*^-22, 0.}}], 
     LineBox[{{-1.511942828268353*^-22, 0.}, {1.0811450519004706`*^-20, 
      1.3069025026995278`*^-14}, {2.2806199618430284`*^-22, 0.}}], 
     LineBox[{{-1.8263825608490012`*^-22, 0.}, {8.956747729710374*^-21, 
      1.8178290722588363`*^-14}, {1.686075080125589*^-20, 
      3.516608374187339*^-14}, {1.3029437614437404`*^-20, 
      2.79265419008357*^-14}, {2.283291333064775*^-22, 0.}}], 
     LineBox[{{-5.82883566826005*^-24, 0.}, {1.9198906555216017`*^-21, 
      4.84656843201787*^-15}, {1.8193947680890508`*^-20, 
      4.719860795432564*^-14}, {1.34116016428643*^-22, 0.}}], 
     LineBox[{{-1.139755223401564*^-22, 0.}, {1.1264619614089178`*^-20, 
      3.086082755352752*^-14}, {9.451624140245421*^-24, 0.}}], 
     LineBox[{{-1.745913209234391*^-22, 0.}, {9.482705101501128*^-21, 
      2.8193984993914746`*^-14}, {1.393980440361344*^-20, 
      4.259173127160714*^-14}, {9.76204481476388*^-21, 
      3.065164626700353*^-14}, {1.4175912976010034`*^-22, 0.}}], 
     LineBox[{{-1.628480632472238*^-23, 0.}, {1.5111492968686242`*^-21, 
      5.149363664754146*^-15}, {3.3356863782713716`*^-23, 0.}}], 
     LineBox[{{-6.268088913036004*^-23, 0.}, {6.1822043288993885`*^-21, 
      3.5369835548164666`*^-14}, {4.653745260438369*^-21, 
      2.7361297435485298`*^-14}, {4.624369959303715*^-23, 0.}}], 
     LineBox[{{-4.500245726690165*^-23, 0.}, {2.1286062506522665`*^-21, 
      1.358196469456796*^-14}, {6.3961685392371185`*^-21, 
      4.194030240989059*^-14}, {7.700764453086616*^-21, 
      5.18907434505726*^-14}, {7.875377782085961*^-21, 
      5.4534563842306864`*^-14}, {1.114522083810561*^-22, 0.}}], 
     LineBox[{{-7.035452727526824*^-23, 0.}, {3.674462675079542*^-21, 
      2.687095350780543*^-14}, {6.393390673833669*^-23, 0.}}], 
     LineBox[{{-2.172751297786369*^-23, 0.}, {5.374179316958552*^-21, 
      4.2651526040296905`*^-14}, {2.3489462153008595`*^-23, 0.}}], 
     LineBox[{{-2.3552777014392893`*^-23, 0.}, {6.218928432061656*^-21, 
      5.2122683825785035`*^-14}, {7.492452682438015*^-23, 0.}}], 
     LineBox[{{-2.3431103371227752`*^-23, 0.}, {1.8886009562200216`*^-21, 
      3.045908763930391*^-14}, {4.8139578766715905`*^-22, 
      7.97853888226389*^-15}, {1.2840021077115878`*^-21, 
      2.1869115161067147`*^-14}, {1.9656755084666392`*^-22, 
      3.4405010625754415`*^-15}, {4.740940396747934*^-24, 0.}}], 
     LineBox[{{-2.4894163217123392`*^-23, 0.}, {2.0402671571990394`*^-21, 
      3.771253255493998*^-14}, {3.4525074105066694`*^-23, 0.}}], 
     LineBox[{{-2.639017771073572*^-23, 0.}, {1.3471250067963481`*^-21, 
      2.629634247270937*^-14}, {4.2197598619795402`*^-22, 
      8.464856123072511*^-15}, {9.882519960831891*^-24, 0.}}], 
     LineBox[{{-1.7519820084433608`*^-23, 0.}, {8.187505017265961*^-22, 
      1.831728077628104*^-14}, {1.216717986575248*^-23, 0.}}], 
     LineBox[{{-1.2171197392417062`*^-23, 0.}, {1.7928654238770712`*^-21, 
      4.3530163640202075`*^-14}, {1.1124561925796375`*^-23, 0.}}], 
     LineBox[{{-5.891944915427258*^-24, 0.}, {3.6663337365735963`*^-22, 
      9.400769253858421*^-15}, {9.00165293342205*^-24, 0.}}], 
     LineBox[{{-1.3652994761075242`*^-23, 0.}, {8.178684175833871*^-22, 
      3.244330983144456*^-14}, {1.3067256703499954`*^-23, 0.}}], 
     LineBox[{{-5.4434372903427186`*^-24, 0.}, {2.588590262487604*^-22, 
      1.1768659664352483`*^-14}, {5.900866096241312*^-24, 0.}}], 
     LineBox[{{-2.2008443052119775`*^-24, 0.}, {1.096632734291609*^-22, 
      5.5603544326175214`*^-15}, {2.58598039658659*^-24, 0.}}], 
     LineBox[{{-4.760050851006291*^-24, 0.}, {2.277083880802499*^-22, 
      1.2876501386154667`*^-14}, {4.695874599863516*^-24, 0.}}], 
     LineBox[{{-3.3492673541837395`*^-24, 0.}, {1.4615154159480718`*^-22, 
      8.727925698466532*^-15}, {2.3358049727062123`*^-24, 0.}}], 
     LineBox[{{-2.5959769201699773`*^-24, 0.}, {1.5639678556926432`*^-22, 
      1.0704279418877674`*^-14}, {3.698582267478631*^-24, 0.}}], 
     LineBox[{{-4.952849097666315*^-24, 0.}, {4.2196419444812295`*^-22, 
      4.591556460472979*^-14}, {5.954169453934502*^-24, 0.}}], 
     LineBox[{{-6.066365920682432*^-24, 0.}, {4.369746836108153*^-22, 
      5.02145291541478*^-14}, {4.943613924751802*^-22, 
      5.837972703160291*^-14}, {6.681110772373565*^-24, 0.}}], 
     LineBox[{{-4.4972919918972434`*^-24, 0.}, {2.47349461669037*^-22, 
      3.2576623039793975`*^-14}, {2.322086506997699*^-22, 
      3.142806393298057*^-14}, {3.370480216667011*^-24, 0.}}], 
     LineBox[{{-1.2750495412549054`*^-24, 0.}, {1.02532480713122*^-22, 
      1.5060316027678372`*^-14}, {1.798088732263202*^-24, 0.}}], 
     LineBox[{{-2.7277748255713*^-24, 0.}, {1.3927128527777695`*^-22, 
      2.2200738957427344`*^-14}, {4.087643259196681*^-23, 
      6.696120073456817*^-15}, {9.84325468878516*^-25, 0.}}], 
     LineBox[{{-3.965917101973231*^-24, 0.}, {2.103280634807244*^-22, 
      3.842598905905507*^-14}, {4.028917502418397*^-24, 0.}}], 
     LineBox[{{-4.6244956928658126`*^-24, 0.}, {1.6817097539195041`*^-22, 
      4.8846515624363026`*^-14}, {2.1984723436229936`*^-25, 0.}}], 
     LineBox[{{-2.1640846945002174`*^-25, 0.}, {2.082894690164191*^-22, 
      6.389084753265861*^-14}, {2.731193865639727*^-23, 
      8.609308289029205*^-15}, {4.959430465009373*^-25, 0.}}], 
     LineBox[{{-1.0419564537237179`*^-24, 0.}, {1.470850810451711*^-22, 
      5.0317324478743246`*^-14}, {2.8712354910028573`*^-23, 
      1.0093972675737856`*^-14}, {1.0371839383899189`*^-22, 
      3.747084516725927*^-14}, {1.7454975053867476`*^-22, 
      6.48039284035566*^-14}, {4.466429302371324*^-25, 0.}}], 
     LineBox[{{-1.0982432260606463`*^-24, 0.}, {9.848959505674741*^-23, 
      4.4257126977831385`*^-14}, {7.491099586202454*^-23, 
      3.4592570228407883`*^-14}, {2.817868068879411*^-25, 0.}}], 
     LineBox[{{-6.550304056364922*^-25, 0.}, {5.90947371275409*^-23, 
      3.0434323011198645`*^-14}, {5.284708805141693*^-25, 0.}}], 
     LineBox[{{-2.694477054328864*^-24, 0.}, {9.844712433874105*^-23, 
      7.632798539328217*^-14}, {1.8355752342162602`*^-25, 0.}}], 
     LineBox[{{-1.6916765640524551`*^-25, 0.}, {5.161243089028963*^-23, 
      4.2259452792754135`*^-14}, {9.556891644923313*^-23, 
      8.041380488756245*^-14}, {7.147083809083059*^-25, 0.}}], 
     LineBox[{{-1.1320050662201902`*^-25, 0.}, {5.2051771970807734`*^-24, 
      4.75316240276228*^-15}, {9.618196080883848*^-26, 0.}}], 
     LineBox[{{-1.7699688450574386`*^-25, 0.}, {1.5701097749120244`*^-23, 
      1.5141396838183383`*^-14}, {3.3950387861937524`*^-25, 0.}}], 
     LineBox[{{-5.855486970547092*^-25, 0.}, {5.0297172915896667`*^-23, 
      5.409499431369334*^-14}, {6.089239194161776*^-23, 
      6.730090952614812*^-14}, {6.49143467099711*^-25, 0.}}], 
     LineBox[{{-1.9156723691530746`*^-25, 0.}, {2.984384684523792*^-23, 
      3.884893089246311*^-14}, {5.795444603946924*^-25, 0.}}], 
     LineBox[{{-1.0044335871807738`*^-25, 0.}, {9.343557961399064*^-24, 
      2.098574794354178*^-14}, {1.2334796578344325`*^-25, 0.}}], 
     LineBox[{{-1.7924054492718552`*^-25, 0.}, {2.707630784591967*^-23, 
      6.422297232269608*^-14}, {4.43288119191376*^-24, 
      1.080516603779925*^-14}, {1.05267017740918*^-25, 0.}}], 
     LineBox[{{-2.8308273651282365`*^-26, 0.}, {1.1991852252468684`*^-24, 
      3.2599369619999537`*^-15}, {1.6894361576183535`*^-23, 
      4.719642603333366*^-14}, {2.7743487950768965`*^-25, 0.}}], 
     LineBox[{{-2.3331098232758245`*^-25, 0.}, {1.2722430276635771`*^-23, 
      3.753411648155556*^-14}, {3.4425783922462457`*^-25, 
      1.0437208311044007`*^-15}, {9.136023299850586*^-27, 0.}}], 
     LineBox[{{-1.0424995170734533`*^-25, 0.}, {4.48596958942171*^-24, 
      1.4363015494198147`*^-14}, {1.6674950802540707`*^-23, 
      5.48653628656686*^-14}, {1.8527699364361652`*^-25, 0.}}], 
     LineBox[{{-7.235957335586495*^-26, 0.}, {3.423799616099378*^-24, 
      1.1896818248205881`*^-14}, {6.934161459115214*^-25, 
      2.476058108615541*^-15}, {1.8037928530272938`*^-26, 0.}}], 
     LineBox[{{-4.841736291039715*^-27, 0.}, {1.7743775936310723`*^-25, 
      1.093203029476358*^-15}, {4.6765874673304426`*^-27, 0.}}], 
     LineBox[{{-6.460541781780689*^-26, 0.}, {3.2872009118851555`*^-24, 
      2.1387982519164525`*^-14}, {1.942177814257623*^-26, 0.}}], 
     LineBox[{{-2.214484401075778*^-26, 0.}, {9.358361456858011*^-24, 
      6.430313947822362*^-14}, {5.0999178184515136`*^-26, 0.}}], 
     LineBox[{{-2.5583500886105592`*^-26, 0.}, {8.84444088379473*^-24, 
      6.77766852478643*^-14}, {8.307374515459447*^-26, 0.}}], 
     LineBox[{{-8.547709268436381*^-26, 0.}, {9.916249049516065*^-24, 
      8.0250206226382*^-14}, {3.795820421818369*^-24, 
      3.1568124768075167`*^-14}, {4.439821003386935*^-24, 
      3.794486244171149*^-14}, {7.602526135007952*^-26, 0.}}], 
     LineBox[{{-7.422089152398548*^-26, 0.}, {4.2256960636585785`*^-24, 
      3.8139462495784833`*^-14}, {5.371856446431684*^-26, 0.}}], 
     LineBox[{{-8.960340877011762*^-26, 0.}, {3.2532978365159804`*^-24, 
      5.206338843690118*^-14}, {1.0656628964856297`*^-26, 0.}}], 
     LineBox[{{-2.901187303689607*^-26, 0.}, {1.338246059215684*^-24, 
      2.324222833993056*^-14}, {2.7650954337300783`*^-26, 0.}}], 
     LineBox[{{-4.380960386955535*^-26, 0.}, {2.546514969444006*^-24, 
      4.6706445104741164`*^-14}, {3.136047285189856*^-26, 0.}}], 
     LineBox[{{-1.5064787935973319`*^-26, 0.}, {7.440543096883345*^-25, 
      1.4411991813021866`*^-14}, {1.5358779026996023`*^-26, 0.}}], 
     LineBox[{{-2.0250395925836983`*^-26, 0.}, {1.8485984594679443`*^-24, 
      3.9933698703155267`*^-14}, {1.7005293949779588`*^-26, 0.}}], 
     LineBox[{{-3.2238782650410145`*^-26, 0.}, {2.7882128464247066`*^-24, 
      6.536662449807553*^-14}, {6.567647330166103*^-25, 
      1.582283698647842*^-14}, {9.171745109871249*^-27, 0.}}], 
     LineBox[{{-4.7158948274085736`*^-26, 0.}, {1.713491040137017*^-24, 
      7.521995285266115*^-14}, {1.0819313319047921`*^-24, 
      4.8808483235954056`*^-14}, {1.3598669591465291`*^-24, 
      6.30429360123616*^-14}, {1.2854896948300094`*^-27, 0.}}], 
     LineBox[{{-1.2377648021892086`*^-27, 0.}, {9.888990199257177*^-25, 
      4.8415090204938494`*^-14}, {1.7125758955748694`*^-26, 0.}}], 
     LineBox[{{-1.8586878443242093`*^-26, 0.}, {1.646844204088839*^-24, 
      8.750129880949983*^-14}, {3.9965609248953027`*^-25, 
      2.1821912823203515`*^-14}, {1.3836004080084061`*^-24, 
      7.763569677015727*^-14}, {7.5245146487108225`*^-25, 
      4.338840253469201*^-14}, {3.0372688958874798`*^-25, 
      1.799794027234701*^-14}, {3.686223166615177*^-27, 0.}}], 
     LineBox[{{-8.15975962368353*^-27, 0.}, {6.65734566525841*^-25, 
      4.2812822039624767`*^-14}, {1.1356436598834755`*^-26, 0.}}], 
     LineBox[{{-4.503058127315125*^-27, 0.}, {4.424155424655091*^-25, 
      3.0877086120245864`*^-14}, {9.10366891012292*^-27, 0.}}], 
     LineBox[{{-1.0905093841920035`*^-26, 0.}, {5.551310797105268*^-25, 
      4.0915726397111775`*^-14}, {1.0971948545992457`*^-26, 0.}}], 
     LineBox[{{-4.045252043917468*^-27, 0.}, {1.4650036809900965`*^-25, 
      1.7166752806004454`*^-14}, {3.0226984888041648`*^-27, 0.}}], 
     LineBox[{{-4.4957264907053325`*^-27, 0.}, {2.5260577772462924`*^-25, 
      3.1259462581839324`*^-14}, {2.0342443423099326`*^-25, 
      2.5869363262539254`*^-14}, {3.52484904986875*^-27, 0.}}], 
     LineBox[{{-5.161337178931022*^-27, 0.}, {4.0200064393896857`*^-25, 
      5.398811461232243*^-14}, {7.258768258830454*^-27, 0.}}], 
     LineBox[{{-1.1966995894130305`*^-27, 0.}, {5.471271423759074*^-26, 
      8.421348641949397*^-15}, {2.1414739721321786`*^-25, 
      3.3872759801729833`*^-14}, {2.729693272266434*^-25, 
      4.4370674075202706`*^-14}, {6.317008838085304*^-26, 
      1.0552079550588788`*^-14}, {1.109537850317171*^-27, 0.}}], 
     LineBox[{{-4.118793044884179*^-27, 0.}, {2.3443759769706275`*^-25, 
      4.2499813032781535`*^-14}, {1.542028118299932*^-25, 
      2.872740816283939*^-14}, {3.2703628452098795`*^-27, 0.}}], 
     LineBox[{{-7.979822895563619*^-28, 0.}, {1.0208788771685245`*^-25, 
      2.1210745573843108`*^-14}, {2.4748602932323445`*^-27, 0.}}]}, 
    {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1: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
fls4ygjedyiJqHxUzPO6S+FvjSkSUw==
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], LineBox[CompressedData["
1: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
t8OydOtq/7NIECnl559c27E9QWrqCGskRI319Z6btKPUz69jW2IE4pN/pRqp
tcNwOPa29/EInGb4mnVOvB0xCokRPq/C0T5vX0T1XzuM2l2TqITCsbyflrr7
QDsKKKd/f60Ng1k8f3PG5naMylBLcSuHoUL3UCr91zZcqixzahgPxW/VA2kt
5W3oHRAuyHAMRWP4GnN0RBuC3C0UGhlDoX1ut77Z/XXd13H5tjf9CTjNIhjk
r7ThuX6J2GOxJ/hx0MmLsLYhearAgPVTCLL6QyC41IpwZhXfcucQxC87vSKt
rTjgObJH/3AIotQ9xBRSW7FX6GDepqpg/Kr5fd/KuRUerNpcEQbBCGuejU9S
acWqSrbndoZgdK0cFf/E3YpjdDRT9cZB+HVJuuH05lak0InX7Xv3GAfNmKMe
DbfAdbDy3T+Wx7h3IOLgQlELDNv2a9+1DMTcxicVZsEt2JW95kI6ApBzhGpy
1bAFdgb3tK3OBSA51Zs6WrQFI6+Z/Rai/BHS+85Ecn8LenWqJnKo/PFI48vj
zfPNGN49URxp6ofnujQplKZmGEX+5x015Iv9Q59MypObYdFYwfNc1heHU7q3
Fj5shumXzG0vqh9B8s8qVaVKMwqdtcQjLz7CuK/sreGzzeg93fhRt9AHF3cY
lTBtbYbZloM/f53zwWMuZxO1z01Y8Tbtlcn3xkGBwdbXpU3421EGBQFvGO88
dIEjvAkUGTHWX2VeaN6lQZtxvwn1f39k8kh44QSDp5/E1SbwM67cnW3zhGyK
88HlI034UJ6wm+umJ553MDK9W30P2qG2ktYpDxg/GC191vMejn7f4jqdPZBz
1dgsNPs9Ns77S3EyeyC9Z+VBgu97UCpuudWlu8O/PIOvVu89OKmqpeMuu+Oi
xZ0xKvIewnRfxpM/uIG5pm5IZe97eO1s6Wh1dMOGoCCDmrlG3GIWq2Dc74bk
TaxN0i2N+Hvob/StUld8ZxyQ+p7WCHWjHeU52q7Y2b706Ll7I068KZP+vdEV
38ounbW92YixD7c/3FRxwX6Hntnbgo2YH1n8/viFM4pGU1aNmBtxMiD9rcXf
h2A5dyzEf7oBw78USudUH0J1Y/lifWMDmqPPvfqb/wASUnX3Dqc04PHU7mr3
3Q/gbKfO98S1AZ6Mqj4mDk5QYjQLYtNqQFb1pa/pnxxxZ3au9L1AAzYfe3SS
85ojjv3bvhjM3IDF51Qr/cUOOP1sr4vVz3oMRvDdeMHpgNy2kUDLpnoIRV9y
835mj4Bb6tqP0+pxIq/vot4ue1zL6OGs96hHT8cJF+7HdrBh0jt5SKcetkt7
4vq32eFZ3h6LYOF69BXbmSn42aJs30DNkX31GKmKvBlAb4tTO+s82xfr8Frk
y377EBuwXKHSe9ZZB0FbNfbN+2ywOtXk/ii7Dn2cvNdOPbdGnMnFnU8C6hCv
x5jfe9YaJLUEJUZ1iD7a37BabgWG5bwLVJJ1cNfzvRgoZ4XCZXueuxx1+D6S
tNF51BKnztyRn6KqA+v+Eq1KR0usWTXXBQ/XgnWYuVaa2RIno8fLlN7W4kyM
3RrDKwsYev67Kfi0Ft/Lyqn/SVvgUPTNrosOtWD8mcay87s5LHdvl7ilWotT
xyLzL/qbw9xWYiDpfC1sOG6Gm3ObQ8/L+A3trlpEye3QuJZmhgD+BVr/uRqM
aVkqJizeR8AJ269nO2pQwLQ2+l7yPr40b3VezK5B0cyt64XPTCFT2f5j8HEN
xu8F8ckum8Cxukjpi2kNftcI5DsrmYCjUKKXTqYGQ1vcpPkK7kH+rG2w8uka
dLJTPmjuu4eISI/ECroajAwnvvnsaoy6n7nHZSar0apxJqBw0gjkqbLw6vtq
qLOX6deqG+FDdc6f9xnVmAtpyf3z3hBZ9zS9yvyq0bVWTmRhCJXyoqk242qU
RGryphbeBVOK9HWaa9WY9v5Ev/jfXdzgGi3VOlWN8WKeVK5XBvClYlHopavG
ggXraQFuA/z6U8lhOVWFLsskNrrcO5DX6r36X0sVTNoE1CL576Dx981OxldV
yFs+86u5XB/MHK7dzEFVkLxEZ/NMSh+/5nx0hcyrICzyK3ilVw/mhl/93OSr
QLNHVKPXQA9dgZK6U7xVOH3y/Un237dBbx4077CrCsdljsR3Bd6G0wleea6l
SgxKC6QOcNzGwLVrvn/6KhGVLm16qlwX8hfc0+bfVCJy01XDN+q6iG5KKKaP
rYSGoZas/bIOyukvN1x1rsS2nud7tSJ10MhyYiRNpxJ/w6s3qAvp4BERZeAS
q8R4sui/upJbULYvVm47VgnV4bNRn2hv4ZXxZFXklvU9ZNT89TcVbdwJd9by
mKwAUTmY3ZhxE2mrkpxPWiuw1t5z8z71TezyMztbk1sBhVm3TVU3tXCqyMJ6
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
yC3n1zo6vsiI9zlQsuUd4d9ZUMl30hdRnz6o6t8oJ6Yc9FGuM4+QcPbTc62Y
t6Tsks0VsTePoJ+i5eU7UUZK92Z+dHJ/hJk7B/Z2CpeR9zsaLTmvP0LyD4tt
rGGlJOGIx95rLI+w4jcRrfyzhGQpsI4Pf/IBy9u8IF3ZEvJRX3N+PNMHi2OV
5FTuG+LVEaJxy84H56NFnWP3vCHfClz5r4r54HfdsxfxbsVk5eem5IQdPriF
95GHfxYRoaV3lXeHvKE2IJu0WaeIHPLh/hKT7o3Yky5RYt2FZOaTTNQlO29M
782qfHetkChqt/y7JuGNbc4WFMO6AqLndNykltkbGjkbGE6LF5BvviIH0z97
4e6p0F9LNfkkPYdNYinXC2r9/clFV/PJxuW7e166eSHw+ENPrbbXpO6D3NH3
8l44Wlpo0a32mpTEPrWUPbqO9y7Z7hjLI7tnxC5cmPeEvn+F6KpVHlFY0zrs
V+MJ0fM9XL40eUS2pOk9ifCEDuOQc3p07rrCu6irGnrikviNmev/5ZKVHZ/n
Oy944tmlz8H6jTkk+vFMQw6DJxSL6VtG9HOI9cgZ+plPHuh3KDYspM4h8yXb
FoLyPbBUyPD7hUQ2catleBP0yAOzwk/GtfxeEXXGx+HTWv/jpxnud2WRd/sV
qjN5PHBSm9Ouii2L1Lkv2NXReuCc1PmDopYvSdeXTxxkyB0Zp4e/tNdnkiwn
kVamPHfEWJ+pUz+SSRx58ppFHrnjLlX/iRrnDHJb/6Pee213JF3l+f1rOJ2I
NX7vzzrvjjMMP/NGxNNJ9Uc+y+/07sg/QatomPWCBO6MtXMZdYPM9lh1u30v
iOaB67wmZW6467W57vejNNJX1DaVHeaG0wWfmQdXU8n3LOp5KVM3sJTyCm62
TCUfT7E+EbrihgmNp3HGkynETztjr/NhN0gsPT8+dzeFPL/m3svy2xWTD7cf
8f+aTIx92g5u7HLF7nxhGXbjZNJovZ9cznKFQVZS74ufz8nQyFxgl48r/i1c
V9hm/5woH2pcyb/tCniYl/FvfE5eMbm8mLjkinE3ettDIUkkReRCh+k+VzR/
CL/86kgSCW4gCe7fXcD232sJSn4iEeVglapPcoGBV+LRIOlEstVAP/WFpgv8
+/I0Kz4nEPGpS50cu12waNhoqf0wgTQdZ2K62OaMT2wW3zX2JxAXih7dd19n
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
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[5],
      Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1:eJxdl3k4Ve/XxmmSiJIKlVJkiopQyr5JiMj4zZTMaaJBpiJjoslUplTIlCSE
lJQoIZJ5yjyec/YxT0W8+/fve/451+c6ez/neda6173WI2Rz2cB+GQsLC205
C8v/vv//Z0F/87abj7Mgn/Axsbg2EM/nN0VOmxaDK/jVe/mESOQdLlbzli5H
0gNJ5bmGeMRplQ7tr6jBK9Pswr8qKfgme8Tx2uN6CMtGcPFGv4J9zVCJgkQz
PrvWubdezIJm+LsUoxdtKGWcrk9geQvVu2+KD7B2wtZgaHX03TzsDU+qF0rs
hjn9atcoewE2yetcdJXvhcffZf/ab31A1SXlpuqiPiyOHYgPpX3E74/Bry0O
DmCnpQfktT7jUI3UVfOUQdSO50r4/SpGU0zHnQW2YdS0/jPZMPsFnsb+Cq4W
NBxuyTs7wFeKDU9TE/+l0LH3MXcsl/xXSEa3fv3ez8DVprqSpJPf8Ls03Yl9
MxPXypuUimzKYPj6r8qs0ghMJbj+XLr2HYaf9mV+Mx1F9sxTl3Kvctw8oeBq
JDcG57XiP/oCKjBkT3pdKBjDj4zI9Lo7lfgdUPWTkB+H6w1Hq7TAHzCIbRZj
ZI5jt/2vZjffKnS2m4kH75yAEWdNnKF7Nbo5VTRlwiYwzz/XqXPxJ2JUifal
vxPgl2S75m5Wg72bONdwWE2ihPxxfmLnLzTcLG68VDyJNse7vHWRv3DptfUm
YusUuOKDX/StrkXJ9r5rUc5TWPptfWqvRy1qgh7ZhpVNQYHl0rGioVrc19eW
ObZxGrQDQlaPjepAJO2e+W45DbrJpPPnz3XIqnkUdiBlGjeCTwqritejY7vr
24ThaTSzCE+KhtWj8vmHut2iM/ASVlByma3HjaRP0u3WM0i79uOIzOkGbPGS
qm6MnkFHay/72c8NiDCdc5eqmkFvtMCTzUKNsGwsKJ6bn4FHpEiZjm8jwoey
p3XEZrGg/FWZu7sRqyJvSajqzyL+kGSCjVITmNX8MiOus2Dj2mZ5MqYJ2vMP
n9rFzGLZ3ra6lskm3C8pLCosmEWkg+XB1TrN0Kg6+nx14yxOZnzM6U1qBnPu
zxqrkVkoCfcTTvPNGPmsdLtpxRwiy/W/Zem1oOZYirYP3xwy6nrXZyW1IIR2
3PSq+BzMNNwars62QOr0kHmRwhzCGpRezB9vxcf1kp/cVOcg8api3iCmFd/X
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
D/M=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"\[Eta]/\\!\\(\\*SubscriptBox[\\(\[Eta]\\), \\(c\\)]\\)\"", 45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"P/\\!\\(\\*SubsuperscriptBox[\\(P\\), \\(max\\), \\(Wh\\)]\\)\"", 
        45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}},
  FrameTicks->{{{{0, 
       FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
       FormBox["\"0.50\"", TraditionalForm]}, {1, 
       FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{1., 
       FormBox["\"1.00\"", TraditionalForm]}, {0, 
       FormBox["\"0.0\"", TraditionalForm]}, {2, 
       FormBox["\"2.00\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive["Label", 
    GrayLevel[0], Bold, 45],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->Directive[Bold, 
    GrayLevel[0], 35],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 2.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.913586516650893*^9, 3.913586902750042*^9, {3.913590042226492*^9, 
   3.913590057848892*^9}, 3.913590981334155*^9, 3.9135910237800694`*^9, 
   3.913773603225286*^9, 3.913773885897187*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"42b3f857-10cf-4510-96f0-17a47de5d522"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data1", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check50.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data2", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check60.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data3", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check70.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data4", "=", 
   RowBox[{
    RowBox[{"Import", "[", "\"\<check80.dat\>\"", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"A2", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"data1", ",", "data2", ",", "data3", ",", "data4"}], "}"}], ",", 
    
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.00", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.06", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.06", ",", "\"\<0.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\"\<1.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.50", ",", "\"\<0.50\>\""}], "}"}]}], "}"}], ",", 
         "None"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "\"\<0.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "\"\<1.00\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "\"\<2.00\>\""}], "}"}]}], "}"}], ",", "None"}],
         "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<J/\!\(\*SubsuperscriptBox[\(J\), \(max\), \(Wh\)]\)\>\"", ",", 
         "45", ",", "Bold", ",", "Black"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{
        "\"\<\!\(\*SuperscriptBox[\(\[Eta]\), \
\(r\)]\)/\!\(\*SubsuperscriptBox[\(\[Eta]\), \(c\), \(r\)]\)\>\"", ",", "45", 
         ",", "Bold", ",", "Black"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"\"\<Label\>\"", ",", "Black", ",", "Bold", ",", "45"}], 
      "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Blue", ",", 
         RowBox[{"AbsoluteDashing", "[", "15", "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
         RowBox[{"Opacity", "[", "1", "]"}], ",", "Red", ",", 
         RowBox[{"AbsoluteDashing", "[", "7.5", "]"}]}], "]"}]}], "}"}]}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
    RowBox[{"PlotLabel", "->", 
     RowBox[{"Style", "[", "\"\<(b)\>\"", "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Bold", ",", "Black", ",", "35"}], "]"}]}]}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.913584242066063*^9, 3.913584257382023*^9}, {
   3.913584290838109*^9, 3.91358429655439*^9}, {3.913584327119635*^9, 
   3.913584358531763*^9}, 3.913584727122718*^9, {3.913585274149355*^9, 
   3.913585290607881*^9}, {3.913585455968442*^9, 3.913585456375051*^9}, {
   3.9135855260571003`*^9, 3.9135855353836117`*^9}, {3.9135856986972303`*^9, 
   3.9135857182401876`*^9}, {3.91358609582966*^9, 3.913586136880505*^9}, {
   3.913586441226198*^9, 3.913586487743742*^9}, {3.913590052612866*^9, 
   3.913590053166379*^9}, {3.9135909862816763`*^9, 3.913590987969859*^9}, {
   3.913591027387369*^9, 3.913591029181229*^9}, {3.913773628272747*^9, 
   3.913773691190205*^9}, {3.913773727319604*^9, 3.913773870689592*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"d96df2df-591a-477d-bdd4-be9980225082"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0, 0, 1], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], LineBox[CompressedData["
1:eJwVxX040wkAB/BxpSNEXLXQdFqR996p9tWQXPQgL5U7UU1Uz3qRlyiXt/RC
3lJXEWqOvLtMXrNjmmLyMiZvs/2yGhd6s1R0d398ns/KQyfdGIokEsnpP/9/
uaZGja4yhaoVceOuVSVAETeo/fEkDAK425UZ5Ui2VVAeqpnAmWqXu8dyH8Hw
nqZJuu1bBNAXpm2ZYsNmrepDy+BxvCZqj1PtqrDTU2eRmCmDyKwi/EB2Da7r
GHAtdr/GxfgI348/1GNr4bcFw5RRVCbHdekxGxDlkJU3MCtBF88+QWGSAzvf
DJeqdyNwv+XMOWnUCHas4VenH4dB939B+s5oArPQi2cV3I9qjouFD4uLktiY
qSlzIXzYvHn2r5qhZLbmjLG1ALn+aYrBVB5S1h6mFKd2wkxLJqw82gK76SDm
3hPteKJTxBgoeAZyj/93OZ4jpq3s95qJ55ihnG4MTH+Kn+l3Hlqub8OrGLb2
Ir8mVEQFpxqE8dFQlJFufosDuUHIltD6dpx70XyjcV8dWDOsjGsKHXCQZSzK
Ma5CksAuJozVgSheab4wtQJjM/57wh06cfJlMONTRDkGyeXiK2OdiH7GjrpZ
VAzly9dbsxO7sMmzXt5OfYjAgI/61RbdyJkrM1JyzMUOq3E6v7sbE41Befy5
HJi2l1YKQwTwUu+lmzHuobb0sbyL3ANhu/Y7Mes29AkP9+q6HqzJ2y+JzUxH
vXSyJfZgL5TzxT9pb0iFSuxgk5miEL6nUy9E3r8OtcOEUhlLCNPD23vG/76C
xlZKJsmhD0m6DI+5B3GY61U/ulTWh7nKEptNxtGw1TCZlF19iXC+fUTd+Uj8
MprJO2HSD5+wJu+xpHM4FvJ+OIXfj+nzN0lex4OxevdItSNzAPyvUS9Ek6fh
82vo+mj1QXAvUeabKDFh5t6/e3XJIFwHD33X1wtEx17FR3rOQ+B+snIumDuC
s6q+G53Gh5DpKf2r+KofDoSWLUu5PIxTbvbPlzj9hiytbN+nq0S4EMAOqQva
B4Fm6FRDgwjIOjpdwnCHm2XHzlyTESy3bKEyFFwxrrHQOz1sBK7NgoFPnk7w
uOrPSmwaQfylNyattx2wSkv6haEmRhjFBoksW9Tuelc56SHGDU5+SrmnDRSc
/R58zBBjdj1liG+0FZvZutyNEjGIBbO9scmbsJTDlgVSJZj+4j9Krl2Hl7rb
Vbb5S2DVnvZP+WJztM6DhyNLAuNryWppHCNk3dH4vEIkQcnBnM+lblR41bbG
bV5CYI++V+qOBysRSCp4L99FQEVok+1L1UOKrZ1WUQiBuRrpSkO1ZXCUHroS
fY9ABGfdkepOLfwxdGIsvoGAQJk5Yr1HA54bZV05fQTOngof7eSpQGD4ZV/8
GwLFmvPdLd7Phz3Zo7nmLYHl0v2Ln0wpIDGY4X1RSsAiUmd/AmZpg6oDxwUd
BJ6abru0sElOmzFQyT9YQKBFUSDys/5AoxXdTwo8RSDV/kN39OcJWh/VrLCF
QkB/tf23hLY3NCeyfENHhQQkb1td1mOCNiRTbbE2lkBjp3qEi7aI1pi55E/N
SDH0P/DEX7f00ULz1+Yk5Y1Akq5jxLzbRbsbI3Uj0UVIIBtJhMptNNNCz0zz
5kH8C57QWqo=
      "]]}, 
    {RGBColor[0, 0, 1], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1:eJwV0/8/0wkAx3HhiuSi1JRwlfQNRVJKn3dHvjUSfdUjRAx10bddkURuKR3O
8qX0xejWl0nCCEXkS1PIl+XLIjObbabMl4jIdT+8Hs+/4LXUJ9jNT1FBQcHj
Z/+rFTpiY6UqR6EeTeZa+BR1cydc6p8PoPyuBl/VLwcb7gQWtRZ/gY+qzdh5
Zh6WmZ9jx9h8xgTpUJSLPB9dQpnnUqoMDLVZu+x2FIIcw333NkgKFiVKOZpR
jFULhyu1yGKYrl1WZKJcgtonwbyX+iJkK0kEAUGvYDovsip/SgAdju7A+oEy
7JFcQtwgH22+ZSWs1a9Bn7QkhmZ9QkeL1iwHSgXMBlKG28/ykMq7P6Pw30rE
srgPY9e1QjDOMMgTVsF0clt6lSUXisoRfRMr3iAvQ2xsR29ETdyUrXsABw+t
7mbRjtfDQPeeJC2zBg9PsLca4S3czAPOPhx4C/RQitITq8GVPLq9y7wWYraz
udORCtjmcgJCQuoQYhSleSa5DG9oz/w1XtUjNo1jdvDAS3SsOT4jQrEBSn20
frs1hahQcxq+zWwA0TgqiUtgQxy+dtsHh0bQdRe3lobmYC2ve6NhfyOiXJTb
d7GyYEQuMoyJb8JuqZJj1vLH0Mqd1psya4Z8iBM9256JzU7KzRdamnHei1s2
NpkOC3JgmFIoF5Ycwwe13vdAaysqT9D9AKVLZ9ic9FtwYtulG5R/QGBlQVVO
ahLe3yJ7Ffu2QM2LTvvLlA6Wv/M5V5VWHEg9+oB/Nw7FBZx4SWYrzEznb6wp
uYbkL+TgcJc2aNzZHbObQcOY3txhzeE2UJpYLaMrL6NsWmd2RnI7BLny6jnn
wuFHM31ivIWH9v2dDZMxIfhIXsLJ6+TBPtI1Qs+fiuXK2z03RH5EV20kzaX/
FLKYru6ZBh34Ftb00VohCMMNGrcXczpQmTZb/YB2IGy1FoxcOt6JgY4pO8mE
L67+SNLn/foJmVHPd3ZGeyPszdHSlbmfwC5VyTVx8IAx+ZSb/74uLKphvfQ9
dRD00ZuWKd+6EL7YmVruuxfx0zu4PGc+Toyry0tmuIJapu92JI2PQfvJRLm7
E9Ttl/zgyfkoe39l8P09e/iFB6Y7WneDNMqx8M60wcGoSgHrRjfeSa1/0fPa
jqGZrb9PCbtBi1PdeXrbVri5G86DhQAzZDcUUx5YoPCFBTUoWoD6TKanTbMZ
dAI791xrE8A84nFCot06BOkn7Y9d3QPKPlHpmbHV6N18veNcaA8u9jreVP17
xc/PCgZt3/VglMFpSv20FAypgvWIjhBnjbPGN6bpYvpexpxLfwihHVDBPnhN
G2uy5ZqCl0Jw//yok+Cihe+bEamtLsLkE5MAUp0GOrPcupd4iNBxpMj6dLUa
NqkYjUieiKB0oiSDLZ8JetueZOqkCD55cY34oojp53uTi8m9oKqZTQxZTBP1
umWXn6b2wsc4OCUof5xYf+xisJ20FyfHHpVGG34l4sejHlM3iZGvMla+yHuQ
2L0q6ZAxTQyxqcKVOlo/scXGeP7hJjHaYpnuQk8xUenAtPisJ4GH1f6ehXo9
xFzm1BbOMQmMAnb2KG/uIvZp2OS8z5dAeF+R3h7cTjxSzvzRNS2B1/rmJOcs
LvFs5BWrzkGK31JGuFYVDUQ6ibrw6D9SzNOPyPbWfkeQvvaTPVqksL4Y6bOm
qYoYOnElz39xHzRJ9S6OEeWEPaU6ccHhPhhYNi9Vl78geP2n0Z7ah+skI9ep
tQXEkpkGc0c/9IFhbFbLCckhHhTKKMfnyJB1v7WJ75pJjIcK+5qsZOBfpd/K
XsYkrudX313lJ4P5uu862csZxB6GEi/gsgwVnrNEZlY3iVqTAvWOeBn635w8
f7ImgRCFuYVl02Q4fCHcR9HxGmGi+vWCaJ8M593dR9r1I4nsweqLr4V9GL7v
8+qQL5XYupKUGDQkhZiUUdqZSyEabu3wqq8QY7AqpL/4mRNBLdYsp/Tw8R8k
eu99
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], LineBox[CompressedData["
1:eJwV0G0w1AkAx/HtYo5ILZG2y2XaUCKDoo797cpkVbrW0yVJ1lWXVB5SRy66
PD9EHrYSR5w8jmdmaY3N0x4bsYRd+99L25btwe0VwlSue/Gdz/uvMfui+6lv
SCSS69f+V27xnt9q9hFco/g3LG4N7I7kjQuF81iXwdGrtauDuzf7UKBqDooN
LkUxvHr4lZ5gUmSzoOd81FKxGpEj4DJlhR8Q4xYVYT7fhDYW7wcJ4z384/as
DSprgXqG9sqQIRVSeqPjpgO5aI18SUqumUG68z7bz9va8Jkd5Ul59AbpusPt
1IWHiMjSp3sop/HKL/32twPtqEkz3qhm+xIKeykRVdYBRzWXFbaVcvAL932P
Lj4W4m0+JrOm0Pz7ToP8pkc4yjR0rPeR4RBlue3Xsk6MUuglpyMlWH95j2/S
vS50LtnYLiyPofx533JKZjcKA+v3d06P4JeRneEHE3qwuIXklGoxDIFVyfWC
6F5YzGfVet8cwO6k0UvHwwUo0MrlUI73QUNgyT8b9BfIc1VfKM09YGYo3lYF
9IG+7oxBVEonDHwEBat9+jGw4je3vfkduEs27ok+IkSlFqNWoGjDNWt8ULo8
hr3+n96p4hYwt53vcMEAqqy7w1oDGlH5vNMpZfcglEdEl3qD6hD1em/pA4sn
UMusUBb1VqGo7dwxV90h1KWZPly6UgaelHAqTh9C8JP9YaWDJbAsJWuLNYYh
OsjZpt9YBPEqj9jpG8Ngt16tLjTOh4VmjobwyzASTl5XWVXfxjvzNdejIkWg
izdmOb7KRvlh75WqDyIwb4msznIz4eZc+2jLhRFssSz1NtFNg/OQG1/76zeH
Bbu6ltREtFON7hcFjIIcn+pyhncDw8M7fEckowgqszH9lBiLv00fKzkeT+Fh
6fRCXH0VvZ4FsxLhUxRy/brzTK4gVDvuVNq+Mdxx7mNnHQvH4J29qpy2MVBv
GNSzzUMw60VNkFiNw0smJQWSzsHNsqmR9mAcF27F+C4lnkbjUo28gDKB7aHB
N3X72djE6YodTJ+A+didjFiWP0an/BYKlycQZ1isyNM/hhaZYZL4ohi9s0lj
pBYv5Ir8X9jLxIi11lP/rOOO4/nheSEHJMi+FzyzXv0waMkO1iZNEiRNhA+o
ZpiwbJ5b/IcyifKju3bZ1jtDy7Mh3P3aJGSrfTN/NmPg/LsDP7YTk/BYtZga
d94B/KBuWaK9FDphFZe7EuxQHP1S+TZdCj+hVpEwzAazVWMCdUKKhqCUhAYd
K9hz5zndVAIJplfOJUdtB6c6IfhdIAFDdojC+vFWZGWZMXXuEmB0tc/eVhpD
Qys+I6KTQHnxfAcrYBPkT/t6TGQEdnhG7JrRNESoztTWASWBE8ui1OwCPUxV
iJqqnhPQLN2dcVK5BpqWD+gpPQQuknfoZko14Wf2uvyPmwR4ud8xeIQazvpH
loTuIbBBz+0WpYMEFrXyUztfCnpEoqF+8xLtEyeX7GokBY8uP3N/8xzNzqh/
oeHAJP6Vi7xWp6loiz/1H3RwlEBx8hn7GUdJ8/FZqxfzZgIMasX97Ety2hMy
I3696zj+A7FVQRI=
      "]]}, 
    {RGBColor[1, 0, 0], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
     Opacity[1], AbsoluteDashing[7.5], LineBox[CompressedData["
1:eJwVzn080wkAx3EtjFKKxAuJc0oPlFxC+n17Lg8lsZJjlfPQg5IVnVBHraTD
UvISpwjRg2I082xTepJnWaFt9mQ7jVRLStf98Xm9//1YBIbvDCapqakF/Ox/
97aowo10vqDSjK7wqiyB+EClhXqfChdIzxkCrVLEe4Wo60GFjYIsjbAvZTgb
00GWenxG9Ib0M7zv5chZ+0hWZ/AJe8T9dqvnsJBwroVncn8MRlNX5Lc4smE7
l/eo3OoD4qwfLMXBatCPjxUvZoxg2d0bcfm3apGXb2NV8HEYmXLDK1RJPY5Q
MiPJA3KEXbpXp2XUiNEbSVPC/pVi/Po7n5fgwIc93bVgsRh1NOrsHwe5CKCc
f+h0Q4hY5cQjp2tN0J+yMh/b+FiXmc61anqMo/zDSr9DfSg9uFJ4auwJFNVX
Oszv9sLf9VPVN8unsM5aQLjv7oazIl4/mvIMP7Kqk4tDO+C4nmzz5MJzZOTG
hK4uakX95j5aY9ULvDxpItpp/QLL3Lw2bX//EimxGXm3iWYcWq6pTvnlFcy8
o1L733BRqfJYw9nVisEyUWricANYpM4fnE1tSGZMseW21cBmeXGhK78N6okc
88bYSghjGjuVp9pha2P3g95cjraeHb6lBh1gzrCqmZZdimsNMz8kPfz5pXzt
5dl6H7GmfNtT7p1YKqWxe+yLgYK/fOMkncjUipzRu7UA+xKrQ67Ed0GwhbbV
5lMu7pmzVNWm3Uiznxgf35QDU7tF21WsbjSrrTGtOp0JlbGmz2bvHqz6WGT3
+Xg6LpZo37rzvgcVhjoeGdpp2NHvcHVB0mt0ZLhdInmmoDBE4Flr1QvWek+V
Ke0iOnWWSmiNvUg3a4qw30OHVuj8KI8AHqKVF7YtkcTD0EHXbMc4D5SduXu5
k3HwjGBH0dPfoFvPbr6BWTTuuAee+WT3FrtIXRFbNSKxNoXadufVWzgTS7Qn
rkZAOiF/XXq4Dw+oSrZd8BGQ+5UTRtr9MG2ayPdIPQCzlpCXI4X9SG463bgl
IQgbhaFzPTYN4DbzabWu2X50RD5XQTSAybkusbap/pCse9s+ePYdlqg1rrJq
2415XkdSrfX4IC9i1N3s9QaDr0xqD+Sj3Nw6hJK4A9dY76dNMPk4uTDolmOi
OyputAUxNQTodqHau8s34/Hw9lgtXwEWz7z595VZG1CWFzKpeVeAQC03x94K
YFXcnGj2pAAnDkT61/o7o7CK7LTQW4hLVfrv8mQrsbNlo413kRAcY1lZsf0K
3KJ0lztPChE3SZM7uNiC1X4io8tnEAHMb1P7jBdhoWXD+ln3BtHu73RhoOdX
9A+rTnRPFWGDC+2plbsF0grmHFP3F2Huh7GSiFJTGE8zGo0qF0HfUjuB/sIQ
EwuCAqbMEGNZzUBYLFsf9rOODJ0IFuN0mW4affcscLdfzMitFWOjZtoulu50
lFge9PI1kIBZ9TXk0h+a0NrnUxAWJoFOUUrg6XgS/PTOj1RwJKiRuZ3RTp0k
RJyRLl0jKbZkrmbUrhgnQkspI3vCpBD2GbusqP9IvCXViqLqpUh4wjtwbMYo
kRGzq9lttgzZh3P+tPiqIBgG4b+x98tA9eQH2EskRN+x/Kq8hzJUXkyWW5QJ
CcFXASH8LgNZJzhl4NgAIfZ8kOvqOgQzd1J7PrOX0PC7zv0nbQj0UedRvy+d
xE2KX8xl3hCozzs+BOu3EafmcCrq5smxfDBIVN/wjBDk9b/JpsrB5PnbdMU3
EULx9UJalhxXBTLn/asaCEvW5uS1nXJoRFTz9h1lEw+//340R10BZt1iukMN
k3CueNOaYKOA3piJc8rqEsI3Xtuc76ZAk/fts8NNhUQBf/jr+90KRA0UhXdy
bxKOTg7UJx4KDJECxNnyDMJk32Wyp4kCOX1hko4NDGJNq+G5p7flSJIZLtQI
P0c0560lq8qGQOttdvWSRhJDCS2HX5+XgmHrwNHk+hNZ8ZRspYyP/wBWIeRo

      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.06000000000000013},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
       StyleBox[
       "\"\\!\\(\\*SuperscriptBox[\\(\[Eta]\\), \
\\(r\\)]\\)/\\!\\(\\*SubsuperscriptBox[\\(\[Eta]\\), \\(c\\), \\(r\\)]\\)\"", 
        45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}, {
     FormBox[
      TagBox[
       StyleBox[
       "\"J/\\!\\(\\*SubsuperscriptBox[\\(J\\), \\(max\\), \\(Wh\\)]\\)\"", 
        45, Bold, 
        GrayLevel[0], StripOnInput -> False], HoldForm], TraditionalForm], 
     None}},
  FrameTicks->{{{{0.06, 
       FormBox["\"0.00\"", TraditionalForm]}, {1, 
       FormBox["\"1.00\"", TraditionalForm]}, {0.5, 
       FormBox["\"0.50\"", TraditionalForm]}}, None}, {{{0, 
       FormBox["\"0.00\"", TraditionalForm]}, {1, 
       FormBox["\"1.00\"", TraditionalForm]}, {2, 
       FormBox["\"2.00\"", TraditionalForm]}}, None}},
  FrameTicksStyle->Directive["Label", 
    GrayLevel[0], Bold, 45],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->750,
  LabelStyle->Directive[Bold, 
    GrayLevel[0], 35],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"(b)\"", StripOnInput -> False], TraditionalForm],
  PlotRange->{{0., 2.}, {0.06, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.913584251149044*^9, 3.913584258842746*^9}, {
   3.9135842917258873`*^9, 3.91358429750322*^9}, {3.913584327643446*^9, 
   3.913584359398223*^9}, {3.9135847238234177`*^9, 3.9135847278200283`*^9}, 
   3.9135852929650707`*^9, 3.913585415587987*^9, 3.9135854576409473`*^9, {
   3.913585528370433*^9, 3.913585535930353*^9}, 3.913585623245619*^9, 
   3.913585687384547*^9, 3.913585719331935*^9, 3.91358613979605*^9, 
   3.913586247843441*^9, 3.913586442828033*^9, 3.9135864889069843`*^9, {
   3.913590046875803*^9, 3.913590053986113*^9}, 3.913590988564954*^9, 
   3.913591029683901*^9, {3.9137736292100277`*^9, 3.913773643291337*^9}, {
   3.913773675279468*^9, 3.913773691847938*^9}, {3.913773728707445*^9, 
   3.91377389012749*^9}},
 CellLabel->
  "Out[321]=",ExpressionUUID->"f74b7c1a-5aac-4c82-b509-124eb7afc2fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A5", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "A2"}], "}"}], "}"}], ",", 
      RowBox[{"ImageSize", "->", "1500"}]}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Red", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", "Dashed"}], 
           "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Red", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", "Dashed"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Chiral(VP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Helical(VP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Chiral(VTP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Helical(VTP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"LegendFunction", "->", "Framed"}], ",", 
        RowBox[{"LegendLayout", "->", "\"\<Row\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.0"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.912332746055097*^9, 3.912332746584238*^9}, {
  3.912332843825876*^9, 3.91233284506743*^9}, {3.913590385666027*^9, 
  3.913590396377186*^9}, {3.9135907726025*^9, 3.913590822927024*^9}, {
  3.913590913984614*^9, 3.9135909519751587`*^9}, {3.913590994751638*^9, 
  3.913590995979075*^9}, {3.913591034502664*^9, 3.913591035253867*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"f6535961-de31-46e6-a6f4-922bf5b8f7cd"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {InsetBox[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], LineBox[CompressedData["
1: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
cNM/HkRScPafzw8Owv/9bf8DEVoGeQ==
            "]], LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAAPWHK+THQbwAAAAAAAAAAPqYBPwm
AJs8I4lgIbGuRT0DcZPOivGaPKDg5ngVPEY97eZPJetMlTyyW0YoVRBCPfq2
rkClSJM8EDpVyz7OQD3NhKXNu+uPPG0PkLx5ljw9l/hsO5TIkDx8kXbfpuQ+
PQHyxVCcF4o8hh9Ol3utOD0RsKIpppWLPHUnDa9yzzo9L5Pwdev9gzyH4aND
yvczPQ951rtgJIQ8Jef/FpWsND3OnX6ocoh5PEDWyoiV7io9TCsDerTLfTz3
/YaNByYwPTIvy0/D0Hg8wATfiXSkKz10O+/hqfx8PGlTrcBDlzA9Cv45sD+w
cjzP7LPw/vslPQA0ahF+Jmo8aKopNdicHz0n3wvXYpJmPGVKO75/Chw9c9H7
+UUwXDwloKihUP4RPdBrpM5QSms8il8h9NDmIT0lmtqGwG1YPHt6hDmwdxA9
RtNwqnS1WjxDR4uYl4ASPUJlcWWCF2M8f4QrC8YuGz3nH5KaqA9kPCjkF8s8
Wh09QKadpGrp7TsAAAAAAAAAAAbfs3A=
            "]], 
           LineBox[{{-1.7482891887326614`*^-20, 0.}, {8.75617094308391*^-19, 
            2.770896726759408*^-15}, {1.8611120547135377`*^-20, 0.}}], 
           LineBox[{{-1.8101496134619278`*^-20, 0.}, {8.286186057251568*^-19, 
            2.769161272097717*^-15}, {2.0327725772788658`*^-20, 0.}}], 
           LineBox[{{-9.916216052543838*^-21, 0.}, {3.5931450590058615`*^-19, 
            1.6208787031326511`*^-15}, {4.3016843872716995`*^-18, 
            1.9941518741444643`*^-14}, {3.2918177976542563`*^-18, 
            1.5681926415185916`*^-14}, {2.571634854154754*^-18, 
            1.25897432460486*^-14}, {5.682723202713798*^-19, 
            2.8589596897697117`*^-15}, {1.2256450352414521`*^-20, 0.}}], 
           LineBox[{{-1.653717032331811*^-21, 0.}, {6.150659039751249*^-20, 
            3.2678426414989453`*^-16}, {2.94082493890027*^-18, 
            1.6056565268748606`*^-14}, {2.1276721593488602`*^-20, 0.}}], 
           LineBox[{{-3.454015678810442*^-21, 0.}, {2.0526952653998908`*^-19, 
            1.24992523524158*^-15}, {5.0441071184035665`*^-21, 0.}}], 
           LineBox[{{-9.76643279028455*^-21, 0.}, {4.268110095507568*^-19, 
            2.7446265997601575`*^-15}, {2.0636012230673944`*^-18, 
            1.3636957733486757`*^-14}, {1.9045716188833066`*^-18, 
            1.2934007202113946`*^-14}, {2.208705563690822*^-21, 0.}}], 
           LineBox[{{-1.960232261697936*^-21, 0.}, {5.570736413474629*^-19, 
            3.9951820161278644`*^-15}, {6.460830547693344*^-21, 0.}}], 
           LineBox[{{-8.095089499997252*^-21, 0.}, {3.3715216140432984`*^-19, 
            2.9265688938527493`*^-15}, {8.138112651965307*^-21, 0.}}], 
           LineBox[{{-3.7462980439042486`*^-20, 0.}, {1.374105503397344*^-18, 
            1.7003067987916326`*^-14}, {1.5741929698135102`*^-20, 0.}}], 
           LineBox[{{-3.491696377573823*^-21, 0.}, {1.4531101341567823`*^-19, 
            1.898865455521903*^-15}, {3.3196736217550154`*^-21, 0.}}], 
           LineBox[{{-1.1357285820444092`*^-20, 0.}, {8.746979495632542*^-19, 
            1.2070971889582269`*^-14}, {1.2503967218207833`*^-20, 0.}}], 
           LineBox[{{-7.565903156287823*^-21, 0.}, {3.8619802593243415`*^-19, 
            5.628370324985521*^-15}, {6.7534713979236926`*^-21, 0.}}], 
           LineBox[{{-5.727009838460788*^-21, 0.}, {1.032713901853706*^-18, 
            1.923760525842252*^-14}, {1.0558873892042578`*^-19, 
            2.0213097424239236`*^-15}, {2.4561153978407414`*^-21, 0.}}], 
           LineBox[{{-4.2268521792933594`*^-21, 0.}, {
            2.0101754120397766`*^-19, 4.063851154952539*^-15}, {
            4.379983284547011*^-21, 0.}}], 
           LineBox[{{-3.641729175387087*^-21, 0.}, {1.4965374234117773`*^-19, 
            3.2834037867341697`*^-15}, {3.55917482299323*^-21, 0.}}], 
           LineBox[{{-6.143876632778049*^-21, 0.}, {2.7980304919432976`*^-19, 
            6.4830258641146645`*^-15}, {6.067812299710343*^-21, 0.}}], 
           LineBox[{{-4.0988776747634885`*^-21, 0.}, {2.56435111294875*^-19, 
            8.944737002833803*^-15}, {2.0915966757014688`*^-21, 0.}}], 
           LineBox[{{-2.7199927629551517`*^-21, 0.}, {
            1.2916534525838065`*^-19, 4.8895523740690356`*^-15}, {
            1.5578858175750825`*^-21, 0.}}], 
           LineBox[{{-8.804605302521819*^-22, 0.}, {4.686049141949669*^-20, 
            1.873348645573019*^-15}, {1.132645592325979*^-21, 0.}}], 
           LineBox[{{-6.229604105134879*^-22, 0.}, {2.4739127899138174`*^-20, 
            1.1029949721012563`*^-15}, {4.623724604727093*^-19, 
            2.118485291303688*^-14}, {2.0174683530566962`*^-19, 
            9.499146231387844*^-15}, {3.2306399699431755`*^-21, 0.}}], 
           LineBox[{{-2.338298257710945*^-22, 0.}, {8.719957141933382*^-21, 
            4.3359163332087097`*^-16}, {1.987159157821241*^-20, 
            1.0154149366498252`*^-15}, {3.3047058964009*^-19, 
            1.735353929685027*^-14}, {4.51115591204725*^-21, 0.}}], 
           LineBox[{{-3.0184386202189397`*^-21, 0.}, {
            1.4505258236358784`*^-19, 8.971123906362788*^-15}, {
            2.7626121579623922`*^-21, 0.}}], 
           LineBox[{{-1.2953435712075025`*^-21, 0.}, {4.694663510352682*^-20, 
            4.371106191800863*^-15}, {1.0257583751923687`*^-21, 0.}}], 
           LineBox[{{-8.594065442504543*^-22, 0.}, {1.7065481979592108`*^-19, 
            1.8714217995115532`*^-14}, {1.4120873409366091`*^-19, 
            1.5913256413110075`*^-14}, {1.965414150201985*^-21, 
            2.2761241958676056`*^-16}, {1.9695958824364572`*^-20, 
            2.3440311632025344`*^-15}, {5.013790282290535*^-20, 
            6.131924442092747*^-15}, {1.0322333283604907`*^-21, 0.}}], 
           LineBox[{{-9.13415649115652*^-22, 0.}, {4.1402042998463564`*^-20, 
            5.647157695270026*^-15}, {1.8351113737758278`*^-20, 
            2.572260505488557*^-15}, {3.0940650814742276`*^-22, 0.}}], 
           LineBox[{{-6.481355384528116*^-22, 0.}, {1.1938176452260924`*^-19, 
            1.7671738497143066`*^-14}, {9.509259101190029*^-20, 
            1.4465463175497807`*^-14}, {1.5455200251783569`*^-21, 0.}}], 
           LineBox[{{-1.4310450896784535`*^-21, 0.}, {8.304251140504489*^-20, 
            1.3340585796295719`*^-14}, {5.897747874210365*^-20, 
            9.736548014225503*^-15}, {1.022602859157265*^-21, 0.}}], 
           LineBox[{{-6.580314943139763*^-22, 0.}, {7.875296235244597*^-20, 
            2.0669988850529527`*^-14}, {8.72321930981597*^-22, 0.}}], 
           LineBox[{{-2.575771681945772*^-22, 0.}, {1.1340759810539655`*^-20, 
            3.1434334454276266`*^-15}, {3.449594554860897*^-20, 
            9.82595018578274*^-15}, {5.900342408151528*^-22, 0.}}], 
           LineBox[{{-9.050374365445514*^-22, 0.}, {7.686860193406997*^-20, 
            2.3123004403622436`*^-14}, {1.465134574517875*^-20, 
            4.529155008501277*^-15}, {1.097702056883537*^-20, 
            3.4871331744936923`*^-15}, {2.0743502232666786`*^-22, 0.}}], 
           LineBox[{{-6.243913992609773*^-22, 0.}, {4.5728914676848473`*^-20, 
            1.6201398472500565`*^-14}, {5.374400720389193*^-20, 
            1.9567531572101456`*^-14}, {3.419118980080734*^-22, 0.}}], 
           LineBox[{{-5.0091164400405703`*^-23, 0.}, {
            2.3803151885943553`*^-21, 9.932587814830014*^-16}, {
            1.0050200142293426`*^-19, 4.3097000606808675`*^-14}, {
            8.539313232725525*^-22, 0.}}], 
           LineBox[{{-7.304650267430084*^-22, 0.}, {6.628996020833452*^-20, 
            3.001987460595986*^-14}, {2.7939827623241253`*^-22, 0.}}], 
           LineBox[{{-1.9426954588971379`*^-22, 0.}, {1.768120023379581*^-20, 
            8.455935051472915*^-15}, {4.276376952483824*^-22, 0.}}], 
           LineBox[{{-1.2021822663901072`*^-22, 0.}, {
            1.6617367553346058`*^-20, 1.1964043705456804`*^-14}, {
            6.664949378607826*^-20, 4.931249904241652*^-14}, {
            2.90760023995094*^-20, 2.2107480214187726`*^-14}, {
            9.25416102246403*^-24, 0.}}], 
           LineBox[{{-2.527619477481522*^-22, 0.}, {4.374328987580829*^-20, 
            3.609517637780852*^-14}, {3.4060209049776945`*^-22, 
            2.888214388518413*^-16}, {1.683420343761668*^-20, 
            1.4669627351265003`*^-14}, {2.9779998026094844`*^-22, 0.}}], 
           LineBox[{{-3.016678469206873*^-22, 0.}, {1.5783425602486417`*^-20, 
            1.576339438014834*^-14}, {2.694966836808758*^-22, 0.}}], 
           LineBox[{{-1.6700438786606327`*^-22, 0.}, {
            1.9966935073158374`*^-20, 2.1641783995681568`*^-14}, {
            2.023435684955288*^-20, 2.2538003925854242`*^-14}, {
            3.875412554679912*^-22, 0.}}], 
           LineBox[{{-1.511942828268353*^-22, 0.}, {1.0811450519004706`*^-20, 
            1.3069025026995278`*^-14}, {2.2806199618430284`*^-22, 0.}}], 
           LineBox[{{-1.8263825608490012`*^-22, 0.}, {8.956747729710374*^-21, 
            1.8178290722588363`*^-14}, {1.686075080125589*^-20, 
            3.516608374187339*^-14}, {1.3029437614437404`*^-20, 
            2.79265419008357*^-14}, {2.283291333064775*^-22, 0.}}], 
           LineBox[{{-5.82883566826005*^-24, 0.}, {1.9198906555216017`*^-21, 
            4.84656843201787*^-15}, {1.8193947680890508`*^-20, 
            4.719860795432564*^-14}, {1.34116016428643*^-22, 0.}}], 
           LineBox[{{-1.139755223401564*^-22, 0.}, {1.1264619614089178`*^-20, 
            3.086082755352752*^-14}, {9.451624140245421*^-24, 0.}}], 
           LineBox[{{-1.745913209234391*^-22, 0.}, {9.482705101501128*^-21, 
            2.8193984993914746`*^-14}, {1.393980440361344*^-20, 
            4.259173127160714*^-14}, {9.76204481476388*^-21, 
            3.065164626700353*^-14}, {1.4175912976010034`*^-22, 0.}}], 
           LineBox[{{-1.628480632472238*^-23, 0.}, {1.5111492968686242`*^-21, 
            5.149363664754146*^-15}, {3.3356863782713716`*^-23, 0.}}], 
           LineBox[{{-6.268088913036004*^-23, 0.}, {6.1822043288993885`*^-21, 
            3.5369835548164666`*^-14}, {4.653745260438369*^-21, 
            2.7361297435485298`*^-14}, {4.624369959303715*^-23, 0.}}], 
           LineBox[{{-4.500245726690165*^-23, 0.}, {2.1286062506522665`*^-21, 
            1.358196469456796*^-14}, {6.3961685392371185`*^-21, 
            4.194030240989059*^-14}, {7.700764453086616*^-21, 
            5.18907434505726*^-14}, {7.875377782085961*^-21, 
            5.4534563842306864`*^-14}, {1.114522083810561*^-22, 0.}}], 
           LineBox[{{-7.035452727526824*^-23, 0.}, {3.674462675079542*^-21, 
            2.687095350780543*^-14}, {6.393390673833669*^-23, 0.}}], 
           LineBox[{{-2.172751297786369*^-23, 0.}, {5.374179316958552*^-21, 
            4.2651526040296905`*^-14}, {2.3489462153008595`*^-23, 0.}}], 
           LineBox[{{-2.3552777014392893`*^-23, 0.}, {6.218928432061656*^-21, 
            5.2122683825785035`*^-14}, {7.492452682438015*^-23, 0.}}], 
           LineBox[{{-2.3431103371227752`*^-23, 0.}, {
            1.8886009562200216`*^-21, 3.045908763930391*^-14}, {
            4.8139578766715905`*^-22, 7.97853888226389*^-15}, {
            1.2840021077115878`*^-21, 2.1869115161067147`*^-14}, {
            1.9656755084666392`*^-22, 3.4405010625754415`*^-15}, {
            4.740940396747934*^-24, 0.}}], 
           LineBox[{{-2.4894163217123392`*^-23, 0.}, {
            2.0402671571990394`*^-21, 3.771253255493998*^-14}, {
            3.4525074105066694`*^-23, 0.}}], 
           LineBox[{{-2.639017771073572*^-23, 0.}, {1.3471250067963481`*^-21, 
            2.629634247270937*^-14}, {4.2197598619795402`*^-22, 
            8.464856123072511*^-15}, {9.882519960831891*^-24, 0.}}], 
           LineBox[{{-1.7519820084433608`*^-23, 0.}, {8.187505017265961*^-22, 
            1.831728077628104*^-14}, {1.216717986575248*^-23, 0.}}], 
           LineBox[{{-1.2171197392417062`*^-23, 0.}, {
            1.7928654238770712`*^-21, 4.3530163640202075`*^-14}, {
            1.1124561925796375`*^-23, 0.}}], 
           LineBox[{{-5.891944915427258*^-24, 0.}, {3.6663337365735963`*^-22, 
            9.400769253858421*^-15}, {9.00165293342205*^-24, 0.}}], 
           LineBox[{{-1.3652994761075242`*^-23, 0.}, {8.178684175833871*^-22, 
            3.244330983144456*^-14}, {1.3067256703499954`*^-23, 0.}}], 
           LineBox[{{-5.4434372903427186`*^-24, 0.}, {2.588590262487604*^-22, 
            1.1768659664352483`*^-14}, {5.900866096241312*^-24, 0.}}], 
           LineBox[{{-2.2008443052119775`*^-24, 0.}, {1.096632734291609*^-22, 
            5.5603544326175214`*^-15}, {2.58598039658659*^-24, 0.}}], 
           LineBox[{{-4.760050851006291*^-24, 0.}, {2.277083880802499*^-22, 
            1.2876501386154667`*^-14}, {4.695874599863516*^-24, 0.}}], 
           LineBox[{{-3.3492673541837395`*^-24, 0.}, {
            1.4615154159480718`*^-22, 8.727925698466532*^-15}, {
            2.3358049727062123`*^-24, 0.}}], 
           LineBox[{{-2.5959769201699773`*^-24, 0.}, {
            1.5639678556926432`*^-22, 1.0704279418877674`*^-14}, {
            3.698582267478631*^-24, 0.}}], 
           LineBox[{{-4.952849097666315*^-24, 0.}, {4.2196419444812295`*^-22, 
            4.591556460472979*^-14}, {5.954169453934502*^-24, 0.}}], 
           LineBox[{{-6.066365920682432*^-24, 0.}, {4.369746836108153*^-22, 
            5.02145291541478*^-14}, {4.943613924751802*^-22, 
            5.837972703160291*^-14}, {6.681110772373565*^-24, 0.}}], 
           LineBox[{{-4.4972919918972434`*^-24, 0.}, {2.47349461669037*^-22, 
            3.2576623039793975`*^-14}, {2.322086506997699*^-22, 
            3.142806393298057*^-14}, {3.370480216667011*^-24, 0.}}], 
           LineBox[{{-1.2750495412549054`*^-24, 0.}, {1.02532480713122*^-22, 
            1.5060316027678372`*^-14}, {1.798088732263202*^-24, 0.}}], 
           LineBox[{{-2.7277748255713*^-24, 0.}, {1.3927128527777695`*^-22, 
            2.2200738957427344`*^-14}, {4.087643259196681*^-23, 
            6.696120073456817*^-15}, {9.84325468878516*^-25, 0.}}], 
           LineBox[{{-3.965917101973231*^-24, 0.}, {2.103280634807244*^-22, 
            3.842598905905507*^-14}, {4.028917502418397*^-24, 0.}}], 
           LineBox[{{-4.6244956928658126`*^-24, 0.}, {
            1.6817097539195041`*^-22, 4.8846515624363026`*^-14}, {
            2.1984723436229936`*^-25, 0.}}], 
           LineBox[{{-2.1640846945002174`*^-25, 0.}, {2.082894690164191*^-22, 
            6.389084753265861*^-14}, {2.731193865639727*^-23, 
            8.609308289029205*^-15}, {4.959430465009373*^-25, 0.}}], 
           LineBox[{{-1.0419564537237179`*^-24, 0.}, {1.470850810451711*^-22, 
            5.0317324478743246`*^-14}, {2.8712354910028573`*^-23, 
            1.0093972675737856`*^-14}, {1.0371839383899189`*^-22, 
            3.747084516725927*^-14}, {1.7454975053867476`*^-22, 
            6.48039284035566*^-14}, {4.466429302371324*^-25, 0.}}], 
           LineBox[{{-1.0982432260606463`*^-24, 0.}, {9.848959505674741*^-23, 
            4.4257126977831385`*^-14}, {7.491099586202454*^-23, 
            3.4592570228407883`*^-14}, {2.817868068879411*^-25, 0.}}], 
           LineBox[{{-6.550304056364922*^-25, 0.}, {5.90947371275409*^-23, 
            3.0434323011198645`*^-14}, {5.284708805141693*^-25, 0.}}], 
           LineBox[{{-2.694477054328864*^-24, 0.}, {9.844712433874105*^-23, 
            7.632798539328217*^-14}, {1.8355752342162602`*^-25, 0.}}], 
           LineBox[{{-1.6916765640524551`*^-25, 0.}, {5.161243089028963*^-23, 
            4.2259452792754135`*^-14}, {9.556891644923313*^-23, 
            8.041380488756245*^-14}, {7.147083809083059*^-25, 0.}}], 
           LineBox[{{-1.1320050662201902`*^-25, 0.}, {
            5.2051771970807734`*^-24, 4.75316240276228*^-15}, {
            9.618196080883848*^-26, 0.}}], 
           LineBox[{{-1.7699688450574386`*^-25, 0.}, {
            1.5701097749120244`*^-23, 1.5141396838183383`*^-14}, {
            3.3950387861937524`*^-25, 0.}}], 
           LineBox[{{-5.855486970547092*^-25, 0.}, {5.0297172915896667`*^-23, 
            5.409499431369334*^-14}, {6.089239194161776*^-23, 
            6.730090952614812*^-14}, {6.49143467099711*^-25, 0.}}], 
           LineBox[{{-1.9156723691530746`*^-25, 0.}, {2.984384684523792*^-23, 
            3.884893089246311*^-14}, {5.795444603946924*^-25, 0.}}], 
           LineBox[{{-1.0044335871807738`*^-25, 0.}, {9.343557961399064*^-24, 
            2.098574794354178*^-14}, {1.2334796578344325`*^-25, 0.}}], 
           LineBox[{{-1.7924054492718552`*^-25, 0.}, {2.707630784591967*^-23, 
            6.422297232269608*^-14}, {4.43288119191376*^-24, 
            1.080516603779925*^-14}, {1.05267017740918*^-25, 0.}}], 
           LineBox[{{-2.8308273651282365`*^-26, 0.}, {
            1.1991852252468684`*^-24, 3.2599369619999537`*^-15}, {
            1.6894361576183535`*^-23, 4.719642603333366*^-14}, {
            2.7743487950768965`*^-25, 0.}}], 
           LineBox[{{-2.3331098232758245`*^-25, 0.}, {
            1.2722430276635771`*^-23, 3.753411648155556*^-14}, {
            3.4425783922462457`*^-25, 1.0437208311044007`*^-15}, {
            9.136023299850586*^-27, 0.}}], 
           LineBox[{{-1.0424995170734533`*^-25, 0.}, {4.48596958942171*^-24, 
            1.4363015494198147`*^-14}, {1.6674950802540707`*^-23, 
            5.48653628656686*^-14}, {1.8527699364361652`*^-25, 0.}}], 
           LineBox[{{-7.235957335586495*^-26, 0.}, {3.423799616099378*^-24, 
            1.1896818248205881`*^-14}, {6.934161459115214*^-25, 
            2.476058108615541*^-15}, {1.8037928530272938`*^-26, 0.}}], 
           LineBox[{{-4.841736291039715*^-27, 0.}, {1.7743775936310723`*^-25, 
            1.093203029476358*^-15}, {4.6765874673304426`*^-27, 0.}}], 
           LineBox[{{-6.460541781780689*^-26, 0.}, {3.2872009118851555`*^-24, 
            2.1387982519164525`*^-14}, {1.942177814257623*^-26, 0.}}], 
           LineBox[{{-2.214484401075778*^-26, 0.}, {9.358361456858011*^-24, 
            6.430313947822362*^-14}, {5.0999178184515136`*^-26, 0.}}], 
           LineBox[{{-2.5583500886105592`*^-26, 0.}, {8.84444088379473*^-24, 
            6.77766852478643*^-14}, {8.307374515459447*^-26, 0.}}], 
           LineBox[{{-8.547709268436381*^-26, 0.}, {9.916249049516065*^-24, 
            8.0250206226382*^-14}, {3.795820421818369*^-24, 
            3.1568124768075167`*^-14}, {4.439821003386935*^-24, 
            3.794486244171149*^-14}, {7.602526135007952*^-26, 0.}}], 
           LineBox[{{-7.422089152398548*^-26, 0.}, {4.2256960636585785`*^-24, 
            3.8139462495784833`*^-14}, {5.371856446431684*^-26, 0.}}], 
           LineBox[{{-8.960340877011762*^-26, 0.}, {3.2532978365159804`*^-24, 
            5.206338843690118*^-14}, {1.0656628964856297`*^-26, 0.}}], 
           LineBox[{{-2.901187303689607*^-26, 0.}, {1.338246059215684*^-24, 
            2.324222833993056*^-14}, {2.7650954337300783`*^-26, 0.}}], 
           LineBox[{{-4.380960386955535*^-26, 0.}, {2.546514969444006*^-24, 
            4.6706445104741164`*^-14}, {3.136047285189856*^-26, 0.}}], 
           LineBox[{{-1.5064787935973319`*^-26, 0.}, {7.440543096883345*^-25, 
            1.4411991813021866`*^-14}, {1.5358779026996023`*^-26, 0.}}], 
           LineBox[{{-2.0250395925836983`*^-26, 0.}, {
            1.8485984594679443`*^-24, 3.9933698703155267`*^-14}, {
            1.7005293949779588`*^-26, 0.}}], 
           LineBox[{{-3.2238782650410145`*^-26, 0.}, {
            2.7882128464247066`*^-24, 6.536662449807553*^-14}, {
            6.567647330166103*^-25, 1.582283698647842*^-14}, {
            9.171745109871249*^-27, 0.}}], 
           LineBox[{{-4.7158948274085736`*^-26, 0.}, {1.713491040137017*^-24, 
            7.521995285266115*^-14}, {1.0819313319047921`*^-24, 
            4.8808483235954056`*^-14}, {1.3598669591465291`*^-24, 
            6.30429360123616*^-14}, {1.2854896948300094`*^-27, 0.}}], 
           LineBox[{{-1.2377648021892086`*^-27, 0.}, {9.888990199257177*^-25, 
            4.8415090204938494`*^-14}, {1.7125758955748694`*^-26, 0.}}], 
           LineBox[{{-1.8586878443242093`*^-26, 0.}, {1.646844204088839*^-24, 
            8.750129880949983*^-14}, {3.9965609248953027`*^-25, 
            2.1821912823203515`*^-14}, {1.3836004080084061`*^-24, 
            7.763569677015727*^-14}, {7.5245146487108225`*^-25, 
            4.338840253469201*^-14}, {3.0372688958874798`*^-25, 
            1.799794027234701*^-14}, {3.686223166615177*^-27, 0.}}], 
           LineBox[{{-8.15975962368353*^-27, 0.}, {6.65734566525841*^-25, 
            4.2812822039624767`*^-14}, {1.1356436598834755`*^-26, 0.}}], 
           LineBox[{{-4.503058127315125*^-27, 0.}, {4.424155424655091*^-25, 
            3.0877086120245864`*^-14}, {9.10366891012292*^-27, 0.}}], 
           LineBox[{{-1.0905093841920035`*^-26, 0.}, {5.551310797105268*^-25, 
            4.0915726397111775`*^-14}, {1.0971948545992457`*^-26, 0.}}], 
           LineBox[{{-4.045252043917468*^-27, 0.}, {1.4650036809900965`*^-25, 
            1.7166752806004454`*^-14}, {3.0226984888041648`*^-27, 0.}}], 
           LineBox[{{-4.4957264907053325`*^-27, 0.}, {
            2.5260577772462924`*^-25, 3.1259462581839324`*^-14}, {
            2.0342443423099326`*^-25, 2.5869363262539254`*^-14}, {
            3.52484904986875*^-27, 0.}}], 
           LineBox[{{-5.161337178931022*^-27, 0.}, {4.0200064393896857`*^-25, 
            5.398811461232243*^-14}, {7.258768258830454*^-27, 0.}}], 
           LineBox[{{-1.1966995894130305`*^-27, 0.}, {5.471271423759074*^-26, 
            8.421348641949397*^-15}, {2.1414739721321786`*^-25, 
            3.3872759801729833`*^-14}, {2.729693272266434*^-25, 
            4.4370674075202706`*^-14}, {6.317008838085304*^-26, 
            1.0552079550588788`*^-14}, {1.109537850317171*^-27, 0.}}], 
           LineBox[{{-4.118793044884179*^-27, 0.}, {2.3443759769706275`*^-25, 
            4.2499813032781535`*^-14}, {1.542028118299932*^-25, 
            2.872740816283939*^-14}, {3.2703628452098795`*^-27, 0.}}], 
           LineBox[{{-7.979822895563619*^-28, 0.}, {1.0208788771685245`*^-25, 
            2.1210745573843108`*^-14}, {2.4748602932323445`*^-27, 0.}}]}, 
          {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], AbsoluteDashing[15], 
           LineBox[CompressedData["
1:eJxdlHs4lIkCxi3O4BhUShNJ7I6Kbdf9RPW9OTKoRW65y2Ukl0VhG1G77kQl
FaKbUqalOS7hoAiZktJEREUlg5n5vtCK0GU7/573ed7n99/7/P56tQOjnIOl
paSkgr/1f/z/mIh6PtgZDOBM2p7q+r2N6Pi88HmueRSerYyEn93vQ8n4+cas
LDF2iPWcA8YE2AhX+yiZdxj2Gc27MPUU6oPGFvblk9jVWpVrFjqAIlltneSp
SWT5qXIZoS/QZmn5j1VGkzi3rZ/2h+wwWlNXvuprpjDHXOc/w3yN3V9mTL/v
l6BT4VbxXt03OH1K7r8F10VwStfjaCqMQNZaHNftN45BueTI0p4R+EY1Gnss
FWIk00StKf0tROq6Q8VPR6CfruKYsH4Uf7XFJ2fXvkbJVy8VTuMoCu8muW7j
DGH/+ugd/YQQHepRhwwGB6HP0FALqBdCs5ll/SG3HxwruamzzDEoCLyy71/o
xSMaW9RxdAznUm5wHb4KwPzKSP04PganCIc1S7wf4Z1O15wGMQ72Gk2evE0n
VJI6L348Ng7RA5/5e7Ud6N32JMViYBxVGfl7QorakBjPVvhNcwKl/mpvrgta
wDn8rlPfbwJcp/BCm3VNqHFWru0qmkA3b2kcR6cei19fna3vnYCWp4mH6EYN
Yob+8LVWEOHBA98fTeor4ffa9s87m0U4MekiVetdgXX0l/sjwkWwn82ID6Rx
UT7P+yG1UASNlAPZ6a6lGA6jNW5pF0FQrrLS7+cS0C3v5XRIRKha69MuRzsP
LpW8wm6ZGA4xiuoOiYVojwnKpszE6PlO/mjGldNQaI4M7fMU49LG04KWgJNY
Fu/0VitBDHn9qa1Glsfw15cya1GRGG2HbZg3z2bioONRp50NYqwp/lFRqSIV
hvk+ib79Yly2jWug+SShdlf7JtP3Yijyr7os+/4wSosXNozRJaj1bX6iGs3B
VOtzl2RdCVrcBPvUE2PhfYTPUocEEUbTNpEb9qPlmsb227slWDTao3LjdgQM
BCbs+F8loOL0ht8q7cMpae0S7xQJhNtH2PZabGyXjNGjCyUwv2JL7uz1x6Om
SkFrhQRf3M17Zdb6IDY21N77jgTPVvxT3vR3d2iFT2ixeiWwZb028brogj6/
GLtsoQQ7u/PokQG70OVkoG88J0FDnZv2td07Uaf1+IS1PIlJukyjTjcLlma5
/E4GiehOxvNAWStoHDhxlb+ehI8jp77lJlBJtz71700kShKkejQiLJBGyzxh
ZUPiMev+ZaaMGfYMm+GxG4nv/JNe/MvNCGXu1KQ4iETzTJiGecZP+BLwrKB4
P4mWfQV1pqEbcNqtTyQ8QoKXa8p2ZTJxe/Kgc3c2ic9RereyC7Qxsyn2o0ch
CSPlAcdoK02MHBE8zColEVPfNu/gxkC1lfIZdiWJgrlqhwKL5cjp92oim0jw
866IVwuWICeFLGXeIxHXpzUjPa0IZpl+zLIeEu35E40pZnJY4T+hU/eShId5
4pI+GxmEb03PUR0ncd6Y9XFAWgoe0wftN06TePVkTcWW/AUimNyiSlsk4dDP
VHm1dJb4hb7N8JIshTOTHTNqTu8Ji0/vP31WorDX5If/zAa/I7xZw2XaKyko
/y7fbrtJRMRY/mqrtJbCYU7U9WTJKNF/4JdnbespeP601+VPzzdENeeD5XZD
Cmm8XoY9/yXRYBHrd8qcQpFa2CfvF8+Iair0SZUlBWkrB89Ofi8Rlj7kXGJH
Qe/qYs5mtoBYPR8ZHuREYVa55+GsXhcxMSg8P+9BIanqguJgMp+oMyh3Dfan
UPyboSjoWhtht3X5Sm4IBZnF46teCJuJ5vDEhbZICh26W9w9ChoIVcWckPo4
CnnHqfZow1rCdPhhdnoiBZoNrzImp4roOhp43DDlm0/hrffDyjeIgJrCzIYs
CidDrrqrK3MJ9Qr3NK1cCiPXh0Y3i64QnkqKTex8CmpByryLhy4R0yU1oqxz
FHIpowurWcVEpq6AkXv52/7gbILtyXyC33XEgMOlwF16x/ppeR7BOz+uZMWj
cHO5T9au0eOEfFlB0nQNhVUqd8MyjmURt1ro7qkNFNjWgTtCdNKIdseFok/f
fls4ygjedyiJqHxUzPO6S+FvjSkSUw==
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], LineBox[CompressedData["
1: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
t8OydOtq/7NIECnl559c27E9QWrqCGskRI319Z6btKPUz69jW2IE4pN/pRqp
tcNwOPa29/EInGb4mnVOvB0xCokRPq/C0T5vX0T1XzuM2l2TqITCsbyflrr7
QDsKKKd/f60Ng1k8f3PG5naMylBLcSuHoUL3UCr91zZcqixzahgPxW/VA2kt
5W3oHRAuyHAMRWP4GnN0RBuC3C0UGhlDoX1ut77Z/XXd13H5tjf9CTjNIhjk
r7ThuX6J2GOxJ/hx0MmLsLYhearAgPVTCLL6QyC41IpwZhXfcucQxC87vSKt
rTjgObJH/3AIotQ9xBRSW7FX6GDepqpg/Kr5fd/KuRUerNpcEQbBCGuejU9S
acWqSrbndoZgdK0cFf/E3YpjdDRT9cZB+HVJuuH05lak0InX7Xv3GAfNmKMe
DbfAdbDy3T+Wx7h3IOLgQlELDNv2a9+1DMTcxicVZsEt2JW95kI6ApBzhGpy
1bAFdgb3tK3OBSA51Zs6WrQFI6+Z/Rai/BHS+85Ecn8LenWqJnKo/PFI48vj
zfPNGN49URxp6ofnujQplKZmGEX+5x015Iv9Q59MypObYdFYwfNc1heHU7q3
Fj5shumXzG0vqh9B8s8qVaVKMwqdtcQjLz7CuK/sreGzzeg93fhRt9AHF3cY
lTBtbYbZloM/f53zwWMuZxO1z01Y8Tbtlcn3xkGBwdbXpU3421EGBQFvGO88
dIEjvAkUGTHWX2VeaN6lQZtxvwn1f39k8kh44QSDp5/E1SbwM67cnW3zhGyK
88HlI034UJ6wm+umJ553MDK9W30P2qG2ktYpDxg/GC191vMejn7f4jqdPZBz
1dgsNPs9Ns77S3EyeyC9Z+VBgu97UCpuudWlu8O/PIOvVu89OKmqpeMuu+Oi
xZ0xKvIewnRfxpM/uIG5pm5IZe97eO1s6Wh1dMOGoCCDmrlG3GIWq2Dc74bk
TaxN0i2N+Hvob/StUld8ZxyQ+p7WCHWjHeU52q7Y2b706Ll7I068KZP+vdEV
38ounbW92YixD7c/3FRxwX6Hntnbgo2YH1n8/viFM4pGU1aNmBtxMiD9rcXf
h2A5dyzEf7oBw78USudUH0J1Y/lifWMDmqPPvfqb/wASUnX3Dqc04PHU7mr3
3Q/gbKfO98S1AZ6Mqj4mDk5QYjQLYtNqQFb1pa/pnxxxZ3au9L1AAzYfe3SS
85ojjv3bvhjM3IDF51Qr/cUOOP1sr4vVz3oMRvDdeMHpgNy2kUDLpnoIRV9y
835mj4Bb6tqP0+pxIq/vot4ue1zL6OGs96hHT8cJF+7HdrBh0jt5SKcetkt7
4vq32eFZ3h6LYOF69BXbmSn42aJs30DNkX31GKmKvBlAb4tTO+s82xfr8Frk
y377EBuwXKHSe9ZZB0FbNfbN+2ywOtXk/ii7Dn2cvNdOPbdGnMnFnU8C6hCv
x5jfe9YaJLUEJUZ1iD7a37BabgWG5bwLVJJ1cNfzvRgoZ4XCZXueuxx1+D6S
tNF51BKnztyRn6KqA+v+Eq1KR0usWTXXBQ/XgnWYuVaa2RIno8fLlN7W4kyM
3RrDKwsYev67Kfi0Ft/Lyqn/SVvgUPTNrosOtWD8mcay87s5LHdvl7ilWotT
xyLzL/qbw9xWYiDpfC1sOG6Gm3ObQ8/L+A3trlpEye3QuJZmhgD+BVr/uRqM
aVkqJizeR8AJ269nO2pQwLQ2+l7yPr40b3VezK5B0cyt64XPTCFT2f5j8HEN
xu8F8ckum8Cxukjpi2kNftcI5DsrmYCjUKKXTqYGQ1vcpPkK7kH+rG2w8uka
dLJTPmjuu4eISI/ECroajAwnvvnsaoy6n7nHZSar0apxJqBw0gjkqbLw6vtq
qLOX6deqG+FDdc6f9xnVmAtpyf3z3hBZ9zS9yvyq0bVWTmRhCJXyoqk242qU
RGryphbeBVOK9HWaa9WY9v5Ev/jfXdzgGi3VOlWN8WKeVK5XBvClYlHopavG
ggXraQFuA/z6U8lhOVWFLsskNrrcO5DX6r36X0sVTNoE1CL576Dx981OxldV
yFs+86u5XB/MHK7dzEFVkLxEZ/NMSh+/5nx0hcyrICzyK3ilVw/mhl/93OSr
QLNHVKPXQA9dgZK6U7xVOH3y/Un237dBbx4077CrCsdljsR3Bd6G0wleea6l
SgxKC6QOcNzGwLVrvn/6KhGVLm16qlwX8hfc0+bfVCJy01XDN+q6iG5KKKaP
rYSGoZas/bIOyukvN1x1rsS2nud7tSJ10MhyYiRNpxJ/w6s3qAvp4BERZeAS
q8R4sui/upJbULYvVm47VgnV4bNRn2hv4ZXxZFXklvU9ZNT89TcVbdwJd9by
mKwAUTmY3ZhxE2mrkpxPWiuw1t5z8z71TezyMztbk1sBhVm3TVU3tXCqyMJ6
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
yC3n1zo6vsiI9zlQsuUd4d9ZUMl30hdRnz6o6t8oJ6Yc9FGuM4+QcPbTc62Y
t6Tsks0VsTePoJ+i5eU7UUZK92Z+dHJ/hJk7B/Z2CpeR9zsaLTmvP0LyD4tt
rGGlJOGIx95rLI+w4jcRrfyzhGQpsI4Pf/IBy9u8IF3ZEvJRX3N+PNMHi2OV
5FTuG+LVEaJxy84H56NFnWP3vCHfClz5r4r54HfdsxfxbsVk5eem5IQdPriF
95GHfxYRoaV3lXeHvKE2IJu0WaeIHPLh/hKT7o3Yky5RYt2FZOaTTNQlO29M
782qfHetkChqt/y7JuGNbc4WFMO6AqLndNykltkbGjkbGE6LF5BvviIH0z97
4e6p0F9LNfkkPYdNYinXC2r9/clFV/PJxuW7e166eSHw+ENPrbbXpO6D3NH3
8l44Wlpo0a32mpTEPrWUPbqO9y7Z7hjLI7tnxC5cmPeEvn+F6KpVHlFY0zrs
V+MJ0fM9XL40eUS2pOk9ifCEDuOQc3p07rrCu6irGnrikviNmev/5ZKVHZ/n
Oy944tmlz8H6jTkk+vFMQw6DJxSL6VtG9HOI9cgZ+plPHuh3KDYspM4h8yXb
FoLyPbBUyPD7hUQ2catleBP0yAOzwk/GtfxeEXXGx+HTWv/jpxnud2WRd/sV
qjN5PHBSm9Ouii2L1Lkv2NXReuCc1PmDopYvSdeXTxxkyB0Zp4e/tNdnkiwn
kVamPHfEWJ+pUz+SSRx58ppFHrnjLlX/iRrnDHJb/6Pee213JF3l+f1rOJ2I
NX7vzzrvjjMMP/NGxNNJ9Uc+y+/07sg/QatomPWCBO6MtXMZdYPM9lh1u30v
iOaB67wmZW6467W57vejNNJX1DaVHeaG0wWfmQdXU8n3LOp5KVM3sJTyCm62
TCUfT7E+EbrihgmNp3HGkynETztjr/NhN0gsPT8+dzeFPL/m3svy2xWTD7cf
8f+aTIx92g5u7HLF7nxhGXbjZNJovZ9cznKFQVZS74ufz8nQyFxgl48r/i1c
V9hm/5woH2pcyb/tCniYl/FvfE5eMbm8mLjkinE3ettDIUkkReRCh+k+VzR/
CL/86kgSCW4gCe7fXcD232sJSn4iEeVglapPcoGBV+LRIOlEstVAP/WFpgv8
+/I0Kz4nEPGpS50cu12waNhoqf0wgTQdZ2K62OaMT2wW3zX2JxAXih7dd19n
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
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], AbsoluteDashing[15], 
           LineBox[CompressedData["
1:eJxdl3k4Ve/XxmmSiJIKlVJkiopQyr5JiMj4zZTMaaJBpiJjoslUplTIlCSE
lJQoIZJ5yjyec/YxT0W8+/fve/451+c6ez/neda6173WI2Rz2cB+GQsLC205
C8v/vv//Z0F/87abj7Mgn/Axsbg2EM/nN0VOmxaDK/jVe/mESOQdLlbzli5H
0gNJ5bmGeMRplQ7tr6jBK9Pswr8qKfgme8Tx2uN6CMtGcPFGv4J9zVCJgkQz
PrvWubdezIJm+LsUoxdtKGWcrk9geQvVu2+KD7B2wtZgaHX03TzsDU+qF0rs
hjn9atcoewE2yetcdJXvhcffZf/ab31A1SXlpuqiPiyOHYgPpX3E74/Bry0O
DmCnpQfktT7jUI3UVfOUQdSO50r4/SpGU0zHnQW2YdS0/jPZMPsFnsb+Cq4W
NBxuyTs7wFeKDU9TE/+l0LH3MXcsl/xXSEa3fv3ez8DVprqSpJPf8Ls03Yl9
MxPXypuUimzKYPj6r8qs0ghMJbj+XLr2HYaf9mV+Mx1F9sxTl3Kvctw8oeBq
JDcG57XiP/oCKjBkT3pdKBjDj4zI9Lo7lfgdUPWTkB+H6w1Hq7TAHzCIbRZj
ZI5jt/2vZjffKnS2m4kH75yAEWdNnKF7Nbo5VTRlwiYwzz/XqXPxJ2JUifal
vxPgl2S75m5Wg72bONdwWE2ihPxxfmLnLzTcLG68VDyJNse7vHWRv3DptfUm
YusUuOKDX/StrkXJ9r5rUc5TWPptfWqvRy1qgh7ZhpVNQYHl0rGioVrc19eW
ObZxGrQDQlaPjepAJO2e+W45DbrJpPPnz3XIqnkUdiBlGjeCTwqritejY7vr
24ThaTSzCE+KhtWj8vmHut2iM/ASVlByma3HjaRP0u3WM0i79uOIzOkGbPGS
qm6MnkFHay/72c8NiDCdc5eqmkFvtMCTzUKNsGwsKJ6bn4FHpEiZjm8jwoey
p3XEZrGg/FWZu7sRqyJvSajqzyL+kGSCjVITmNX8MiOus2Dj2mZ5MqYJ2vMP
n9rFzGLZ3ra6lskm3C8pLCosmEWkg+XB1TrN0Kg6+nx14yxOZnzM6U1qBnPu
zxqrkVkoCfcTTvPNGPmsdLtpxRwiy/W/Zem1oOZYirYP3xwy6nrXZyW1IIR2
3PSq+BzMNNwars62QOr0kHmRwhzCGpRezB9vxcf1kp/cVOcg8api3iCmFd/X
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
D/M=
            "]]}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{True, True}, {True, True}},
        FrameLabel->{{
           FormBox[
            TagBox[
             StyleBox[
             "\"\[Eta]/\\!\\(\\*SubscriptBox[\\(\[Eta]\\), \\(c\\)]\\)\"", 45,
               Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}, {
           FormBox[
            TagBox[
             StyleBox[
             "\"P/\\!\\(\\*SubsuperscriptBox[\\(P\\), \\(max\\), \\(Wh\\)]\\)\
\"", 45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}},
        FrameTicks->{{{{0, 
             FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
             FormBox["\"0.50\"", TraditionalForm]}, {1, 
             FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{1., 
             FormBox["\"1.00\"", TraditionalForm]}, {0, 
             FormBox["\"0.0\"", TraditionalForm]}, {2, 
             FormBox["\"2.00\"", TraditionalForm]}}, None}},
        FrameTicksStyle->Directive["Label", 
          GrayLevel[0], Bold, 45],
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->{{155.0625, 43.78125}, {127.62421875, 
         29.250000000000057`}},
        ImageSize->750,
        LabelStyle->Directive[Bold, 
          GrayLevel[0], 35],
        Method->{
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
          "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
        PlotRange->{{0., 2.}, {0., 1.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}], {400., -243.3508830702711}, 
       ImageScaled[{0.5, 0.5}], {750, 463.5254915624211},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
      InsetBox[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], LineBox[CompressedData["
1:eJwVxX040wkAB/BxpSNEXLXQdFqR996p9tWQXPQgL5U7UU1Uz3qRlyiXt/RC
3lJXEWqOvLtMXrNjmmLyMiZvs/2yGhd6s1R0d398ns/KQyfdGIokEsnpP/9/
uaZGja4yhaoVceOuVSVAETeo/fEkDAK425UZ5Ui2VVAeqpnAmWqXu8dyH8Hw
nqZJuu1bBNAXpm2ZYsNmrepDy+BxvCZqj1PtqrDTU2eRmCmDyKwi/EB2Da7r
GHAtdr/GxfgI348/1GNr4bcFw5RRVCbHdekxGxDlkJU3MCtBF88+QWGSAzvf
DJeqdyNwv+XMOWnUCHas4VenH4dB939B+s5oArPQi2cV3I9qjouFD4uLktiY
qSlzIXzYvHn2r5qhZLbmjLG1ALn+aYrBVB5S1h6mFKd2wkxLJqw82gK76SDm
3hPteKJTxBgoeAZyj/93OZ4jpq3s95qJ55ihnG4MTH+Kn+l3Hlqub8OrGLb2
Ir8mVEQFpxqE8dFQlJFufosDuUHIltD6dpx70XyjcV8dWDOsjGsKHXCQZSzK
Ma5CksAuJozVgSheab4wtQJjM/57wh06cfJlMONTRDkGyeXiK2OdiH7GjrpZ
VAzly9dbsxO7sMmzXt5OfYjAgI/61RbdyJkrM1JyzMUOq3E6v7sbE41Befy5
HJi2l1YKQwTwUu+lmzHuobb0sbyL3ANhu/Y7Mes29AkP9+q6HqzJ2y+JzUxH
vXSyJfZgL5TzxT9pb0iFSuxgk5miEL6nUy9E3r8OtcOEUhlLCNPD23vG/76C
xlZKJsmhD0m6DI+5B3GY61U/ulTWh7nKEptNxtGw1TCZlF19iXC+fUTd+Uj8
MprJO2HSD5+wJu+xpHM4FvJ+OIXfj+nzN0lex4OxevdItSNzAPyvUS9Ek6fh
82vo+mj1QXAvUeabKDFh5t6/e3XJIFwHD33X1wtEx17FR3rOQ+B+snIumDuC
s6q+G53Gh5DpKf2r+KofDoSWLUu5PIxTbvbPlzj9hiytbN+nq0S4EMAOqQva
B4Fm6FRDgwjIOjpdwnCHm2XHzlyTESy3bKEyFFwxrrHQOz1sBK7NgoFPnk7w
uOrPSmwaQfylNyattx2wSkv6haEmRhjFBoksW9Tuelc56SHGDU5+SrmnDRSc
/R58zBBjdj1liG+0FZvZutyNEjGIBbO9scmbsJTDlgVSJZj+4j9Krl2Hl7rb
Vbb5S2DVnvZP+WJztM6DhyNLAuNryWppHCNk3dH4vEIkQcnBnM+lblR41bbG
bV5CYI++V+qOBysRSCp4L99FQEVok+1L1UOKrZ1WUQiBuRrpSkO1ZXCUHroS
fY9ABGfdkepOLfwxdGIsvoGAQJk5Yr1HA54bZV05fQTOngof7eSpQGD4ZV/8
GwLFmvPdLd7Phz3Zo7nmLYHl0v2Ln0wpIDGY4X1RSsAiUmd/AmZpg6oDxwUd
BJ6abru0sElOmzFQyT9YQKBFUSDys/5AoxXdTwo8RSDV/kN39OcJWh/VrLCF
QkB/tf23hLY3NCeyfENHhQQkb1td1mOCNiRTbbE2lkBjp3qEi7aI1pi55E/N
SDH0P/DEX7f00ULz1+Yk5Y1Akq5jxLzbRbsbI3Uj0UVIIBtJhMptNNNCz0zz
5kH8C57QWqo=
            "]]}, 
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1:eJwV0/8/0wkAx3HhiuSi1JRwlfQNRVJKn3dHvjUSfdUjRAx10bddkURuKR3O
8qX0xejWl0nCCEXkS1PIl+XLIjObbabMl4jIdT+8Hs+/4LXUJ9jNT1FBQcHj
Z/+rFTpiY6UqR6EeTeZa+BR1cydc6p8PoPyuBl/VLwcb7gQWtRZ/gY+qzdh5
Zh6WmZ9jx9h8xgTpUJSLPB9dQpnnUqoMDLVZu+x2FIIcw333NkgKFiVKOZpR
jFULhyu1yGKYrl1WZKJcgtonwbyX+iJkK0kEAUGvYDovsip/SgAdju7A+oEy
7JFcQtwgH22+ZSWs1a9Bn7QkhmZ9QkeL1iwHSgXMBlKG28/ykMq7P6Pw30rE
srgPY9e1QjDOMMgTVsF0clt6lSUXisoRfRMr3iAvQ2xsR29ETdyUrXsABw+t
7mbRjtfDQPeeJC2zBg9PsLca4S3czAPOPhx4C/RQitITq8GVPLq9y7wWYraz
udORCtjmcgJCQuoQYhSleSa5DG9oz/w1XtUjNo1jdvDAS3SsOT4jQrEBSn20
frs1hahQcxq+zWwA0TgqiUtgQxy+dtsHh0bQdRe3lobmYC2ve6NhfyOiXJTb
d7GyYEQuMoyJb8JuqZJj1vLH0Mqd1psya4Z8iBM9256JzU7KzRdamnHei1s2
NpkOC3JgmFIoF5Ycwwe13vdAaysqT9D9AKVLZ9ic9FtwYtulG5R/QGBlQVVO
ahLe3yJ7Ffu2QM2LTvvLlA6Wv/M5V5VWHEg9+oB/Nw7FBZx4SWYrzEznb6wp
uYbkL+TgcJc2aNzZHbObQcOY3txhzeE2UJpYLaMrL6NsWmd2RnI7BLny6jnn
wuFHM31ivIWH9v2dDZMxIfhIXsLJ6+TBPtI1Qs+fiuXK2z03RH5EV20kzaX/
FLKYru6ZBh34Ftb00VohCMMNGrcXczpQmTZb/YB2IGy1FoxcOt6JgY4pO8mE
L67+SNLn/foJmVHPd3ZGeyPszdHSlbmfwC5VyTVx8IAx+ZSb/74uLKphvfQ9
dRD00ZuWKd+6EL7YmVruuxfx0zu4PGc+Toyry0tmuIJapu92JI2PQfvJRLm7
E9Ttl/zgyfkoe39l8P09e/iFB6Y7WneDNMqx8M60wcGoSgHrRjfeSa1/0fPa
jqGZrb9PCbtBi1PdeXrbVri5G86DhQAzZDcUUx5YoPCFBTUoWoD6TKanTbMZ
dAI791xrE8A84nFCot06BOkn7Y9d3QPKPlHpmbHV6N18veNcaA8u9jreVP17
xc/PCgZt3/VglMFpSv20FAypgvWIjhBnjbPGN6bpYvpexpxLfwihHVDBPnhN
G2uy5ZqCl0Jw//yok+Cihe+bEamtLsLkE5MAUp0GOrPcupd4iNBxpMj6dLUa
NqkYjUieiKB0oiSDLZ8JetueZOqkCD55cY34oojp53uTi8m9oKqZTQxZTBP1
umWXn6b2wsc4OCUof5xYf+xisJ20FyfHHpVGG34l4sejHlM3iZGvMla+yHuQ
2L0q6ZAxTQyxqcKVOlo/scXGeP7hJjHaYpnuQk8xUenAtPisJ4GH1f6ehXo9
xFzm1BbOMQmMAnb2KG/uIvZp2OS8z5dAeF+R3h7cTjxSzvzRNS2B1/rmJOcs
LvFs5BWrzkGK31JGuFYVDUQ6ibrw6D9SzNOPyPbWfkeQvvaTPVqksL4Y6bOm
qYoYOnElz39xHzRJ9S6OEeWEPaU6ccHhPhhYNi9Vl78geP2n0Z7ah+skI9ep
tQXEkpkGc0c/9IFhbFbLCckhHhTKKMfnyJB1v7WJ75pJjIcK+5qsZOBfpd/K
XsYkrudX313lJ4P5uu862csZxB6GEi/gsgwVnrNEZlY3iVqTAvWOeBn635w8
f7ImgRCFuYVl02Q4fCHcR9HxGmGi+vWCaJ8M593dR9r1I4nsweqLr4V9GL7v
8+qQL5XYupKUGDQkhZiUUdqZSyEabu3wqq8QY7AqpL/4mRNBLdYsp/Tw8R8k
eu99
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], LineBox[CompressedData["
1:eJwV0G0w1AkAx/HtYo5ILZG2y2XaUCKDoo797cpkVbrW0yVJ1lWXVB5SRy66
PD9EHrYSR5w8jmdmaY3N0x4bsYRd+99L25btwe0VwlSue/Gdz/uvMfui+6lv
SCSS69f+V27xnt9q9hFco/g3LG4N7I7kjQuF81iXwdGrtauDuzf7UKBqDooN
LkUxvHr4lZ5gUmSzoOd81FKxGpEj4DJlhR8Q4xYVYT7fhDYW7wcJ4z384/as
DSprgXqG9sqQIRVSeqPjpgO5aI18SUqumUG68z7bz9va8Jkd5Ul59AbpusPt
1IWHiMjSp3sop/HKL/32twPtqEkz3qhm+xIKeykRVdYBRzWXFbaVcvAL932P
Lj4W4m0+JrOm0Pz7ToP8pkc4yjR0rPeR4RBlue3Xsk6MUuglpyMlWH95j2/S
vS50LtnYLiyPofx533JKZjcKA+v3d06P4JeRneEHE3qwuIXklGoxDIFVyfWC
6F5YzGfVet8cwO6k0UvHwwUo0MrlUI73QUNgyT8b9BfIc1VfKM09YGYo3lYF
9IG+7oxBVEonDHwEBat9+jGw4je3vfkduEs27ok+IkSlFqNWoGjDNWt8ULo8
hr3+n96p4hYwt53vcMEAqqy7w1oDGlH5vNMpZfcglEdEl3qD6hD1em/pA4sn
UMusUBb1VqGo7dwxV90h1KWZPly6UgaelHAqTh9C8JP9YaWDJbAsJWuLNYYh
OsjZpt9YBPEqj9jpG8Ngt16tLjTOh4VmjobwyzASTl5XWVXfxjvzNdejIkWg
izdmOb7KRvlh75WqDyIwb4msznIz4eZc+2jLhRFssSz1NtFNg/OQG1/76zeH
Bbu6ltREtFON7hcFjIIcn+pyhncDw8M7fEckowgqszH9lBiLv00fKzkeT+Fh
6fRCXH0VvZ4FsxLhUxRy/brzTK4gVDvuVNq+Mdxx7mNnHQvH4J29qpy2MVBv
GNSzzUMw60VNkFiNw0smJQWSzsHNsqmR9mAcF27F+C4lnkbjUo28gDKB7aHB
N3X72djE6YodTJ+A+didjFiWP0an/BYKlycQZ1isyNM/hhaZYZL4ohi9s0lj
pBYv5Ir8X9jLxIi11lP/rOOO4/nheSEHJMi+FzyzXv0waMkO1iZNEiRNhA+o
ZpiwbJ5b/IcyifKju3bZ1jtDy7Mh3P3aJGSrfTN/NmPg/LsDP7YTk/BYtZga
d94B/KBuWaK9FDphFZe7EuxQHP1S+TZdCj+hVpEwzAazVWMCdUKKhqCUhAYd
K9hz5zndVAIJplfOJUdtB6c6IfhdIAFDdojC+vFWZGWZMXXuEmB0tc/eVhpD
Qys+I6KTQHnxfAcrYBPkT/t6TGQEdnhG7JrRNESoztTWASWBE8ui1OwCPUxV
iJqqnhPQLN2dcVK5BpqWD+gpPQQuknfoZko14Wf2uvyPmwR4ud8xeIQazvpH
loTuIbBBz+0WpYMEFrXyUztfCnpEoqF+8xLtEyeX7GokBY8uP3N/8xzNzqh/
oeHAJP6Vi7xWp6loiz/1H3RwlEBx8hn7GUdJ8/FZqxfzZgIMasX97Ety2hMy
I3696zj+A7FVQRI=
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], AbsoluteDashing[7.5], LineBox[CompressedData["
1:eJwVzn080wkAx3EtjFKKxAuJc0oPlFxC+n17Lg8lsZJjlfPQg5IVnVBHraTD
UvISpwjRg2I082xTepJnWaFt9mQ7jVRLStf98Xm9//1YBIbvDCapqakF/Ox/
97aowo10vqDSjK7wqiyB+EClhXqfChdIzxkCrVLEe4Wo60GFjYIsjbAvZTgb
00GWenxG9Ib0M7zv5chZ+0hWZ/AJe8T9dqvnsJBwroVncn8MRlNX5Lc4smE7
l/eo3OoD4qwfLMXBatCPjxUvZoxg2d0bcfm3apGXb2NV8HEYmXLDK1RJPY5Q
MiPJA3KEXbpXp2XUiNEbSVPC/pVi/Po7n5fgwIc93bVgsRh1NOrsHwe5CKCc
f+h0Q4hY5cQjp2tN0J+yMh/b+FiXmc61anqMo/zDSr9DfSg9uFJ4auwJFNVX
Oszv9sLf9VPVN8unsM5aQLjv7oazIl4/mvIMP7Kqk4tDO+C4nmzz5MJzZOTG
hK4uakX95j5aY9ULvDxpItpp/QLL3Lw2bX//EimxGXm3iWYcWq6pTvnlFcy8
o1L733BRqfJYw9nVisEyUWricANYpM4fnE1tSGZMseW21cBmeXGhK78N6okc
88bYSghjGjuVp9pha2P3g95cjraeHb6lBh1gzrCqmZZdimsNMz8kPfz5pXzt
5dl6H7GmfNtT7p1YKqWxe+yLgYK/fOMkncjUipzRu7UA+xKrQ67Ed0GwhbbV
5lMu7pmzVNWm3Uiznxgf35QDU7tF21WsbjSrrTGtOp0JlbGmz2bvHqz6WGT3
+Xg6LpZo37rzvgcVhjoeGdpp2NHvcHVB0mt0ZLhdInmmoDBE4Flr1QvWek+V
Ke0iOnWWSmiNvUg3a4qw30OHVuj8KI8AHqKVF7YtkcTD0EHXbMc4D5SduXu5
k3HwjGBH0dPfoFvPbr6BWTTuuAee+WT3FrtIXRFbNSKxNoXadufVWzgTS7Qn
rkZAOiF/XXq4Dw+oSrZd8BGQ+5UTRtr9MG2ayPdIPQCzlpCXI4X9SG463bgl
IQgbhaFzPTYN4DbzabWu2X50RD5XQTSAybkusbap/pCse9s+ePYdlqg1rrJq
2415XkdSrfX4IC9i1N3s9QaDr0xqD+Sj3Nw6hJK4A9dY76dNMPk4uTDolmOi
OyputAUxNQTodqHau8s34/Hw9lgtXwEWz7z595VZG1CWFzKpeVeAQC03x94K
YFXcnGj2pAAnDkT61/o7o7CK7LTQW4hLVfrv8mQrsbNlo413kRAcY1lZsf0K
3KJ0lztPChE3SZM7uNiC1X4io8tnEAHMb1P7jBdhoWXD+ln3BtHu73RhoOdX
9A+rTnRPFWGDC+2plbsF0grmHFP3F2Huh7GSiFJTGE8zGo0qF0HfUjuB/sIQ
EwuCAqbMEGNZzUBYLFsf9rOODJ0IFuN0mW4affcscLdfzMitFWOjZtoulu50
lFge9PI1kIBZ9TXk0h+a0NrnUxAWJoFOUUrg6XgS/PTOj1RwJKiRuZ3RTp0k
RJyRLl0jKbZkrmbUrhgnQkspI3vCpBD2GbusqP9IvCXViqLqpUh4wjtwbMYo
kRGzq9lttgzZh3P+tPiqIBgG4b+x98tA9eQH2EskRN+x/Kq8hzJUXkyWW5QJ
CcFXASH8LgNZJzhl4NgAIfZ8kOvqOgQzd1J7PrOX0PC7zv0nbQj0UedRvy+d
xE2KX8xl3hCozzs+BOu3EafmcCrq5smxfDBIVN/wjBDk9b/JpsrB5PnbdMU3
EULx9UJalhxXBTLn/asaCEvW5uS1nXJoRFTz9h1lEw+//340R10BZt1iukMN
k3CueNOaYKOA3piJc8rqEsI3Xtuc76ZAk/fts8NNhUQBf/jr+90KRA0UhXdy
bxKOTg7UJx4KDJECxNnyDMJk32Wyp4kCOX1hko4NDGJNq+G5p7flSJIZLtQI
P0c0560lq8qGQOttdvWSRhJDCS2HX5+XgmHrwNHk+hNZ8ZRspYyP/wBWIeRo

            "]]}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0.06000000000000013},
        DisplayFunction->Identity,
        Frame->{{True, True}, {True, True}},
        FrameLabel->{{
           FormBox[
            TagBox[
             StyleBox[
             "\"\\!\\(\\*SuperscriptBox[\\(\[Eta]\\), \
\\(r\\)]\\)/\\!\\(\\*SubsuperscriptBox[\\(\[Eta]\\), \\(c\\), \\(r\\)]\\)\"", 
              45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}, {
           FormBox[
            TagBox[
             StyleBox[
             "\"J/\\!\\(\\*SubsuperscriptBox[\\(J\\), \\(max\\), \\(Wh\\)]\\)\
\"", 45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}},
        FrameTicks->{{{{0.06, 
             FormBox["\"0.00\"", TraditionalForm]}, {1, 
             FormBox["\"1.00\"", TraditionalForm]}, {0.5, 
             FormBox["\"0.50\"", TraditionalForm]}}, None}, {{{0, 
             FormBox["\"0.00\"", TraditionalForm]}, {1, 
             FormBox["\"1.00\"", TraditionalForm]}, {2, 
             FormBox["\"2.00\"", TraditionalForm]}}, None}},
        FrameTicksStyle->Directive["Label", 
          GrayLevel[0], Bold, 45],
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->{{155.0625, 43.78125}, {127.62421875, 
         29.250000000000057`}},
        ImageSize->750,
        LabelStyle->Directive[Bold, 
          GrayLevel[0], 35],
        Method->{
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
          "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox["\"(b)\"", StripOnInput -> False], TraditionalForm],
        PlotRange->{{0., 2.}, {0.06, 1.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}], {1200., -243.3508830702711}, 
       ImageScaled[{0.5, 0.5}], {750, 463.5254915624211},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
     InsetBox[
     TemplateBox[{
       StyleBox["\"Chiral(VP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False], 
       StyleBox["\"Helical(VP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False], 
       StyleBox["\"Chiral(VTP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False], 
       StyleBox["\"Helical(VTP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "Framed"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 0.}], ImageScaled[{0.5, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->1500,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1]], 
              Line[CompressedData["
1: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
cNM/HkRScPafzw8Owv/9bf8DEVoGeQ==
               "]], 
              Line[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAAPWHK+THQbwAAAAAAAAAAPqYBPwm
AJs8I4lgIbGuRT0DcZPOivGaPKDg5ngVPEY97eZPJetMlTyyW0YoVRBCPfq2
rkClSJM8EDpVyz7OQD3NhKXNu+uPPG0PkLx5ljw9l/hsO5TIkDx8kXbfpuQ+
PQHyxVCcF4o8hh9Ol3utOD0RsKIpppWLPHUnDa9yzzo9L5Pwdev9gzyH4aND
yvczPQ951rtgJIQ8Jef/FpWsND3OnX6ocoh5PEDWyoiV7io9TCsDerTLfTz3
/YaNByYwPTIvy0/D0Hg8wATfiXSkKz10O+/hqfx8PGlTrcBDlzA9Cv45sD+w
cjzP7LPw/vslPQA0ahF+Jmo8aKopNdicHz0n3wvXYpJmPGVKO75/Chw9c9H7
+UUwXDwloKihUP4RPdBrpM5QSms8il8h9NDmIT0lmtqGwG1YPHt6hDmwdxA9
RtNwqnS1WjxDR4uYl4ASPUJlcWWCF2M8f4QrC8YuGz3nH5KaqA9kPCjkF8s8
Wh09QKadpGrp7TsAAAAAAAAAAAbfs3A=
               "]], 
              
              Line[{{-1.7482891887326614`*^-20, 0.}, {8.75617094308391*^-19, 
               2.770896726759408*^-15}, {1.8611120547135377`*^-20, 0.}}], 
              
              Line[{{-1.8101496134619278`*^-20, 0.}, {8.286186057251568*^-19, 
               2.769161272097717*^-15}, {2.0327725772788658`*^-20, 0.}}], 
              
              Line[{{-9.916216052543838*^-21, 0.}, {3.5931450590058615`*^-19, 
               1.6208787031326511`*^-15}, {4.3016843872716995`*^-18, 
               1.9941518741444643`*^-14}, {3.2918177976542563`*^-18, 
               1.5681926415185916`*^-14}, {2.571634854154754*^-18, 
               1.25897432460486*^-14}, {5.682723202713798*^-19, 
               2.8589596897697117`*^-15}, {1.2256450352414521`*^-20, 0.}}], 
              
              Line[{{-1.653717032331811*^-21, 0.}, {6.150659039751249*^-20, 
               3.2678426414989453`*^-16}, {2.94082493890027*^-18, 
               1.6056565268748606`*^-14}, {2.1276721593488602`*^-20, 0.}}], 
              
              Line[{{-3.454015678810442*^-21, 0.}, {2.0526952653998908`*^-19, 
               1.24992523524158*^-15}, {5.0441071184035665`*^-21, 0.}}], 
              
              Line[{{-9.76643279028455*^-21, 0.}, {4.268110095507568*^-19, 
               2.7446265997601575`*^-15}, {2.0636012230673944`*^-18, 
               1.3636957733486757`*^-14}, {1.9045716188833066`*^-18, 
               1.2934007202113946`*^-14}, {2.208705563690822*^-21, 0.}}], 
              
              Line[{{-1.960232261697936*^-21, 0.}, {5.570736413474629*^-19, 
               3.9951820161278644`*^-15}, {6.460830547693344*^-21, 0.}}], 
              
              Line[{{-8.095089499997252*^-21, 0.}, {3.3715216140432984`*^-19, 
               2.9265688938527493`*^-15}, {8.138112651965307*^-21, 0.}}], 
              
              Line[{{-3.7462980439042486`*^-20, 0.}, {1.374105503397344*^-18, 
               1.7003067987916326`*^-14}, {1.5741929698135102`*^-20, 0.}}], 
              
              Line[{{-3.491696377573823*^-21, 0.}, {1.4531101341567823`*^-19, 
               1.898865455521903*^-15}, {3.3196736217550154`*^-21, 0.}}], 
              
              Line[{{-1.1357285820444092`*^-20, 0.}, {8.746979495632542*^-19, 
               1.2070971889582269`*^-14}, {1.2503967218207833`*^-20, 0.}}], 
              
              Line[{{-7.565903156287823*^-21, 0.}, {3.8619802593243415`*^-19, 
               5.628370324985521*^-15}, {6.7534713979236926`*^-21, 0.}}], 
              
              Line[{{-5.727009838460788*^-21, 0.}, {1.032713901853706*^-18, 
               1.923760525842252*^-14}, {1.0558873892042578`*^-19, 
               2.0213097424239236`*^-15}, {2.4561153978407414`*^-21, 0.}}], 
              
              Line[{{-4.2268521792933594`*^-21, 0.}, {
               2.0101754120397766`*^-19, 4.063851154952539*^-15}, {
               4.379983284547011*^-21, 0.}}], 
              
              Line[{{-3.641729175387087*^-21, 0.}, {1.4965374234117773`*^-19, 
               3.2834037867341697`*^-15}, {3.55917482299323*^-21, 0.}}], 
              
              Line[{{-6.143876632778049*^-21, 0.}, {2.7980304919432976`*^-19, 
               6.4830258641146645`*^-15}, {6.067812299710343*^-21, 0.}}], 
              
              Line[{{-4.0988776747634885`*^-21, 0.}, {2.56435111294875*^-19, 
               8.944737002833803*^-15}, {2.0915966757014688`*^-21, 0.}}], 
              
              Line[{{-2.7199927629551517`*^-21, 0.}, {
               1.2916534525838065`*^-19, 4.8895523740690356`*^-15}, {
               1.5578858175750825`*^-21, 0.}}], 
              
              Line[{{-8.804605302521819*^-22, 0.}, {4.686049141949669*^-20, 
               1.873348645573019*^-15}, {1.132645592325979*^-21, 0.}}], 
              
              Line[{{-6.229604105134879*^-22, 0.}, {2.4739127899138174`*^-20, 
               1.1029949721012563`*^-15}, {4.623724604727093*^-19, 
               2.118485291303688*^-14}, {2.0174683530566962`*^-19, 
               9.499146231387844*^-15}, {3.2306399699431755`*^-21, 0.}}], 
              
              Line[{{-2.338298257710945*^-22, 0.}, {8.719957141933382*^-21, 
               4.3359163332087097`*^-16}, {1.987159157821241*^-20, 
               1.0154149366498252`*^-15}, {3.3047058964009*^-19, 
               1.735353929685027*^-14}, {4.51115591204725*^-21, 0.}}], 
              
              Line[{{-3.0184386202189397`*^-21, 0.}, {
               1.4505258236358784`*^-19, 8.971123906362788*^-15}, {
               2.7626121579623922`*^-21, 0.}}], 
              
              Line[{{-1.2953435712075025`*^-21, 0.}, {4.694663510352682*^-20, 
               4.371106191800863*^-15}, {1.0257583751923687`*^-21, 0.}}], 
              
              Line[{{-8.594065442504543*^-22, 0.}, {1.7065481979592108`*^-19, 
               1.8714217995115532`*^-14}, {1.4120873409366091`*^-19, 
               1.5913256413110075`*^-14}, {1.965414150201985*^-21, 
               2.2761241958676056`*^-16}, {1.9695958824364572`*^-20, 
               2.3440311632025344`*^-15}, {5.013790282290535*^-20, 
               6.131924442092747*^-15}, {1.0322333283604907`*^-21, 0.}}], 
              
              Line[{{-9.13415649115652*^-22, 0.}, {4.1402042998463564`*^-20, 
               5.647157695270026*^-15}, {1.8351113737758278`*^-20, 
               2.572260505488557*^-15}, {3.0940650814742276`*^-22, 0.}}], 
              
              Line[{{-6.481355384528116*^-22, 0.}, {1.1938176452260924`*^-19, 
               1.7671738497143066`*^-14}, {9.509259101190029*^-20, 
               1.4465463175497807`*^-14}, {1.5455200251783569`*^-21, 0.}}], 
              
              Line[{{-1.4310450896784535`*^-21, 0.}, {8.304251140504489*^-20, 
               1.3340585796295719`*^-14}, {5.897747874210365*^-20, 
               9.736548014225503*^-15}, {1.022602859157265*^-21, 0.}}], 
              
              Line[{{-6.580314943139763*^-22, 0.}, {7.875296235244597*^-20, 
               2.0669988850529527`*^-14}, {8.72321930981597*^-22, 0.}}], 
              
              Line[{{-2.575771681945772*^-22, 0.}, {1.1340759810539655`*^-20, 
               3.1434334454276266`*^-15}, {3.449594554860897*^-20, 
               9.82595018578274*^-15}, {5.900342408151528*^-22, 0.}}], 
              
              Line[{{-9.050374365445514*^-22, 0.}, {7.686860193406997*^-20, 
               2.3123004403622436`*^-14}, {1.465134574517875*^-20, 
               4.529155008501277*^-15}, {1.097702056883537*^-20, 
               3.4871331744936923`*^-15}, {2.0743502232666786`*^-22, 0.}}], 
              
              Line[{{-6.243913992609773*^-22, 0.}, {4.5728914676848473`*^-20, 
               1.6201398472500565`*^-14}, {5.374400720389193*^-20, 
               1.9567531572101456`*^-14}, {3.419118980080734*^-22, 0.}}], 
              
              Line[{{-5.0091164400405703`*^-23, 0.}, {
               2.3803151885943553`*^-21, 9.932587814830014*^-16}, {
               1.0050200142293426`*^-19, 4.3097000606808675`*^-14}, {
               8.539313232725525*^-22, 0.}}], 
              
              Line[{{-7.304650267430084*^-22, 0.}, {6.628996020833452*^-20, 
               3.001987460595986*^-14}, {2.7939827623241253`*^-22, 0.}}], 
              
              Line[{{-1.9426954588971379`*^-22, 0.}, {1.768120023379581*^-20, 
               8.455935051472915*^-15}, {4.276376952483824*^-22, 0.}}], 
              
              Line[{{-1.2021822663901072`*^-22, 0.}, {
               1.6617367553346058`*^-20, 1.1964043705456804`*^-14}, {
               6.664949378607826*^-20, 4.931249904241652*^-14}, {
               2.90760023995094*^-20, 2.2107480214187726`*^-14}, {
               9.25416102246403*^-24, 0.}}], 
              
              Line[{{-2.527619477481522*^-22, 0.}, {4.374328987580829*^-20, 
               3.609517637780852*^-14}, {3.4060209049776945`*^-22, 
               2.888214388518413*^-16}, {1.683420343761668*^-20, 
               1.4669627351265003`*^-14}, {2.9779998026094844`*^-22, 0.}}], 
              
              Line[{{-3.016678469206873*^-22, 0.}, {1.5783425602486417`*^-20, 
               1.576339438014834*^-14}, {2.694966836808758*^-22, 0.}}], 
              
              Line[{{-1.6700438786606327`*^-22, 0.}, {
               1.9966935073158374`*^-20, 2.1641783995681568`*^-14}, {
               2.023435684955288*^-20, 2.2538003925854242`*^-14}, {
               3.875412554679912*^-22, 0.}}], 
              
              Line[{{-1.511942828268353*^-22, 0.}, {1.0811450519004706`*^-20, 
               1.3069025026995278`*^-14}, {2.2806199618430284`*^-22, 0.}}], 
              
              Line[{{-1.8263825608490012`*^-22, 0.}, {8.956747729710374*^-21, 
               1.8178290722588363`*^-14}, {1.686075080125589*^-20, 
               3.516608374187339*^-14}, {1.3029437614437404`*^-20, 
               2.79265419008357*^-14}, {2.283291333064775*^-22, 0.}}], 
              
              Line[{{-5.82883566826005*^-24, 0.}, {1.9198906555216017`*^-21, 
               4.84656843201787*^-15}, {1.8193947680890508`*^-20, 
               4.719860795432564*^-14}, {1.34116016428643*^-22, 0.}}], 
              Line[{{-1.139755223401564*^-22, 0.}, {1.1264619614089178`*^-20, 
               3.086082755352752*^-14}, {9.451624140245421*^-24, 0.}}], 
              
              Line[{{-1.745913209234391*^-22, 0.}, {9.482705101501128*^-21, 
               2.8193984993914746`*^-14}, {1.393980440361344*^-20, 
               4.259173127160714*^-14}, {9.76204481476388*^-21, 
               3.065164626700353*^-14}, {1.4175912976010034`*^-22, 0.}}], 
              
              Line[{{-1.628480632472238*^-23, 0.}, {1.5111492968686242`*^-21, 
               5.149363664754146*^-15}, {3.3356863782713716`*^-23, 0.}}], 
              
              Line[{{-6.268088913036004*^-23, 0.}, {6.1822043288993885`*^-21, 
               3.5369835548164666`*^-14}, {4.653745260438369*^-21, 
               2.7361297435485298`*^-14}, {4.624369959303715*^-23, 0.}}], 
              
              Line[{{-4.500245726690165*^-23, 0.}, {2.1286062506522665`*^-21, 
               1.358196469456796*^-14}, {6.3961685392371185`*^-21, 
               4.194030240989059*^-14}, {7.700764453086616*^-21, 
               5.18907434505726*^-14}, {7.875377782085961*^-21, 
               5.4534563842306864`*^-14}, {1.114522083810561*^-22, 0.}}], 
              
              Line[{{-7.035452727526824*^-23, 0.}, {3.674462675079542*^-21, 
               2.687095350780543*^-14}, {6.393390673833669*^-23, 0.}}], 
              
              Line[{{-2.172751297786369*^-23, 0.}, {5.374179316958552*^-21, 
               4.2651526040296905`*^-14}, {2.3489462153008595`*^-23, 0.}}], 
              
              Line[{{-2.3552777014392893`*^-23, 0.}, {6.218928432061656*^-21, 
               5.2122683825785035`*^-14}, {7.492452682438015*^-23, 0.}}], 
              
              Line[{{-2.3431103371227752`*^-23, 0.}, {
               1.8886009562200216`*^-21, 3.045908763930391*^-14}, {
               4.8139578766715905`*^-22, 7.97853888226389*^-15}, {
               1.2840021077115878`*^-21, 2.1869115161067147`*^-14}, {
               1.9656755084666392`*^-22, 3.4405010625754415`*^-15}, {
               4.740940396747934*^-24, 0.}}], 
              
              Line[{{-2.4894163217123392`*^-23, 0.}, {
               2.0402671571990394`*^-21, 3.771253255493998*^-14}, {
               3.4525074105066694`*^-23, 0.}}], 
              
              Line[{{-2.639017771073572*^-23, 0.}, {1.3471250067963481`*^-21, 
               2.629634247270937*^-14}, {4.2197598619795402`*^-22, 
               8.464856123072511*^-15}, {9.882519960831891*^-24, 0.}}], 
              
              Line[{{-1.7519820084433608`*^-23, 0.}, {8.187505017265961*^-22, 
               1.831728077628104*^-14}, {1.216717986575248*^-23, 0.}}], 
              
              Line[{{-1.2171197392417062`*^-23, 0.}, {
               1.7928654238770712`*^-21, 4.3530163640202075`*^-14}, {
               1.1124561925796375`*^-23, 0.}}], 
              
              Line[{{-5.891944915427258*^-24, 0.}, {3.6663337365735963`*^-22, 
               9.400769253858421*^-15}, {9.00165293342205*^-24, 0.}}], 
              
              Line[{{-1.3652994761075242`*^-23, 0.}, {8.178684175833871*^-22, 
               3.244330983144456*^-14}, {1.3067256703499954`*^-23, 0.}}], 
              
              Line[{{-5.4434372903427186`*^-24, 0.}, {2.588590262487604*^-22, 
               1.1768659664352483`*^-14}, {5.900866096241312*^-24, 0.}}], 
              
              Line[{{-2.2008443052119775`*^-24, 0.}, {1.096632734291609*^-22, 
               5.5603544326175214`*^-15}, {2.58598039658659*^-24, 0.}}], 
              
              Line[{{-4.760050851006291*^-24, 0.}, {2.277083880802499*^-22, 
               1.2876501386154667`*^-14}, {4.695874599863516*^-24, 0.}}], 
              
              Line[{{-3.3492673541837395`*^-24, 0.}, {
               1.4615154159480718`*^-22, 8.727925698466532*^-15}, {
               2.3358049727062123`*^-24, 0.}}], 
              
              Line[{{-2.5959769201699773`*^-24, 0.}, {
               1.5639678556926432`*^-22, 1.0704279418877674`*^-14}, {
               3.698582267478631*^-24, 0.}}], 
              
              Line[{{-4.952849097666315*^-24, 0.}, {4.2196419444812295`*^-22, 
               4.591556460472979*^-14}, {5.954169453934502*^-24, 0.}}], 
              
              Line[{{-6.066365920682432*^-24, 0.}, {4.369746836108153*^-22, 
               5.02145291541478*^-14}, {4.943613924751802*^-22, 
               5.837972703160291*^-14}, {6.681110772373565*^-24, 0.}}], 
              
              Line[{{-4.4972919918972434`*^-24, 0.}, {2.47349461669037*^-22, 
               3.2576623039793975`*^-14}, {2.322086506997699*^-22, 
               3.142806393298057*^-14}, {3.370480216667011*^-24, 0.}}], 
              
              Line[{{-1.2750495412549054`*^-24, 0.}, {1.02532480713122*^-22, 
               1.5060316027678372`*^-14}, {1.798088732263202*^-24, 0.}}], 
              Line[{{-2.7277748255713*^-24, 0.}, {1.3927128527777695`*^-22, 
               2.2200738957427344`*^-14}, {4.087643259196681*^-23, 
               6.696120073456817*^-15}, {9.84325468878516*^-25, 0.}}], 
              
              Line[{{-3.965917101973231*^-24, 0.}, {2.103280634807244*^-22, 
               3.842598905905507*^-14}, {4.028917502418397*^-24, 0.}}], 
              
              Line[{{-4.6244956928658126`*^-24, 0.}, {
               1.6817097539195041`*^-22, 4.8846515624363026`*^-14}, {
               2.1984723436229936`*^-25, 0.}}], 
              
              Line[{{-2.1640846945002174`*^-25, 0.}, {2.082894690164191*^-22, 
               6.389084753265861*^-14}, {2.731193865639727*^-23, 
               8.609308289029205*^-15}, {4.959430465009373*^-25, 0.}}], 
              
              Line[{{-1.0419564537237179`*^-24, 0.}, {1.470850810451711*^-22, 
               5.0317324478743246`*^-14}, {2.8712354910028573`*^-23, 
               1.0093972675737856`*^-14}, {1.0371839383899189`*^-22, 
               3.747084516725927*^-14}, {1.7454975053867476`*^-22, 
               6.48039284035566*^-14}, {4.466429302371324*^-25, 0.}}], 
              
              Line[{{-1.0982432260606463`*^-24, 0.}, {9.848959505674741*^-23, 
               4.4257126977831385`*^-14}, {7.491099586202454*^-23, 
               3.4592570228407883`*^-14}, {2.817868068879411*^-25, 0.}}], 
              
              Line[{{-6.550304056364922*^-25, 0.}, {5.90947371275409*^-23, 
               3.0434323011198645`*^-14}, {5.284708805141693*^-25, 0.}}], 
              
              Line[{{-2.694477054328864*^-24, 0.}, {9.844712433874105*^-23, 
               7.632798539328217*^-14}, {1.8355752342162602`*^-25, 0.}}], 
              
              Line[{{-1.6916765640524551`*^-25, 0.}, {5.161243089028963*^-23, 
               4.2259452792754135`*^-14}, {9.556891644923313*^-23, 
               8.041380488756245*^-14}, {7.147083809083059*^-25, 0.}}], 
              
              Line[{{-1.1320050662201902`*^-25, 0.}, {
               5.2051771970807734`*^-24, 4.75316240276228*^-15}, {
               9.618196080883848*^-26, 0.}}], 
              
              Line[{{-1.7699688450574386`*^-25, 0.}, {
               1.5701097749120244`*^-23, 1.5141396838183383`*^-14}, {
               3.3950387861937524`*^-25, 0.}}], 
              
              Line[{{-5.855486970547092*^-25, 0.}, {5.0297172915896667`*^-23, 
               5.409499431369334*^-14}, {6.089239194161776*^-23, 
               6.730090952614812*^-14}, {6.49143467099711*^-25, 0.}}], 
              
              Line[{{-1.9156723691530746`*^-25, 0.}, {2.984384684523792*^-23, 
               3.884893089246311*^-14}, {5.795444603946924*^-25, 0.}}], 
              
              Line[{{-1.0044335871807738`*^-25, 0.}, {9.343557961399064*^-24, 
               2.098574794354178*^-14}, {1.2334796578344325`*^-25, 0.}}], 
              
              Line[{{-1.7924054492718552`*^-25, 0.}, {2.707630784591967*^-23, 
               6.422297232269608*^-14}, {4.43288119191376*^-24, 
               1.080516603779925*^-14}, {1.05267017740918*^-25, 0.}}], 
              
              Line[{{-2.8308273651282365`*^-26, 0.}, {
               1.1991852252468684`*^-24, 3.2599369619999537`*^-15}, {
               1.6894361576183535`*^-23, 4.719642603333366*^-14}, {
               2.7743487950768965`*^-25, 0.}}], 
              
              Line[{{-2.3331098232758245`*^-25, 0.}, {
               1.2722430276635771`*^-23, 3.753411648155556*^-14}, {
               3.4425783922462457`*^-25, 1.0437208311044007`*^-15}, {
               9.136023299850586*^-27, 0.}}], 
              
              Line[{{-1.0424995170734533`*^-25, 0.}, {4.48596958942171*^-24, 
               1.4363015494198147`*^-14}, {1.6674950802540707`*^-23, 
               5.48653628656686*^-14}, {1.8527699364361652`*^-25, 0.}}], 
              
              Line[{{-7.235957335586495*^-26, 0.}, {3.423799616099378*^-24, 
               1.1896818248205881`*^-14}, {6.934161459115214*^-25, 
               2.476058108615541*^-15}, {1.8037928530272938`*^-26, 0.}}], 
              
              Line[{{-4.841736291039715*^-27, 0.}, {1.7743775936310723`*^-25, 
               1.093203029476358*^-15}, {4.6765874673304426`*^-27, 0.}}], 
              
              Line[{{-6.460541781780689*^-26, 0.}, {3.2872009118851555`*^-24, 
               2.1387982519164525`*^-14}, {1.942177814257623*^-26, 0.}}], 
              
              Line[{{-2.214484401075778*^-26, 0.}, {9.358361456858011*^-24, 
               6.430313947822362*^-14}, {5.0999178184515136`*^-26, 0.}}], 
              
              Line[{{-2.5583500886105592`*^-26, 0.}, {8.84444088379473*^-24, 
               6.77766852478643*^-14}, {8.307374515459447*^-26, 0.}}], 
              
              Line[{{-8.547709268436381*^-26, 0.}, {9.916249049516065*^-24, 
               8.0250206226382*^-14}, {3.795820421818369*^-24, 
               3.1568124768075167`*^-14}, {4.439821003386935*^-24, 
               3.794486244171149*^-14}, {7.602526135007952*^-26, 0.}}], 
              
              Line[{{-7.422089152398548*^-26, 0.}, {4.2256960636585785`*^-24, 
               3.8139462495784833`*^-14}, {5.371856446431684*^-26, 0.}}], 
              
              Line[{{-8.960340877011762*^-26, 0.}, {3.2532978365159804`*^-24, 
               5.206338843690118*^-14}, {1.0656628964856297`*^-26, 0.}}], 
              
              Line[{{-2.901187303689607*^-26, 0.}, {1.338246059215684*^-24, 
               2.324222833993056*^-14}, {2.7650954337300783`*^-26, 0.}}], 
              
              Line[{{-4.380960386955535*^-26, 0.}, {2.546514969444006*^-24, 
               4.6706445104741164`*^-14}, {3.136047285189856*^-26, 0.}}], 
              
              Line[{{-1.5064787935973319`*^-26, 0.}, {7.440543096883345*^-25, 
               1.4411991813021866`*^-14}, {1.5358779026996023`*^-26, 0.}}], 
              
              Line[{{-2.0250395925836983`*^-26, 0.}, {
               1.8485984594679443`*^-24, 3.9933698703155267`*^-14}, {
               1.7005293949779588`*^-26, 0.}}], 
              
              Line[{{-3.2238782650410145`*^-26, 0.}, {
               2.7882128464247066`*^-24, 6.536662449807553*^-14}, {
               6.567647330166103*^-25, 1.582283698647842*^-14}, {
               9.171745109871249*^-27, 0.}}], 
              
              Line[{{-4.7158948274085736`*^-26, 0.}, {1.713491040137017*^-24, 
               7.521995285266115*^-14}, {1.0819313319047921`*^-24, 
               4.8808483235954056`*^-14}, {1.3598669591465291`*^-24, 
               6.30429360123616*^-14}, {1.2854896948300094`*^-27, 0.}}], 
              
              Line[{{-1.2377648021892086`*^-27, 0.}, {9.888990199257177*^-25, 
               4.8415090204938494`*^-14}, {1.7125758955748694`*^-26, 0.}}], 
              
              Line[{{-1.8586878443242093`*^-26, 0.}, {1.646844204088839*^-24, 
               8.750129880949983*^-14}, {3.9965609248953027`*^-25, 
               2.1821912823203515`*^-14}, {1.3836004080084061`*^-24, 
               7.763569677015727*^-14}, {7.5245146487108225`*^-25, 
               4.338840253469201*^-14}, {3.0372688958874798`*^-25, 
               1.799794027234701*^-14}, {3.686223166615177*^-27, 0.}}], 
              
              Line[{{-8.15975962368353*^-27, 0.}, {6.65734566525841*^-25, 
               4.2812822039624767`*^-14}, {1.1356436598834755`*^-26, 0.}}], 
              
              Line[{{-4.503058127315125*^-27, 0.}, {4.424155424655091*^-25, 
               3.0877086120245864`*^-14}, {9.10366891012292*^-27, 0.}}], 
              
              Line[{{-1.0905093841920035`*^-26, 0.}, {5.551310797105268*^-25, 
               4.0915726397111775`*^-14}, {1.0971948545992457`*^-26, 0.}}], 
              
              Line[{{-4.045252043917468*^-27, 0.}, {1.4650036809900965`*^-25, 
               1.7166752806004454`*^-14}, {3.0226984888041648`*^-27, 0.}}], 
              
              Line[{{-4.4957264907053325`*^-27, 0.}, {
               2.5260577772462924`*^-25, 3.1259462581839324`*^-14}, {
               2.0342443423099326`*^-25, 2.5869363262539254`*^-14}, {
               3.52484904986875*^-27, 0.}}], 
              
              Line[{{-5.161337178931022*^-27, 0.}, {4.0200064393896857`*^-25, 
               5.398811461232243*^-14}, {7.258768258830454*^-27, 0.}}], 
              
              Line[{{-1.1966995894130305`*^-27, 0.}, {5.471271423759074*^-26, 
               8.421348641949397*^-15}, {2.1414739721321786`*^-25, 
               3.3872759801729833`*^-14}, {2.729693272266434*^-25, 
               4.4370674075202706`*^-14}, {6.317008838085304*^-26, 
               1.0552079550588788`*^-14}, {1.109537850317171*^-27, 0.}}], 
              
              Line[{{-4.118793044884179*^-27, 0.}, {2.3443759769706275`*^-25, 
               4.2499813032781535`*^-14}, {1.542028118299932*^-25, 
               2.872740816283939*^-14}, {3.2703628452098795`*^-27, 0.}}], 
              
              Line[{{-7.979822895563619*^-28, 0.}, {1.0208788771685245`*^-25, 
               2.1210745573843108`*^-14}, {2.4748602932323445`*^-27, 0.}}]}, {
             
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1: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
fls4ygjedyiJqHxUzPO6S+FvjSkSUw==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1: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
t8OydOtq/7NIECnl559c27E9QWrqCGskRI319Z6btKPUz69jW2IE4pN/pRqp
tcNwOPa29/EInGb4mnVOvB0xCokRPq/C0T5vX0T1XzuM2l2TqITCsbyflrr7
QDsKKKd/f60Ng1k8f3PG5naMylBLcSuHoUL3UCr91zZcqixzahgPxW/VA2kt
5W3oHRAuyHAMRWP4GnN0RBuC3C0UGhlDoX1ut77Z/XXd13H5tjf9CTjNIhjk
r7ThuX6J2GOxJ/hx0MmLsLYhearAgPVTCLL6QyC41IpwZhXfcucQxC87vSKt
rTjgObJH/3AIotQ9xBRSW7FX6GDepqpg/Kr5fd/KuRUerNpcEQbBCGuejU9S
acWqSrbndoZgdK0cFf/E3YpjdDRT9cZB+HVJuuH05lak0InX7Xv3GAfNmKMe
DbfAdbDy3T+Wx7h3IOLgQlELDNv2a9+1DMTcxicVZsEt2JW95kI6ApBzhGpy
1bAFdgb3tK3OBSA51Zs6WrQFI6+Z/Rai/BHS+85Ecn8LenWqJnKo/PFI48vj
zfPNGN49URxp6ofnujQplKZmGEX+5x015Iv9Q59MypObYdFYwfNc1heHU7q3
Fj5shumXzG0vqh9B8s8qVaVKMwqdtcQjLz7CuK/sreGzzeg93fhRt9AHF3cY
lTBtbYbZloM/f53zwWMuZxO1z01Y8Tbtlcn3xkGBwdbXpU3421EGBQFvGO88
dIEjvAkUGTHWX2VeaN6lQZtxvwn1f39k8kh44QSDp5/E1SbwM67cnW3zhGyK
88HlI034UJ6wm+umJ553MDK9W30P2qG2ktYpDxg/GC191vMejn7f4jqdPZBz
1dgsNPs9Ns77S3EyeyC9Z+VBgu97UCpuudWlu8O/PIOvVu89OKmqpeMuu+Oi
xZ0xKvIewnRfxpM/uIG5pm5IZe97eO1s6Wh1dMOGoCCDmrlG3GIWq2Dc74bk
TaxN0i2N+Hvob/StUld8ZxyQ+p7WCHWjHeU52q7Y2b706Ll7I068KZP+vdEV
38ounbW92YixD7c/3FRxwX6Hntnbgo2YH1n8/viFM4pGU1aNmBtxMiD9rcXf
h2A5dyzEf7oBw78USudUH0J1Y/lifWMDmqPPvfqb/wASUnX3Dqc04PHU7mr3
3Q/gbKfO98S1AZ6Mqj4mDk5QYjQLYtNqQFb1pa/pnxxxZ3au9L1AAzYfe3SS
85ojjv3bvhjM3IDF51Qr/cUOOP1sr4vVz3oMRvDdeMHpgNy2kUDLpnoIRV9y
835mj4Bb6tqP0+pxIq/vot4ue1zL6OGs96hHT8cJF+7HdrBh0jt5SKcetkt7
4vq32eFZ3h6LYOF69BXbmSn42aJs30DNkX31GKmKvBlAb4tTO+s82xfr8Frk
y377EBuwXKHSe9ZZB0FbNfbN+2ywOtXk/ii7Dn2cvNdOPbdGnMnFnU8C6hCv
x5jfe9YaJLUEJUZ1iD7a37BabgWG5bwLVJJ1cNfzvRgoZ4XCZXueuxx1+D6S
tNF51BKnztyRn6KqA+v+Eq1KR0usWTXXBQ/XgnWYuVaa2RIno8fLlN7W4kyM
3RrDKwsYev67Kfi0Ft/Lyqn/SVvgUPTNrosOtWD8mcay87s5LHdvl7ilWotT
xyLzL/qbw9xWYiDpfC1sOG6Gm3ObQ8/L+A3trlpEye3QuJZmhgD+BVr/uRqM
aVkqJizeR8AJ269nO2pQwLQ2+l7yPr40b3VezK5B0cyt64XPTCFT2f5j8HEN
xu8F8ckum8Cxukjpi2kNftcI5DsrmYCjUKKXTqYGQ1vcpPkK7kH+rG2w8uka
dLJTPmjuu4eISI/ECroajAwnvvnsaoy6n7nHZSar0apxJqBw0gjkqbLw6vtq
qLOX6deqG+FDdc6f9xnVmAtpyf3z3hBZ9zS9yvyq0bVWTmRhCJXyoqk242qU
RGryphbeBVOK9HWaa9WY9v5Ev/jfXdzgGi3VOlWN8WKeVK5XBvClYlHopavG
ggXraQFuA/z6U8lhOVWFLsskNrrcO5DX6r36X0sVTNoE1CL576Dx981OxldV
yFs+86u5XB/MHK7dzEFVkLxEZ/NMSh+/5nx0hcyrICzyK3ilVw/mhl/93OSr
QLNHVKPXQA9dgZK6U7xVOH3y/Un237dBbx4077CrCsdljsR3Bd6G0wleea6l
SgxKC6QOcNzGwLVrvn/6KhGVLm16qlwX8hfc0+bfVCJy01XDN+q6iG5KKKaP
rYSGoZas/bIOyukvN1x1rsS2nud7tSJ10MhyYiRNpxJ/w6s3qAvp4BERZeAS
q8R4sui/upJbULYvVm47VgnV4bNRn2hv4ZXxZFXklvU9ZNT89TcVbdwJd9by
mKwAUTmY3ZhxE2mrkpxPWiuw1t5z8z71TezyMztbk1sBhVm3TVU3tXCqyMJ6
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
yC3n1zo6vsiI9zlQsuUd4d9ZUMl30hdRnz6o6t8oJ6Yc9FGuM4+QcPbTc62Y
t6Tsks0VsTePoJ+i5eU7UUZK92Z+dHJ/hJk7B/Z2CpeR9zsaLTmvP0LyD4tt
rGGlJOGIx95rLI+w4jcRrfyzhGQpsI4Pf/IBy9u8IF3ZEvJRX3N+PNMHi2OV
5FTuG+LVEaJxy84H56NFnWP3vCHfClz5r4r54HfdsxfxbsVk5eem5IQdPriF
95GHfxYRoaV3lXeHvKE2IJu0WaeIHPLh/hKT7o3Yky5RYt2FZOaTTNQlO29M
782qfHetkChqt/y7JuGNbc4WFMO6AqLndNykltkbGjkbGE6LF5BvviIH0z97
4e6p0F9LNfkkPYdNYinXC2r9/clFV/PJxuW7e166eSHw+ENPrbbXpO6D3NH3
8l44Wlpo0a32mpTEPrWUPbqO9y7Z7hjLI7tnxC5cmPeEvn+F6KpVHlFY0zrs
V+MJ0fM9XL40eUS2pOk9ifCEDuOQc3p07rrCu6irGnrikviNmev/5ZKVHZ/n
Oy944tmlz8H6jTkk+vFMQw6DJxSL6VtG9HOI9cgZ+plPHuh3KDYspM4h8yXb
FoLyPbBUyPD7hUQ2catleBP0yAOzwk/GtfxeEXXGx+HTWv/jpxnud2WRd/sV
qjN5PHBSm9Ouii2L1Lkv2NXReuCc1PmDopYvSdeXTxxkyB0Zp4e/tNdnkiwn
kVamPHfEWJ+pUz+SSRx58ppFHrnjLlX/iRrnDHJb/6Pee213JF3l+f1rOJ2I
NX7vzzrvjjMMP/NGxNNJ9Uc+y+/07sg/QatomPWCBO6MtXMZdYPM9lh1u30v
iOaB67wmZW6467W57vejNNJX1DaVHeaG0wWfmQdXU8n3LOp5KVM3sJTyCm62
TCUfT7E+EbrihgmNp3HGkynETztjr/NhN0gsPT8+dzeFPL/m3svy2xWTD7cf
8f+aTIx92g5u7HLF7nxhGXbjZNJovZ9cznKFQVZS74ufz8nQyFxgl48r/i1c
V9hm/5woH2pcyb/tCniYl/FvfE5eMbm8mLjkinE3ettDIUkkReRCh+k+VzR/
CL/86kgSCW4gCe7fXcD232sJSn4iEeVglapPcoGBV+LRIOlEstVAP/WFpgv8
+/I0Kz4nEPGpS50cu12waNhoqf0wgTQdZ2K62OaMT2wW3zX2JxAXih7dd19n
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
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1:eJxdl3k4Ve/XxmmSiJIKlVJkiopQyr5JiMj4zZTMaaJBpiJjoslUplTIlCSE
lJQoIZJ5yjyec/YxT0W8+/fve/451+c6ez/neda6173WI2Rz2cB+GQsLC205
C8v/vv//Z0F/87abj7Mgn/Axsbg2EM/nN0VOmxaDK/jVe/mESOQdLlbzli5H
0gNJ5bmGeMRplQ7tr6jBK9Pswr8qKfgme8Tx2uN6CMtGcPFGv4J9zVCJgkQz
PrvWubdezIJm+LsUoxdtKGWcrk9geQvVu2+KD7B2wtZgaHX03TzsDU+qF0rs
hjn9atcoewE2yetcdJXvhcffZf/ab31A1SXlpuqiPiyOHYgPpX3E74/Bry0O
DmCnpQfktT7jUI3UVfOUQdSO50r4/SpGU0zHnQW2YdS0/jPZMPsFnsb+Cq4W
NBxuyTs7wFeKDU9TE/+l0LH3MXcsl/xXSEa3fv3ez8DVprqSpJPf8Ls03Yl9
MxPXypuUimzKYPj6r8qs0ghMJbj+XLr2HYaf9mV+Mx1F9sxTl3Kvctw8oeBq
JDcG57XiP/oCKjBkT3pdKBjDj4zI9Lo7lfgdUPWTkB+H6w1Hq7TAHzCIbRZj
ZI5jt/2vZjffKnS2m4kH75yAEWdNnKF7Nbo5VTRlwiYwzz/XqXPxJ2JUifal
vxPgl2S75m5Wg72bONdwWE2ihPxxfmLnLzTcLG68VDyJNse7vHWRv3DptfUm
YusUuOKDX/StrkXJ9r5rUc5TWPptfWqvRy1qgh7ZhpVNQYHl0rGioVrc19eW
ObZxGrQDQlaPjepAJO2e+W45DbrJpPPnz3XIqnkUdiBlGjeCTwqritejY7vr
24ThaTSzCE+KhtWj8vmHut2iM/ASVlByma3HjaRP0u3WM0i79uOIzOkGbPGS
qm6MnkFHay/72c8NiDCdc5eqmkFvtMCTzUKNsGwsKJ6bn4FHpEiZjm8jwoey
p3XEZrGg/FWZu7sRqyJvSajqzyL+kGSCjVITmNX8MiOus2Dj2mZ5MqYJ2vMP
n9rFzGLZ3ra6lskm3C8pLCosmEWkg+XB1TrN0Kg6+nx14yxOZnzM6U1qBnPu
zxqrkVkoCfcTTvPNGPmsdLtpxRwiy/W/Zem1oOZYirYP3xwy6nrXZyW1IIR2
3PSq+BzMNNwars62QOr0kHmRwhzCGpRezB9vxcf1kp/cVOcg8api3iCmFd/X
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
D/M=
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{155.0625, 43.78125}, {127.62421875, 
            29.250000000000057`}}, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
              HoldForm[
               Style[
               "\[Eta]/\!\(\*SubscriptBox[\(\[Eta]\), \(c\)]\)", 45, Bold, 
                GrayLevel[0]]], None}, {
              HoldForm[
               Style[
               "P/\!\(\*SubsuperscriptBox[\(P\), \(max\), \(Wh\)]\)", 45, 
                Bold, 
                GrayLevel[0]]], None}}, 
           FrameTicks -> {{{{0, "0.0"}, {0.5, "0.50"}, {1, "1.00"}}, 
              None}, {{{1., "1.00"}, {0, "0.0"}, {2, "2.00"}}, None}}, 
           FrameTicksStyle -> Directive["Label", 
             GrayLevel[0], Bold, 45], GridLines -> {None, None}, 
           GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 750, LabelStyle -> 
           Directive[Bold, 
             GrayLevel[0], 35], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> Style["(a)"], 
           PlotRange -> {{0., 2.}, {0., 1.}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], {400., -243.3508830702711}, 
         ImageScaled[{0.5, 0.5}], {750, 463.5254915624211}, 
         BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1]], 
              Line[CompressedData["
1:eJwVxX040wkAB/BxpSNEXLXQdFqR996p9tWQXPQgL5U7UU1Uz3qRlyiXt/RC
3lJXEWqOvLtMXrNjmmLyMiZvs/2yGhd6s1R0d398ns/KQyfdGIokEsnpP/9/
uaZGja4yhaoVceOuVSVAETeo/fEkDAK425UZ5Ui2VVAeqpnAmWqXu8dyH8Hw
nqZJuu1bBNAXpm2ZYsNmrepDy+BxvCZqj1PtqrDTU2eRmCmDyKwi/EB2Da7r
GHAtdr/GxfgI348/1GNr4bcFw5RRVCbHdekxGxDlkJU3MCtBF88+QWGSAzvf
DJeqdyNwv+XMOWnUCHas4VenH4dB939B+s5oArPQi2cV3I9qjouFD4uLktiY
qSlzIXzYvHn2r5qhZLbmjLG1ALn+aYrBVB5S1h6mFKd2wkxLJqw82gK76SDm
3hPteKJTxBgoeAZyj/93OZ4jpq3s95qJ55ihnG4MTH+Kn+l3Hlqub8OrGLb2
Ir8mVEQFpxqE8dFQlJFufosDuUHIltD6dpx70XyjcV8dWDOsjGsKHXCQZSzK
Ma5CksAuJozVgSheab4wtQJjM/57wh06cfJlMONTRDkGyeXiK2OdiH7GjrpZ
VAzly9dbsxO7sMmzXt5OfYjAgI/61RbdyJkrM1JyzMUOq3E6v7sbE41Befy5
HJi2l1YKQwTwUu+lmzHuobb0sbyL3ANhu/Y7Mes29AkP9+q6HqzJ2y+JzUxH
vXSyJfZgL5TzxT9pb0iFSuxgk5miEL6nUy9E3r8OtcOEUhlLCNPD23vG/76C
xlZKJsmhD0m6DI+5B3GY61U/ulTWh7nKEptNxtGw1TCZlF19iXC+fUTd+Uj8
MprJO2HSD5+wJu+xpHM4FvJ+OIXfj+nzN0lex4OxevdItSNzAPyvUS9Ek6fh
82vo+mj1QXAvUeabKDFh5t6/e3XJIFwHD33X1wtEx17FR3rOQ+B+snIumDuC
s6q+G53Gh5DpKf2r+KofDoSWLUu5PIxTbvbPlzj9hiytbN+nq0S4EMAOqQva
B4Fm6FRDgwjIOjpdwnCHm2XHzlyTESy3bKEyFFwxrrHQOz1sBK7NgoFPnk7w
uOrPSmwaQfylNyattx2wSkv6haEmRhjFBoksW9Tuelc56SHGDU5+SrmnDRSc
/R58zBBjdj1liG+0FZvZutyNEjGIBbO9scmbsJTDlgVSJZj+4j9Krl2Hl7rb
Vbb5S2DVnvZP+WJztM6DhyNLAuNryWppHCNk3dH4vEIkQcnBnM+lblR41bbG
bV5CYI++V+qOBysRSCp4L99FQEVok+1L1UOKrZ1WUQiBuRrpSkO1ZXCUHroS
fY9ABGfdkepOLfwxdGIsvoGAQJk5Yr1HA54bZV05fQTOngof7eSpQGD4ZV/8
GwLFmvPdLd7Phz3Zo7nmLYHl0v2Ln0wpIDGY4X1RSsAiUmd/AmZpg6oDxwUd
BJ6abru0sElOmzFQyT9YQKBFUSDys/5AoxXdTwo8RSDV/kN39OcJWh/VrLCF
QkB/tf23hLY3NCeyfENHhQQkb1td1mOCNiRTbbE2lkBjp3qEi7aI1pi55E/N
SDH0P/DEX7f00ULz1+Yk5Y1Akq5jxLzbRbsbI3Uj0UVIIBtJhMptNNNCz0zz
5kH8C57QWqo=
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1:eJwV0/8/0wkAx3HhiuSi1JRwlfQNRVJKn3dHvjUSfdUjRAx10bddkURuKR3O
8qX0xejWl0nCCEXkS1PIl+XLIjObbabMl4jIdT+8Hs+/4LXUJ9jNT1FBQcHj
Z/+rFTpiY6UqR6EeTeZa+BR1cydc6p8PoPyuBl/VLwcb7gQWtRZ/gY+qzdh5
Zh6WmZ9jx9h8xgTpUJSLPB9dQpnnUqoMDLVZu+x2FIIcw333NkgKFiVKOZpR
jFULhyu1yGKYrl1WZKJcgtonwbyX+iJkK0kEAUGvYDovsip/SgAdju7A+oEy
7JFcQtwgH22+ZSWs1a9Bn7QkhmZ9QkeL1iwHSgXMBlKG28/ykMq7P6Pw30rE
srgPY9e1QjDOMMgTVsF0clt6lSUXisoRfRMr3iAvQ2xsR29ETdyUrXsABw+t
7mbRjtfDQPeeJC2zBg9PsLca4S3czAPOPhx4C/RQitITq8GVPLq9y7wWYraz
udORCtjmcgJCQuoQYhSleSa5DG9oz/w1XtUjNo1jdvDAS3SsOT4jQrEBSn20
frs1hahQcxq+zWwA0TgqiUtgQxy+dtsHh0bQdRe3lobmYC2ve6NhfyOiXJTb
d7GyYEQuMoyJb8JuqZJj1vLH0Mqd1psya4Z8iBM9256JzU7KzRdamnHei1s2
NpkOC3JgmFIoF5Ycwwe13vdAaysqT9D9AKVLZ9ic9FtwYtulG5R/QGBlQVVO
ahLe3yJ7Ffu2QM2LTvvLlA6Wv/M5V5VWHEg9+oB/Nw7FBZx4SWYrzEznb6wp
uYbkL+TgcJc2aNzZHbObQcOY3txhzeE2UJpYLaMrL6NsWmd2RnI7BLny6jnn
wuFHM31ivIWH9v2dDZMxIfhIXsLJ6+TBPtI1Qs+fiuXK2z03RH5EV20kzaX/
FLKYru6ZBh34Ftb00VohCMMNGrcXczpQmTZb/YB2IGy1FoxcOt6JgY4pO8mE
L67+SNLn/foJmVHPd3ZGeyPszdHSlbmfwC5VyTVx8IAx+ZSb/74uLKphvfQ9
dRD00ZuWKd+6EL7YmVruuxfx0zu4PGc+Toyry0tmuIJapu92JI2PQfvJRLm7
E9Ttl/zgyfkoe39l8P09e/iFB6Y7WneDNMqx8M60wcGoSgHrRjfeSa1/0fPa
jqGZrb9PCbtBi1PdeXrbVri5G86DhQAzZDcUUx5YoPCFBTUoWoD6TKanTbMZ
dAI791xrE8A84nFCot06BOkn7Y9d3QPKPlHpmbHV6N18veNcaA8u9jreVP17
xc/PCgZt3/VglMFpSv20FAypgvWIjhBnjbPGN6bpYvpexpxLfwihHVDBPnhN
G2uy5ZqCl0Jw//yok+Cihe+bEamtLsLkE5MAUp0GOrPcupd4iNBxpMj6dLUa
NqkYjUieiKB0oiSDLZ8JetueZOqkCD55cY34oojp53uTi8m9oKqZTQxZTBP1
umWXn6b2wsc4OCUof5xYf+xisJ20FyfHHpVGG34l4sejHlM3iZGvMla+yHuQ
2L0q6ZAxTQyxqcKVOlo/scXGeP7hJjHaYpnuQk8xUenAtPisJ4GH1f6ehXo9
xFzm1BbOMQmMAnb2KG/uIvZp2OS8z5dAeF+R3h7cTjxSzvzRNS2B1/rmJOcs
LvFs5BWrzkGK31JGuFYVDUQ6ibrw6D9SzNOPyPbWfkeQvvaTPVqksL4Y6bOm
qYoYOnElz39xHzRJ9S6OEeWEPaU6ccHhPhhYNi9Vl78geP2n0Z7ah+skI9ep
tQXEkpkGc0c/9IFhbFbLCckhHhTKKMfnyJB1v7WJ75pJjIcK+5qsZOBfpd/K
XsYkrudX313lJ4P5uu862csZxB6GEi/gsgwVnrNEZlY3iVqTAvWOeBn635w8
f7ImgRCFuYVl02Q4fCHcR9HxGmGi+vWCaJ8M593dR9r1I4nsweqLr4V9GL7v
8+qQL5XYupKUGDQkhZiUUdqZSyEabu3wqq8QY7AqpL/4mRNBLdYsp/Tw8R8k
eu99
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1:eJwV0G0w1AkAx/HtYo5ILZG2y2XaUCKDoo797cpkVbrW0yVJ1lWXVB5SRy66
PD9EHrYSR5w8jmdmaY3N0x4bsYRd+99L25btwe0VwlSue/Gdz/uvMfui+6lv
SCSS69f+V27xnt9q9hFco/g3LG4N7I7kjQuF81iXwdGrtauDuzf7UKBqDooN
LkUxvHr4lZ5gUmSzoOd81FKxGpEj4DJlhR8Q4xYVYT7fhDYW7wcJ4z384/as
DSprgXqG9sqQIRVSeqPjpgO5aI18SUqumUG68z7bz9va8Jkd5Ul59AbpusPt
1IWHiMjSp3sop/HKL/32twPtqEkz3qhm+xIKeykRVdYBRzWXFbaVcvAL932P
Lj4W4m0+JrOm0Pz7ToP8pkc4yjR0rPeR4RBlue3Xsk6MUuglpyMlWH95j2/S
vS50LtnYLiyPofx533JKZjcKA+v3d06P4JeRneEHE3qwuIXklGoxDIFVyfWC
6F5YzGfVet8cwO6k0UvHwwUo0MrlUI73QUNgyT8b9BfIc1VfKM09YGYo3lYF
9IG+7oxBVEonDHwEBat9+jGw4je3vfkduEs27ok+IkSlFqNWoGjDNWt8ULo8
hr3+n96p4hYwt53vcMEAqqy7w1oDGlH5vNMpZfcglEdEl3qD6hD1em/pA4sn
UMusUBb1VqGo7dwxV90h1KWZPly6UgaelHAqTh9C8JP9YaWDJbAsJWuLNYYh
OsjZpt9YBPEqj9jpG8Ngt16tLjTOh4VmjobwyzASTl5XWVXfxjvzNdejIkWg
izdmOb7KRvlh75WqDyIwb4msznIz4eZc+2jLhRFssSz1NtFNg/OQG1/76zeH
Bbu6ltREtFON7hcFjIIcn+pyhncDw8M7fEckowgqszH9lBiLv00fKzkeT+Fh
6fRCXH0VvZ4FsxLhUxRy/brzTK4gVDvuVNq+Mdxx7mNnHQvH4J29qpy2MVBv
GNSzzUMw60VNkFiNw0smJQWSzsHNsqmR9mAcF27F+C4lnkbjUo28gDKB7aHB
N3X72djE6YodTJ+A+didjFiWP0an/BYKlycQZ1isyNM/hhaZYZL4ohi9s0lj
pBYv5Ir8X9jLxIi11lP/rOOO4/nheSEHJMi+FzyzXv0waMkO1iZNEiRNhA+o
ZpiwbJ5b/IcyifKju3bZ1jtDy7Mh3P3aJGSrfTN/NmPg/LsDP7YTk/BYtZga
d94B/KBuWaK9FDphFZe7EuxQHP1S+TZdCj+hVpEwzAazVWMCdUKKhqCUhAYd
K9hz5zndVAIJplfOJUdtB6c6IfhdIAFDdojC+vFWZGWZMXXuEmB0tc/eVhpD
Qys+I6KTQHnxfAcrYBPkT/t6TGQEdnhG7JrRNESoztTWASWBE8ui1OwCPUxV
iJqqnhPQLN2dcVK5BpqWD+gpPQQuknfoZko14Wf2uvyPmwR4ud8xeIQazvpH
loTuIbBBz+0WpYMEFrXyUztfCnpEoqF+8xLtEyeX7GokBY8uP3N/8xzNzqh/
oeHAJP6Vi7xWp6loiz/1H3RwlEBx8hn7GUdJ8/FZqxfzZgIMasX97Ety2hMy
I3696zj+A7FVQRI=
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0], 
               AbsoluteDashing[7.5]], 
              Line[CompressedData["
1:eJwVzn080wkAx3EtjFKKxAuJc0oPlFxC+n17Lg8lsZJjlfPQg5IVnVBHraTD
UvISpwjRg2I082xTepJnWaFt9mQ7jVRLStf98Xm9//1YBIbvDCapqakF/Ox/
97aowo10vqDSjK7wqiyB+EClhXqfChdIzxkCrVLEe4Wo60GFjYIsjbAvZTgb
00GWenxG9Ib0M7zv5chZ+0hWZ/AJe8T9dqvnsJBwroVncn8MRlNX5Lc4smE7
l/eo3OoD4qwfLMXBatCPjxUvZoxg2d0bcfm3apGXb2NV8HEYmXLDK1RJPY5Q
MiPJA3KEXbpXp2XUiNEbSVPC/pVi/Po7n5fgwIc93bVgsRh1NOrsHwe5CKCc
f+h0Q4hY5cQjp2tN0J+yMh/b+FiXmc61anqMo/zDSr9DfSg9uFJ4auwJFNVX
Oszv9sLf9VPVN8unsM5aQLjv7oazIl4/mvIMP7Kqk4tDO+C4nmzz5MJzZOTG
hK4uakX95j5aY9ULvDxpItpp/QLL3Lw2bX//EimxGXm3iWYcWq6pTvnlFcy8
o1L733BRqfJYw9nVisEyUWricANYpM4fnE1tSGZMseW21cBmeXGhK78N6okc
88bYSghjGjuVp9pha2P3g95cjraeHb6lBh1gzrCqmZZdimsNMz8kPfz5pXzt
5dl6H7GmfNtT7p1YKqWxe+yLgYK/fOMkncjUipzRu7UA+xKrQ67Ed0GwhbbV
5lMu7pmzVNWm3Uiznxgf35QDU7tF21WsbjSrrTGtOp0JlbGmz2bvHqz6WGT3
+Xg6LpZo37rzvgcVhjoeGdpp2NHvcHVB0mt0ZLhdInmmoDBE4Flr1QvWek+V
Ke0iOnWWSmiNvUg3a4qw30OHVuj8KI8AHqKVF7YtkcTD0EHXbMc4D5SduXu5
k3HwjGBH0dPfoFvPbr6BWTTuuAee+WT3FrtIXRFbNSKxNoXadufVWzgTS7Qn
rkZAOiF/XXq4Dw+oSrZd8BGQ+5UTRtr9MG2ayPdIPQCzlpCXI4X9SG463bgl
IQgbhaFzPTYN4DbzabWu2X50RD5XQTSAybkusbap/pCse9s+ePYdlqg1rrJq
2415XkdSrfX4IC9i1N3s9QaDr0xqD+Sj3Nw6hJK4A9dY76dNMPk4uTDolmOi
OyputAUxNQTodqHau8s34/Hw9lgtXwEWz7z595VZG1CWFzKpeVeAQC03x94K
YFXcnGj2pAAnDkT61/o7o7CK7LTQW4hLVfrv8mQrsbNlo413kRAcY1lZsf0K
3KJ0lztPChE3SZM7uNiC1X4io8tnEAHMb1P7jBdhoWXD+ln3BtHu73RhoOdX
9A+rTnRPFWGDC+2plbsF0grmHFP3F2Huh7GSiFJTGE8zGo0qF0HfUjuB/sIQ
EwuCAqbMEGNZzUBYLFsf9rOODJ0IFuN0mW4affcscLdfzMitFWOjZtoulu50
lFge9PI1kIBZ9TXk0h+a0NrnUxAWJoFOUUrg6XgS/PTOj1RwJKiRuZ3RTp0k
RJyRLl0jKbZkrmbUrhgnQkspI3vCpBD2GbusqP9IvCXViqLqpUh4wjtwbMYo
kRGzq9lttgzZh3P+tPiqIBgG4b+x98tA9eQH2EskRN+x/Kq8hzJUXkyWW5QJ
CcFXASH8LgNZJzhl4NgAIfZ8kOvqOgQzd1J7PrOX0PC7zv0nbQj0UedRvy+d
xE2KX8xl3hCozzs+BOu3EafmcCrq5smxfDBIVN/wjBDk9b/JpsrB5PnbdMU3
EULx9UJalhxXBTLn/asaCEvW5uS1nXJoRFTz9h1lEw+//340R10BZt1iukMN
k3CueNOaYKOA3piJc8rqEsI3Xtuc76ZAk/fts8NNhUQBf/jr+90KRA0UhXdy
bxKOTg7UJx4KDJECxNnyDMJk32Wyp4kCOX1hko4NDGJNq+G5p7flSJIZLtQI
P0c0560lq8qGQOttdvWSRhJDCS2HX5+XgmHrwNHk+hNZ8ZRspYyP/wBWIeRo

               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{155.0625, 43.78125}, {127.62421875, 
            29.250000000000057`}}, DisplayFunction -> Identity, 
           DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
           Axes -> {True, True}, AxesLabel -> {None, None}, 
           AxesOrigin -> {0, 0.06000000000000013}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
              HoldForm[
               Style[
               "\!\(\*SuperscriptBox[\(\[Eta]\), \
\(r\)]\)/\!\(\*SubsuperscriptBox[\(\[Eta]\), \(c\), \(r\)]\)", 45, Bold, 
                GrayLevel[0]]], None}, {
              HoldForm[
               Style[
               "J/\!\(\*SubsuperscriptBox[\(J\), \(max\), \(Wh\)]\)", 45, 
                Bold, 
                GrayLevel[0]]], None}}, 
           FrameTicks -> {{{{0.06, "0.00"}, {1, "1.00"}, {0.5, "0.50"}}, 
              None}, {{{0, "0.00"}, {1, "1.00"}, {2, "2.00"}}, None}}, 
           FrameTicksStyle -> Directive["Label", 
             GrayLevel[0], Bold, 45], GridLines -> {None, None}, 
           GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 750, LabelStyle -> 
           Directive[Bold, 
             GrayLevel[0], 35], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> Style["(b)"], 
           PlotRange -> {{0., 2.}, {0.06, 1.}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], {1200., -243.3508830702711}, 
         ImageScaled[{0.5, 0.5}], {750, 463.5254915624211}, 
         BaseStyle -> {
          Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}}, 
     ImageSize -> 1500, {PlotRangePadding -> {6, 5}}, ImageSize -> 1500], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[5]], 
        Directive[
         RGBColor[1, 0, 0], 
         AbsoluteThickness[5]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[5], 
         Dashing[{Small, Small}]], 
        Directive[
         RGBColor[1, 0, 0], 
         AbsoluteThickness[5], 
         Dashing[{Small, Small}]]}, {
        Style["Chiral(VP)", Bold, 
         GrayLevel[0], 35], 
        Style["Helical(VP)", Bold, 
         GrayLevel[0], 35], 
        Style["Chiral(VTP)", Bold, 
         GrayLevel[0], 35], 
        Style["Helical(VTP)", Bold, 
         GrayLevel[0], 35]}, LegendFunction -> Framed, LegendLayout -> 
       "Row"]], {0.5, 0.}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.913590355121354*^9, {3.913590387652904*^9, 3.9135903975974827`*^9}, 
   3.913590788627956*^9, 3.9135908242898417`*^9, {3.9135909204894123`*^9, 
   3.913590952716419*^9}, 3.9135909969123907`*^9, 3.913591035848132*^9, 
   3.91359131845159*^9, 3.9135917311440973`*^9, 3.913773894447105*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"d76bec0a-1936-46e7-b1be-9ef0b3ba0eb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</home/sachiraj/Phd_Work/Second work(Thermoelectricity)/fig4.pdf\>\"", 
   ",", "A5", ",", "\"\<PDF\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.912332639997279*^9, 3.9123326478107347`*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"e7f525c6-a1d8-43a8-9804-5a9044ed46bb"],

Cell[BoxData["\<\"/home/sachiraj/Phd_Work/Second \
work(Thermoelectricity)/fig4.pdf\"\>"], "Output",
 CellChangeTimes->{3.91359176911939*^9, 3.9137739150735083`*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"f23bf794-8b74-4599-973e-0b23a7f2f9e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A5", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "A2"}], "}"}], "}"}], ",", 
      RowBox[{"ImageSize", "->", "1500"}]}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Red", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", "Dashed"}], 
           "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Red", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", "Dashed"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Chiral(VP)\>\"", ",", "\"\<Helical(VP)\>\"", ",", 
          "\"\<Chiral(VTP)\>\"", ",", "\"\<Helical(VTP)\>\""}], "}"}], ",", 
        RowBox[{"LegendFunction", "->", "Framed"}], ",", 
        RowBox[{"LegendLayout", "->", "\"\<Row\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.0"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.913591072845804*^9, 3.9135911224365463`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"95631c07-a5d1-4a87-9c84-07a01f078a52"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {InsetBox[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], LineBox[CompressedData["
1:eJxdVnk01YsWNsRNEXLr0nBNuRFukpuMH5FMDQ+lSHSKEJWMKYWTcknGXFKR
8bmocBARjinzOed3yBAOjnNyibqmi9Q774/3z9tr7bXXt9b+9t5/fHuvLU+6
auMqwMfH9wfP/xv/39yJfVlaMzmwCeGqW2Xew4EDvycaxJaBG3M2RpSUjAkZ
U/3PzbW4dPBKZGJKBo6bQZ/S1Yjbv6estA3nQHoTecvR31shLalplipYgKnF
XtpDqS4EtGWTngi+gt1I2ySfNh0hZ3q3i/mX4LvjN/s/rQlIbFT87tZLQWqU
0U0lqx5w1jKdlndXoMlor0C/5ntQ9OU2b/GsxPWFvIvq6/oxuDnhocjTN6iP
/ugTXTuAm7IIV6yvwVnKecLR9QOcX/WGF/bWYjA6QviHxSE0GuxJWpipg1l6
MnnBZwTdE0v58VP1qEDFQosXC7cSWIZWo1SINaikpG8dhbWM8jdjWgO8fb/a
lZePIl1jQ1rS60ashC1tNj46hkEDi48uj5tgMys27zcwhh/73bkN/s2Y43Js
7p8bx2R3L7PfsgVioh41Rf3jeL6qp/lW5h2i5ZU/7bRmI5xO6YgeewfWgFit
WDkbjJELZI38VniRu1RKf5pAW2xjvCWpDUpG4lqmPhO4P6UpckWmHQr5E5OL
1AnM5Uy6jLS1w7Ak3oZfjAM4ftlfHtCBcR2ua+pxDrIf/3pfZGcnDiye5l+I
4uBATUT7bE0nHNfuDVnUcnDHsJR1+0wXjjGSyZ3THAxb8sl3zHahe2v4oTIp
Lr5fU7CZDu2G8Je1XQe0uKiYyh+6IUyDyY+dnLvHuGA+lhFftaDhz3TmXz0k
LuizUucEo2nosJfd5+TDhculDWpPWmkYk5M9eiyYC06A1tMuITosZ9TPfgjh
4nSaVmoW6CDkj37VucXFWlpUh2IgHXvXdpuk+nPx1LEi376Qjudc4zJVTx4/
xcrzyAgdjifsoeDARV2pm+SqOANu8QMqRYe58NYVcg82ZGBQ1nHrVzUuXKXO
CHV6MvBLjPeCgQQXoktMi5UkBsZ3GPA9n+VAzS+UJFLDgIGedIlNOwdW80MW
/OMMCFgLUe9kcfC37duWj8IE7u7avtMuiAMt67rGJmUC9803jq5YcNBovUTJ
MCfwhS5n/0yag7BYL2qIG4Gg5dzZS+wJ/H19MedCOIGDKq8NQosmMC/xSuf0
EwL7U27MbfKbwO3aStXzFALG6yuGdQ9OYEu7+xq5jQBD8MuEygobtdcd1jUP
E8hYYgjxV/HwssBltS8Ehk8uHWMHsrEWEb+3mp+Jcj9d9uJ+No5/LFcPlmAi
kG257DAzDv/LM6KXdzJh3VpA35c3jjozkm2iMhOmnjvq0nj6TOwgOS3tYyI6
Eb+8/nEcSttzndN0mEiwrvfLaR2DQ/FedzKYWHapVg0LGYPUoOG5UhMmfJcC
Bi9pjOER/YLgXjMmoriBSv5jowgxejm3zMN7jtFrGhJHsfZNO/cnHn4iPOPl
bToK+cwS72gev0rQSjJ6noXNyqVBp3n1TbNHn2tlsyDhdoIRxusfGOGiEWbL
wi+bLpM2aDIhfmh+6p4ACyJiP8/M8+YPen/SvJw0guP+RtKmPzPxKOd1yq66
YZwV1SatSDJBrWSs3tk5jMBJhT3b1jERXiCw8il4CJx8iZc58wTS2lcDEvo+
4MmLVbH0cQKKU2WVsQc+IHEqy2Q9nYC8la6f8KNBpMhlqI1XE3BcrGjfMj+A
WzpFEfvyCLTbtLkM2g7g6/m1qflYAnVvFu19Kf0wjYoe+jWQAOX2SdI/W/oh
qnCmknWWgIf7kWZyUB/q/8Wq3WhMoOo3srv6h/cYb57fXKxI4Kn/KnOj8Xvo
Ljwqp68joP2C31wrrxdFzTlxV9g8/Upfqqja1ItrD2I9IqkMXOkrHCwO7MHT
ScNp2XQGntlp6KiOMVGzFJj7WzADhL+HivYxJnYniou02TLgoLaJzX5DgCTi
7D6kyoD0qF7kIVUC34m5lasCvPymOCWnJwwEnB/4EPaejn9StJqMeHu12lcg
KlVARxd/9/V/yHQcjrTyVgyhI8vC7fDDFRoWhCubSo7SwWIpuW/0pYFbalhf
t4MO/yhxs88D3VhgJc5a/0XDBZOq5gqiC6Ohy42nymm4qJkfGUzrxMzhj4+H
QmnoU11RN6V3oM3iVRGLd09k0rx6fu5tR/a4s7yzJA3KlB/2SI20QT7g7MrL
F904kci8rjzdipbwVsck7W7Ic/dnXlx7hwSd2Q0eNV34fIZzsWPzO3xWMQtQ
NeoC5WmpxgW1Fthmz/X21XZi/d0aG1XLZmwvHNO4ot+Jk+E315S8msBJ59h8
LOuAzh2HU7YJjfhVgdZrotYB/XZxckl1A9LNM+RD0ttBqzlRbjxFhaT3rgtx
4u1IVCjQ/7aTilQfavKNW21YtnONZNvVI+k+mazFacVqcbHB59g6ZBCnKqut
W+HsufXmwWe1oG7NSxZ79Q7rbQVJTbveYi3u2iEFiXewvSOtFlxajdNnrpUs
eLXg6rXYKHPLN1gI2p0V3tyMbJUBPvnJSji1Ec8adjTjFVVl/u/Y13C7br5S
crUJiw0dbwsNK2D68GKPZW0jhNT0qHoLZZijT2+L2NgINd27QQ9KKRDqCgp1
tGvAJa4VOepGKQ5OCEa0pFIxFFHVKHekBIw4aiB1sB67Vc456ewoRof1rMfh
bfXoK7NOvfnlJa5WNulbnKyDze2+afXKIph75mrFyNSCrFB60SG2AKUsj0+X
w2pQWKZUQvPNx2GbFlnZsTd4JBL33NktD1X2qoPJelXQV/TV7HHLgUyVOJUa
8xrMzMAX3/yycP9IpkhCXznOpTvV/jvuOfb/durG3PYyDP/x6Qf4pmOd+13P
HvtSNN8wMncaScOYwWyL0oNi/PE+vuWQawqYWX3bsn1eYiWP8IxY9wjnxX1j
H74pQKx9blJVdTxMItlK7IU8UK9mxs1si8GeZGntELlsjPpIxmZM3wNNh3pw
n14G4rOSXCifQlFZygwtik5BYW0DKVc3AK2y3l/vhcbB1dDUKvUvV9x54b+s
kR8Ki1nBforTuGGL3INb+ru/GfKFVvkRMjGG//uv/gOa+cGU
            "]]}, 
          {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], AbsoluteDashing[15], 
           LineBox[CompressedData["
1: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
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], LineBox[CompressedData["
1:eJxdWXc4V//7jqKBIqUtRYNKH5JRet2ERJG9E5EQ2bvskRWyJSsjJCMrJHtk
b2+UFEokW6H6+f77O/+c677u67zOs85zP891jtw2U7hDvWHDhomNGzb87/7/
L6oVl7a3gTnQ0v6Phez1wDGmtQZ/6QokKG65emTqCSRpU7xX6RpwKSyfWpMt
Fk9yTuw6GdCGjwV7smPDknCzKd5hs0EXdJfsHidsTANV34lp1fFefIgUrPG8
mYkQ1vgJL8kBNF2Ib45JyoY8g5HiTr8PaGaZtn46kYux433cUP2EoIMCv3uX
X8N24EN5ysAIDrTrrXCuFaBZnaPg4Y0v2Plvuu3tUhH+O3GTfkvhKMI1g9ZK
vr7BxuKHg17bx9HBceiMVFspWAS/yQmqf0XIyF/RoKy3cPrB+1In4htqa5M0
X7u/g9HLTH6RugnkTvpZmaZV4KiPyaW9E99xTumv0m7fSiyJ+9By/ZuExK+z
+noGVfgRdq2pcMsP9Ir5GBihGjseW2f/o5nG0PGnfYK7avC5hfeNxPI05I1E
Jz+P1iCFjbOxcegnDurbB9nn1uLFvLCUgeYMNHRnTbc51qHZ0UyqvmoG7A2d
P16Qevg42tK84JjFBp1ePv1/9Ti3cMDppNss+oNenrxe1gAHF4qbYf8sHPO4
zc1tGpE4z1TvwzWH5V5v609c73GkSeZ9it0cru6xvp059B7fmwMpI+/mINA1
x/XJrwl0KpkMmhvn4fU43DPwfDPURRqv/Hd5HuMbg6cqh5pxLLD7pOuDdT7X
JM3ftQVzvux7jfLmkVbMVvWLrRXWlXv4t47OA89adu4pb8VGmq83nZkWcGZl
XGhBtQ2101ZHxi8s4Je8dtKz6Tb8GJWqu6mzgMevKkQZRdshoh95mdp9HevI
zIj7toNu0eDCTPwCXhRaSsy3tSMtcXhNrGQBL/eZBh/Z3QHvjEi3fR0LSH5C
s6VXrQOb2qkNAkYXYLTv9XuWpx0Q3O03VbSwABPPhOGJwQ48TdReKqRaxLfB
FT7lA52IOFRPk0y3iPKxpCRt9U5MSvYJRe9chIGW8QRdRCcY5dqv57As4uvA
6de3OzpRQf3kCfXeRXDYe4ca0nXhU8TY0ot1vrN+tf+oeBcWF6jWStefz/id
aR/p1AUuSfs3ivSLEMw3E2jK7cKxOGeKz8ZFSNgvu1aPd+GMRUWM2a8FuB35
8tBrfzeC+h2aj0wuYOw1iyiLTDdifXe05Q8uIMwlo9HRuRuvKdSh5P0CynUE
qItfdWMo0ySqu3A9HvFelZ0fumGn+Ounf+IC/DbVNbXR9SB+rI7XwW/d/58G
La8Fe/CprDEkx2IBXFum7njo90DMhrZOQnUBdw/tZhUL6kGAhf7e6xcXUCiU
YLJc3ANday6d3kML8H4wUZA80oORY7nVHX/n8S86Cse39kLs/sOldx/nwW7n
a7Z6theuFqtvL7+dhwSdhWyWci/+lRaaBsfMY8+mehojx15I/mXMeGM7D5kH
RxJ543ohu/z4Rav8PEQ+bzmwvbIXd+6G/zd8ah7fjp28+e9zL3br34hd2TQP
5oxAkW2b+sAe4k85+2EOn9x6Ank5+rDxRZ9xYP4civsf/nES6wNdo6fhEf85
6FjTCn7X7cNaeK3bb505uPw82evq0ocYbrm/R/nn8PV+kK5YbB+46qLKM7bN
gZX5guL54j5ol6qQZx9nkVZWwKLR1YeZAxLhtHmz4KU0bC740YeluFT7Oc9Z
iF8tsZLa3I+fmxqFTVRnsbblWvR+tn48CH7c68w5CxeWXemnBPsxHTk2xLc6
g+08qbUuN/qRd9PfL6p5BjdqazbuN+iHaS73u9fPZnA/4LzxH6d+sM+tUgXf
n8GhQrr50yH9OGrB486PGdyau+KXmdKPkO2V+3J2zKDpa/6OB2/6sTpfErut
4ifmt5UqJzb3Q1VtIfWBzk8MLeAo63A/kv/83lO34Se0D7CdXZzpx6eHy3uW
EqZhpefEyUlNgaVdGt8B0Wn8IEl5ZTspyOsfvSM28gPNqTd18o5SIHODa8cD
tx9oohUoo+elrOefiqbzyA/sFOsVbxWh4HSHbpB81RTesguZ/palwGC82ZRW
bwqMhwKfBWtRcG700sDqxinUDp47F2FEgbbYYIBwyiSecsq60ttSEKYi9q7z
yiQKV860LLpRoHxr738N375jQbxHVSmQAts/AseP+3+H5Y8cRa4oCp5GL1st
nvmOG9Ws3xySKBBmoHIiHRMwLj8sKPGSglmdu9xbbSZw345K7XEBBTvCaffc
3DcBX9opJdVyCoLuXlERLf8GkZZc3qQ6CtwjZ16U6X1DXuTp7+at6/6yX73X
s/UbVMeU7tf2UHAneywqJOcrdM/zpiYOrdtf69WzpPoVwuLFlpu/UGB/RM54
24avcL3Um/HrGwWVF1yudbwYx3JP5GG7aQpErS32yymM45WmYqjnPAViL1JP
+q+NgWa0rOHoLwp0WF47eaeNIe7rO1vFNQqi2/Y0SyiOYTdj8rW9GwagSvkV
0PxvFIa2kjOWGweQoVn8/VDWKIb5yjfdoR3A9iz+NmHNUWzUEjs6s2UAAsNr
X05tG8VSKPXgbroByO7yCfvx5st6Xk+U9NEPgEc+jtHT+AuEireLC2wfgMT3
JNnZA18wcVF+8fyOAeh2vmUQaP2M0SuXJHvWcUQLW7+K22fc9CtOZ2EcwOMb
VZsUzn/G13uzXqvrvGYPdwnn9xEYO74R8VrHZznzfn6MH8GOq8cFC9bP/+37
3sxSZWR9PrCvCWAYgNfRT5RRhhF8kdwkyLBuTx4rezJ/3Sf8pXEaFtg2gOJb
yocMXT6hW2GNavu6PzUXve87CH3C8CO+kWCaAXxpcRHq+TYMizKbN5XU6+fp
q+220xnGMNNgZeI/Cr5mX1voo3zEQ+Fbp3nX42l/zvHAstJHROTMH7Nej/fq
31dhXR0f4GNf2mu4QAGz6tB/JnIfsPJgSZdphgL6Tnn/d+1D+CZ0a/z+JAWs
v8u2NSsMoZpJ54H7OAW/17Z+C+odRFtgvbDMCAVbrkyc2qo1iKatrefbBylQ
WxHMP/9lAFV6B23oeyloqnY5z2wyAMb/jm/c2E5By2bFS/FLFHi2PBrNb6TA
e3M0X5/7ep080NnHXk3BxpMRusWMFHjNXomTLaOgeq1kAgn9GBMPvye4Xs9b
ZP52G/P0I9Pvme1IFgURe7cw8Nf04dWe+WzpVApOstbpxqn1oUJEisYmjoIE
r3rfhOlePM+I0dWNoGBZIYJdyLsXl21j0hgfU9AVllOif7gXebcPvPPwWq/P
pY6qwyU9aJt/5VX6gIJEvb9xBio9mCne2V9sRYFL7deE8wvdkLvaFPTAmAJG
Rlo639Bu7H/h77FZlwIW04HtN/m6Yc3L7qWhSkHylcjurN4umFxuM7CVoeDv
nhUbO8cuxOVsWNQUW4+HcRl14eEuOG15vEInRIHWxIrrnbpO/LunCR/udfs2
qU+73e+E8n2XR63sFHzkYhbdvLcTWh98oj7vpWD/41nD2aoO5F42PlvDQAHb
2WtywmYdSDF+tM16vb9FRfYPfTnYgW2BQ6NzS/0wN/Ge+dLUjoNaibaik/3Y
2lliLPigHS1NubY66/0SNO4nP5xpR7CAWpRcVz++Xtaii61cn1vMNAJ31vfD
SWa5hIGrDaX0rDRpJf1YfurBsjm8Ff4y4y+3v+rHVC5vrwt1KzKVOs5KJ/bD
+sdSvpllC3ST5/k1wvqhE11g0TraDCeOW0bwWdcPi9vtoerN+DPEarLi0A8+
tl1Pi9qbwM506Yu/ST8EVP4m8Ug3QVBhxHRBux+Jdx9W/K59j+LPB17yyfej
datg/2bx93h5T/GSjFg/Ame/dSvWNII2Xr2MnO+Hx49rWT1XGrGcP1q19UQ/
RhMK9LyaGmDCXzjxam8/drk9odVUaMCPce967m3r+sKyM1d2sB7T31xnfVf7
8NyT4q9mUA8jrkurFVN94N4W3GI+XweWgSrb7g996JW2Lw1yr4NTd+RCTet6
HS6Op2cx14FKpnpj6Ls+cHD6rFWl1qLcKY0HOX1IrOM62XCxFpE0m+neJ/SB
SUk3p6CzBmbXafbzhazrcVANl+e9GvSKX/n20K0PSqfeXTpNW4OJJ+1/0iz6
8PaffGJqUjU2MRmO5K3r+yst2cNTItXg5PbaGy/fB/5pt9DFT1WIpLpwwlR0
/X002lOl7lUIsysKPsTThz2UGC7B41XwLY7rzWHrwz2VL7p6TZXQkh5wOMHY
h6nzHcX8lpU47Wbz2+1fL5bOXTDK3F+JQ1U03RXr39EJ6oKKkpoKBB+U9hn9
0IsNLqMHtM0rwOMa4/+juRcl2RvmHx+qQM4VTd2h0l68sgmMDIx6hx/3Alxy
M3qR4KHv/vdXOdp1n9wyjV6fhyo/btTXKsfAM0UHxke9+DtUk5Bb9RafnQPE
ntr2In9ehWbw1Fto8/jwbb/TiyCmWzTdkWWYruisMFJct4eVPTaYtgw0tl5a
r0R7wVKjM7XJvhRKcq8dh9bnsdWzAiLHpkoQ5WoVuHCoF77sp7eO3y7Bk4gt
tMt0vbBd/Tl8cegNAqRrlUZ/92C++ZLnAbU3cHq893vZ1x4MpZ774NBbjB+h
oufcenpgq+y7dE21GPuvcTzlqe5BRMTfLT4DRbinzRXemtMDk/DSe2w6RUgs
SfRVi+uBO7daAsO3QujnnBpt8++BueqYjLhlIbqpLu8479CD6Vh/0ZK/Bag6
WmH9yKAHG4ybTO8EFuBER/TD94o9631lx/eLrAXwzH0TsirSg9HNl+bP5eaj
a9J/70HuHuzQnv8udiUfY7JF9qcP9EBn5qTq7Q+vwTW1ae+ZLT2ok//vs5ft
a1SOftdkXewGlzK7RgrTa3xcEX6x4XM3ouaKc4pe5UEqfoNud2s3rLSmVl7L
5EFbhGsiurQbm+9Gm4dM5yL+fGOS/IturG4xN5EMycUTupWfq2HdyBQ5ca/l
fC58fh/miXbrhnSgG92BoRwc2R5Yx3m/G8uvKQwnPXNQeqZuxyuNbnRZNShO
nclB66Oke8clu3HnSfS7d3nZ2CogJxh6rhse3R/TF+mz8dNaq2vhcDccH1VO
GRu/gs9Gl+hr9N3gWXOWZWzKwmD+rq+Rv9b3id7lrl7uLIRKxe4ZGO2Ceq9+
RXb4S1zl/+21s6ML7ZIWYQH/MhEz5xIg+rYL2gyeDLdMMkEVUOd5N70LVCH/
OPYNZcD8QEe9Z3gXLnIG7siSzYDTra2vot26sFVYQ5ihJh3bw/YGpZp24YC5
ttJp4XQIN/BXZap3Qe5vgtCfwhfY6PvhWbpEFzTeP6C14nuBhbxFuwSeLmzo
/0Hvlp8Gu6q2lOBDXWD8O9+zXyANnOmuTo5bu9BJzXaYrywVnULTMtqLneD2
FflYIZaKyNwec+GRTjA39FwsaEnBVzV6/t0tnYhrKgqj0UjBFW2umW/FnSgW
onVI/ZaM3V8/zhQld0Jp9k5mgEMyDizw+roHd4IhVYotiz4ZD6gitko96ISi
hNCftcTn+GIyXEln2Ik/g2xRFkLP8ef4NaomxU7stEiy3dCVhN2JTiw+6ERD
maZM/P0kzHQ/vCFyqhOvlUT+idEnYeFhw+8llk4EmH2MHc1MhEj2+duZ1J3w
fVquZyeTiL+6dD03pztw72H227mZBBS9XHy2faADm/VYRWQiEqDUYr6tvLYD
jOM3Mx9eSsAS/31tk9wOqBipdy02x0NP8vm3fc868DKF9aj90Xi4jtyar3vU
gaKnGcXmTnGYtRWusbLuQEMwh0Fr3zPEJI2ksOl04OMjIu4q8AzTXPofW651
QOGZWJlNTCz6encWOAl04FOQlmfchlgsMomYc7F34Mszz7jvRk/x1vqd8sD2
DujRXlOV7o3BhGNqhv9KO/Q/p4u/koiB9q+w12S8HdQq9eKbi6Mxr+qaP9/R
jo6O8QdXzkRDy65nJuNtO7iLD6vdTIkC30bdTP30dtwfUfS+xBYF5wMqx4+E
t8OydOtq/7NIECnl559c27E9QWrqCGskRI319Z6btKPUz69jW2IE4pN/pRqp
tcNwOPa29/EInGb4mnVOvB0xCokRPq/C0T5vX0T1XzuM2l2TqITCsbyflrr7
QDsKKKd/f60Ng1k8f3PG5naMylBLcSuHoUL3UCr91zZcqixzahgPxW/VA2kt
5W3oHRAuyHAMRWP4GnN0RBuC3C0UGhlDoX1ut77Z/XXd13H5tjf9CTjNIhjk
r7ThuX6J2GOxJ/hx0MmLsLYhearAgPVTCLL6QyC41IpwZhXfcucQxC87vSKt
rTjgObJH/3AIotQ9xBRSW7FX6GDepqpg/Kr5fd/KuRUerNpcEQbBCGuejU9S
acWqSrbndoZgdK0cFf/E3YpjdDRT9cZB+HVJuuH05lak0InX7Xv3GAfNmKMe
DbfAdbDy3T+Wx7h3IOLgQlELDNv2a9+1DMTcxicVZsEt2JW95kI6ApBzhGpy
1bAFdgb3tK3OBSA51Zs6WrQFI6+Z/Rai/BHS+85Ecn8LenWqJnKo/PFI48vj
zfPNGN49URxp6ofnujQplKZmGEX+5x015Iv9Q59MypObYdFYwfNc1heHU7q3
Fj5shumXzG0vqh9B8s8qVaVKMwqdtcQjLz7CuK/sreGzzeg93fhRt9AHF3cY
lTBtbYbZloM/f53zwWMuZxO1z01Y8Tbtlcn3xkGBwdbXpU3421EGBQFvGO88
dIEjvAkUGTHWX2VeaN6lQZtxvwn1f39k8kh44QSDp5/E1SbwM67cnW3zhGyK
88HlI034UJ6wm+umJ553MDK9W30P2qG2ktYpDxg/GC191vMejn7f4jqdPZBz
1dgsNPs9Ns77S3EyeyC9Z+VBgu97UCpuudWlu8O/PIOvVu89OKmqpeMuu+Oi
xZ0xKvIewnRfxpM/uIG5pm5IZe97eO1s6Wh1dMOGoCCDmrlG3GIWq2Dc74bk
TaxN0i2N+Hvob/StUld8ZxyQ+p7WCHWjHeU52q7Y2b706Ll7I068KZP+vdEV
38ounbW92YixD7c/3FRxwX6Hntnbgo2YH1n8/viFM4pGU1aNmBtxMiD9rcXf
h2A5dyzEf7oBw78USudUH0J1Y/lifWMDmqPPvfqb/wASUnX3Dqc04PHU7mr3
3Q/gbKfO98S1AZ6Mqj4mDk5QYjQLYtNqQFb1pa/pnxxxZ3au9L1AAzYfe3SS
85ojjv3bvhjM3IDF51Qr/cUOOP1sr4vVz3oMRvDdeMHpgNy2kUDLpnoIRV9y
835mj4Bb6tqP0+pxIq/vot4ue1zL6OGs96hHT8cJF+7HdrBh0jt5SKcetkt7
4vq32eFZ3h6LYOF69BXbmSn42aJs30DNkX31GKmKvBlAb4tTO+s82xfr8Frk
y377EBuwXKHSe9ZZB0FbNfbN+2ywOtXk/ii7Dn2cvNdOPbdGnMnFnU8C6hCv
x5jfe9YaJLUEJUZ1iD7a37BabgWG5bwLVJJ1cNfzvRgoZ4XCZXueuxx1+D6S
tNF51BKnztyRn6KqA+v+Eq1KR0usWTXXBQ/XgnWYuVaa2RIno8fLlN7W4kyM
3RrDKwsYev67Kfi0Ft/Lyqn/SVvgUPTNrosOtWD8mcay87s5LHdvl7ilWotT
xyLzL/qbw9xWYiDpfC1sOG6Gm3ObQ8/L+A3trlpEye3QuJZmhgD+BVr/uRqM
aVkqJizeR8AJ269nO2pQwLQ2+l7yPr40b3VezK5B0cyt64XPTCFT2f5j8HEN
xu8F8ckum8Cxukjpi2kNftcI5DsrmYCjUKKXTqYGQ1vcpPkK7kH+rG2w8uka
dLJTPmjuu4eISI/ECroajAwnvvnsaoy6n7nHZSar0apxJqBw0gjkqbLw6vtq
qLOX6deqG+FDdc6f9xnVmAtpyf3z3hBZ9zS9yvyq0bVWTmRhCJXyoqk242qU
RGryphbeBVOK9HWaa9WY9v5Ev/jfXdzgGi3VOlWN8WKeVK5XBvClYlHopavG
ggXraQFuA/z6U8lhOVWFLsskNrrcO5DX6r36X0sVTNoE1CL576Dx981OxldV
yFs+86u5XB/MHK7dzEFVkLxEZ/NMSh+/5nx0hcyrICzyK3ilVw/mhl/93OSr
QLNHVKPXQA9dgZK6U7xVOH3y/Un237dBbx4077CrCsdljsR3Bd6G0wleea6l
SgxKC6QOcNzGwLVrvn/6KhGVLm16qlwX8hfc0+bfVCJy01XDN+q6iG5KKKaP
rYSGoZas/bIOyukvN1x1rsS2nud7tSJ10MhyYiRNpxJ/w6s3qAvp4BERZeAS
q8R4sui/upJbULYvVm47VgnV4bNRn2hv4ZXxZFXklvU9ZNT89TcVbdwJd9by
mKwAUTmY3ZhxE2mrkpxPWiuw1t5z8z71TezyMztbk1sBhVm3TVU3tXCqyMJ6
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
yC3n1zo6vsiI9zlQsuUd4d9ZUMl30hdRnz6o6t8oJ6Yc9FGuM4+QcPbTc62Y
t6Tsks0VsTePoJ+i5eU7UUZK92Z+dHJ/hJk7B/Z2CpeR9zsaLTmvP0LyD4tt
rGGlJOGIx95rLI+w4jcRrfyzhGQpsI4Pf/IBy9u8IF3ZEvJRX3N+PNMHi2OV
5FTuG+LVEaJxy84H56NFnWP3vCHfClz5r4r54HfdsxfxbsVk5eem5IQdPriF
95GHfxYRoaV3lXeHvKE2IJu0WaeIHPLh/hKT7o3Yky5RYt2FZOaTTNQlO29M
782qfHetkChqt/y7JuGNbc4WFMO6AqLndNykltkbGjkbGE6LF5BvviIH0z97
4e6p0F9LNfkkPYdNYinXC2r9/clFV/PJxuW7e166eSHw+ENPrbbXpO6D3NH3
8l44Wlpo0a32mpTEPrWUPbqO9y7Z7hjLI7tnxC5cmPeEvn+F6KpVHlFY0zrs
V+MJ0fM9XL40eUS2pOk9ifCEDuOQc3p07rrCu6irGnrikviNmev/5ZKVHZ/n
Oy944tmlz8H6jTkk+vFMQw6DJxSL6VtG9HOI9cgZ+plPHuh3KDYspM4h8yXb
FoLyPbBUyPD7hUQ2catleBP0yAOzwk/GtfxeEXXGx+HTWv/jpxnud2WRd/sV
qjN5PHBSm9Ouii2L1Lkv2NXReuCc1PmDopYvSdeXTxxkyB0Zp4e/tNdnkiwn
kVamPHfEWJ+pUz+SSRx58ppFHrnjLlX/iRrnDHJb/6Pee213JF3l+f1rOJ2I
NX7vzzrvjjMMP/NGxNNJ9Uc+y+/07sg/QatomPWCBO6MtXMZdYPM9lh1u30v
iOaB67wmZW6467W57vejNNJX1DaVHeaG0wWfmQdXU8n3LOp5KVM3sJTyCm62
TCUfT7E+EbrihgmNp3HGkynETztjr/NhN0gsPT8+dzeFPL/m3svy2xWTD7cf
8f+aTIx92g5u7HLF7nxhGXbjZNJovZ9cznKFQVZS74ufz8nQyFxgl48r/i1c
V9hm/5woH2pcyb/tCniYl/FvfE5eMbm8mLjkinE3ettDIUkkReRCh+k+VzR/
CL/86kgSCW4gCe7fXcD232sJSn4iEeVglapPcoGBV+LRIOlEstVAP/WFpgv8
+/I0Kz4nEPGpS50cu12waNhoqf0wgTQdZ2K62OaMT2wW3zX2JxAXih7dd19n
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
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], AbsoluteDashing[15], 
           LineBox[CompressedData["
1:eJxdl3k4Ve/XxmmSiJIKlVJkiopQyr5JiMj4zZTMaaJBpiJjoslUplTIlCSE
lJQoIZJ5yjyec/YxT0W8+/fve/451+c6ez/neda6173WI2Rz2cB+GQsLC205
C8v/vv//Z0F/87abj7Mgn/Axsbg2EM/nN0VOmxaDK/jVe/mESOQdLlbzli5H
0gNJ5bmGeMRplQ7tr6jBK9Pswr8qKfgme8Tx2uN6CMtGcPFGv4J9zVCJgkQz
PrvWubdezIJm+LsUoxdtKGWcrk9geQvVu2+KD7B2wtZgaHX03TzsDU+qF0rs
hjn9atcoewE2yetcdJXvhcffZf/ab31A1SXlpuqiPiyOHYgPpX3E74/Bry0O
DmCnpQfktT7jUI3UVfOUQdSO50r4/SpGU0zHnQW2YdS0/jPZMPsFnsb+Cq4W
NBxuyTs7wFeKDU9TE/+l0LH3MXcsl/xXSEa3fv3ez8DVprqSpJPf8Ls03Yl9
MxPXypuUimzKYPj6r8qs0ghMJbj+XLr2HYaf9mV+Mx1F9sxTl3Kvctw8oeBq
JDcG57XiP/oCKjBkT3pdKBjDj4zI9Lo7lfgdUPWTkB+H6w1Hq7TAHzCIbRZj
ZI5jt/2vZjffKnS2m4kH75yAEWdNnKF7Nbo5VTRlwiYwzz/XqXPxJ2JUifal
vxPgl2S75m5Wg72bONdwWE2ihPxxfmLnLzTcLG68VDyJNse7vHWRv3DptfUm
YusUuOKDX/StrkXJ9r5rUc5TWPptfWqvRy1qgh7ZhpVNQYHl0rGioVrc19eW
ObZxGrQDQlaPjepAJO2e+W45DbrJpPPnz3XIqnkUdiBlGjeCTwqritejY7vr
24ThaTSzCE+KhtWj8vmHut2iM/ASVlByma3HjaRP0u3WM0i79uOIzOkGbPGS
qm6MnkFHay/72c8NiDCdc5eqmkFvtMCTzUKNsGwsKJ6bn4FHpEiZjm8jwoey
p3XEZrGg/FWZu7sRqyJvSajqzyL+kGSCjVITmNX8MiOus2Dj2mZ5MqYJ2vMP
n9rFzGLZ3ra6lskm3C8pLCosmEWkg+XB1TrN0Kg6+nx14yxOZnzM6U1qBnPu
zxqrkVkoCfcTTvPNGPmsdLtpxRwiy/W/Zem1oOZYirYP3xwy6nrXZyW1IIR2
3PSq+BzMNNwars62QOr0kHmRwhzCGpRezB9vxcf1kp/cVOcg8api3iCmFd/X
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
D/M=
            "]]}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{True, True}, {True, True}},
        FrameLabel->{{
           FormBox[
            TagBox[
             StyleBox[
             "\"\[Eta]/\\!\\(\\*SubscriptBox[\\(\[Eta]\\), \\(c\\)]\\)\"", 45,
               Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}, {
           FormBox[
            TagBox[
             StyleBox[
             "\"P/\\!\\(\\*SubsuperscriptBox[\\(P\\), \\(max\\), \\(Wh\\)]\\)\
\"", 45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}},
        FrameTicks->{{{{0, 
             FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
             FormBox["\"0.50\"", TraditionalForm]}, {1, 
             FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{1., 
             FormBox["\"1.00\"", TraditionalForm]}, {0, 
             FormBox["\"0.0\"", TraditionalForm]}, {2, 
             FormBox["\"2.00\"", TraditionalForm]}}, None}},
        FrameTicksStyle->Directive["Label", 
          GrayLevel[0], Bold, 45],
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->{{155.0625, 43.78125}, {127.62421875, 29.25}},
        ImageSize->750,
        LabelStyle->Directive[Bold, 
          GrayLevel[0], 35],
        Method->{
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
          "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
        PlotRange->{{0., 2.}, {0., 1.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}], {400., -243.3508830702711}, 
       ImageScaled[{0.5, 0.5}], {750, 463.5254915624211},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
      InsetBox[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], LineBox[CompressedData["
1:eJwVxXk4lAkAB+BhS0uI2GrCjlZT5O6mmp8wyUYPclR2RTWieqZDjijlKCVy
pbYQaiy5bUa5MstoFCPHMHLN8WVq2NBFKtrdP97nXXHwhBtDkUQiOf3n/33f
WlkfVplE/IWMUVd2KVDMDWp/NAGDAO42ZUYFku0UlIdqxnG62iXjaN5DGN7V
NEm3e4sA24VpmyfZsFmj+sAyeAyvidpjVPvH2OGps0jClENkVhm+P6cG13UM
uBa7XuNiXITvxx/qsaXo24Jhygiqki916TEbEOWQnT8wK0UXj56gMMGBvW+m
y+N3YrjfcuacMGoEO9bwq9OPw7D1f0H6zmgCs8iLZxXcj2qOi4UPi4vS2JjJ
SXMhfNi8efRXzVAyW33a2FqAPP80xWAqDylrDlFKUjthpiUXVh1pgf1UEHPP
8XY80SlmDBQ+A7nH//s0niOmrfxCzfhzzFBONQamP8UvtnceWK5rw6sYtvYi
vyZURgWnGoTx0VCcmW5+i4Npg5DNofXtOPui+Ubj3jqwZliZ1xQ64CDPXJRr
/BhJAvuYMFYHonhlBcLUSozO+O8Od+jEiZfBjE8RFRgkV0iujnYi+hk76mZx
CZSvXG/NSezCRs/66XbqAwQGfNSvtuhG7ly5kZJjHrZbjdnyu7sx3hiUz5/L
hWl7WZUwRAAv9V5bM8Zd1JY9mu4i90DYrv1OwroNfcLDvbquB6vz90ljs9JR
L5toiT3QC+UCyU/a61OhEjvYZKYohO+p1POR965D7RChVM4SwvTQtp6xv6+i
sZWSRXLoQ5Iuw2Pu/iXM9aofWSrvw1xVqc1G42jYaZhMyONfIpxPj6g7F4lf
R7J4x0364RPW5D2adBZHQ94Pp/D7MXXuJsnrWDBW7RJXOzIHwP8a9UI0cQo+
v4Wui1YfBPcyZb6JEhNm7v27VpUOwnXw4Hd9vUB07FF8qOc8BO4nK+fCucM4
o+q7wWlsCFmesr9K4v2wP7R8WcqVYZx0oz9f4vQ7srVyfJ+uFOF8ADukLmgv
BJqhkw0NIiD7yFQpwx1ulh078kzEWG7ZQmUouGJMY6F3epgYrs2CgU+eTvCI
92clNokRd/mNSettB6zUkn1hqEkQRrFBIssOtTvfVU14SHCDU5BS4WkDBWe/
+x8zJZhdRxniG23BJrYud4NUAmLBbG9s8kYs5bDlgVQppr74j5Br1+Kl7jaV
rf5SWLWn/VOx2Byt8+DhyJLC+FqyWhrHCNl3ND7/LJKi9EDu5zI3KrxqWy9t
WkJgt75X6vb7KxBIKnw/vZOAitAmx5eqhxQ7e63iEAJzNbIVhmrL4Cg7eDX6
LoEIztrD1Z1a+GPo+GhcAwGBMlNsvVsDnhvkXbl9BM6cDB/p5KlAYPhlb9wb
AiWa890t3s8HnezRXPOWwHLZvsVPJhWQGMzwvigjYBGpsy8Bs7RB1YFjgg4C
T023Xl7YNE2bMVApOFBIoEVRIPKz/kCjFd9LCjxJIJX+oTv68zitj2pW1EIh
oL+K/i2h7Q3NiTy9vqNSCpK3nS7rEUEbkqu2WBtLobFDPcJFW0RrzFryp2ak
BPofeJKvm/tooQVrcpPyxZCm6xgxM7poGTEyN5KtCAlkI6lQuY1mWuSZZd48
iH8BKnxayA==
            "]]}, 
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1:eJwV0/8/0wkAx3HhKslFqSnhKumbKZJS+rw7ypdGoq96hIghF33blZLILaXD
Wb6Uvhjd+jJJGKGIfGkK+bJ8WWRms82U+RIRue6H1+P5F7yWeAe7+iorKSm5
/+x/i33JB7bNUiCwI40yxnyK2jnjznXP+1F2V1Og5puN9XcCCluKvsBbzWb0
HCsXS83PcqJtPmOcdCjSWZGHTpHcYwlNDqb6jF222wtAiea9exskA5saqRrF
LMLKBUMV2hQJTNcsLTRRLUbNk2D+SwMxslSkQv+gVzCdG1GZNymELlevf11/
KfZILyF2QIBWn9Ji9qrXYExYEoMzPqG9WXuGPbUcZv3JQ21n+Ejh359W8G8F
Yti8hzFrWyAcYxrmiiphOrE1rdKSB2XV8N7x5W+Qmy4h2zIaUB07ucPNn4uH
Vncz6YF1MNS7J03NqMbD45wtxngLV3P/Mw/73wLd1MK0hCrwpI9u7zKvgYTj
ZO54pBw7crj+ISG1CDGO1DqdVIo39Gd+mq/qEJPKNTt44CXaVwdOC1euh0ov
vc92dQHK1R2HbrPqQTSMSGPjOZCErdn6wb4BDL1FLSXns7GG37XBqK8Bkc6q
bbvYmTCmFBpFxzVit0zFIXPZY2jnTOlPmjVBMciNmmXHwiZH1aYLzU0458kr
HZ1IgwUlIFTlPA+WXKMHNV73QG8tLIvX+wCVS6c53LRbcOTYphmWfUBARX5l
dkoi3t+ieBb5NEPdk0H/y5QBtp/TWZeZLTiQcvSB4G4sivK5cdKMFpiZzttQ
XXwNSV8owWHOrdC8szt6N5OOUf05Q1pDraA2sptHVlxG6ZTurPSkNghzFFWz
z4bBl276hLyZj7b9HfUT0SH4SFnMze3gwy7CJVzfj4Zlqts81kd8RGdNBN25
7yQyWS5uGYbt+Bba+NFaKQhD9Zq3F3HbUZE6S+OATgB2aM8fvhTYgf72SVvp
uA+u/kg04P/6CRmRz3d2RHkh9M3RkhU5n8ApmZljYu8OMuWkq9++TiysZr/0
OXkQjJGblsnfOhG2yIlW5rMXcVPbeXwnAY6PaSiKp7mAVmrgeiRVgAG7iQSF
myM07Bb/4CsEKH1/ZeD9PTv4hgWkOVh3gTTCtfDKsMHByAoh+0YX3smsf9H3
3IbB6S2/T4q6QI9V23lq6xa4uhnNhYUQ0+Q3lJMfWKDghQUtKEqIugyWh02T
GXQDOvZcaxXCPPxxfILtWgQZJO6PWdUN6j5xyenRVejZdL397PluXOxxuKn2
9/Kfn+UP7HjXjREmtzHl0xIwZUrWw7oinCFnjm1I1cPUvfTZl/4QQce/nHPw
mg5WZym0hC9F4P35UTfeWRvfNyFCR0OMiScm/qRaTXRkunYtdhej/Uih9akq
dWycaTwsfSKGyvHidI5iOhite5JoE2J458Y24Isypp7vTSqi9ICmbjY+aDFF
1OmVXn6a0gNvcnByUN4Yse7YxWBbWQ9OjD4qiTL6SsSNRT6mbZQgb+Zo2UKv
AWL3ysRDZLoEElOlK7X0PmKzDXne4UYJWmNYbiIPCVFhz7L4rC+Fu9X+7gX6
3cQc1uRm7jEpjP13dqtu6iT2adpkv8+TQnRfmdEW3EY8Us340Tklhee6pkSn
TB7xbPgVu9Zeht+Sh3lW5fVEGom24Og/Msw1CM/y0nlHkL72UdybZbC+GOG9
urGSGDx+JddvUS+0SHXODuFlhB21KmH+4V4YWjYt0VC8IPh9p9CW0ovrJGOX
yTX5xOLphnNGPvSCSTar4YZkEw8K5NTA2XJk3m9pFLhkEGPnRb2NVnIIrjJu
ZS1lEdfzqu6u9JXDfO133axlTGIPU4Xvf1mOco8ZYjOrm0SNSb5Ge5wcfW9O
nDtRHU+IQ11Ds+hyHL4Q5q3scI0wUft6QbxPjnNubsNtBhFE1kDVxdeiXgzd
9351yIdGbFlBSggalEFCSi/pyKES9be2e9aVSzBQGdJX9MyRoBVplVG7BfgP
Zfvv4Q==
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], LineBox[CompressedData["
1:eJwV0H080wkAx/F18ToiNSKtqzuvFkmWF0Id+27yylS6PF6SZK66pPKQOstF
F/MceVglzuLk8fLspHmRpx2LbITNfruklfXgdhfCq3LdH5/X+/+PCfuc5/Ev
SCSS2+f+tyLuD8pE8HvY5ZqXjvF/h/3BvFGRaA5rMngG1fY18PRl7w9Wz0K5
zpUfK6hFQMlRFkUxA0bOex21Rz1yhM0sReE7xLpzoizmGtDiIfhWxvwXgfE7
V4eUNkEzQ3d52KAaKT0x8VPBzbgf/YKUfG8a6S67bT+at+Ajm+NNefga6fri
Vur8A0RlGTK8VFN4GZB+48v+VtxLM1mvYfsCSgc5wSltg5OG6zLbikm0F+7+
Gp3tmE+weZ/sMYHGX7Yb5Tc8xCGWsVOtnwL7KUstP5V2YJjCKD4RLcPaCzv9
k253omPRxnZ+aQRlz3qXUjK7UBhcu6djagg/Dm2P3MftxsImknOqpRhCq+Ir
BTE9sJzLqva91g+7pOHzRyKFKNDJ5VGO9EJLSGs/FfInyLOVnyiN3WBlKN9U
BvWCseakESelA0Z+woKVfn3oX/az+678Ntwim3THHBShQodZLVS24LI13qlc
H8HB8DffVGkTWOZn2lzRj0rrroj7QfWoeNbhnGI3ANVByfmekBpwXu0quWv5
GBqZ5Sp+TyX4LacPu+kPoibN7MHixVII5IRzUfogQh/viSgZKAathKwr1RJD
so9nbljPh3SFV9zUVTHY9y9VFZrkw1I7R0v0SQzusStqq6obeGux6gonWgKG
dH2W08tslB3wXa5+JwHrusTqVHMm3F2qH246O4RNtBJfU/00uAy6t+t+/uY4
b1/TlJqIVurGO/ygYZATUl1PCq5CLN7mPyQbRkipjdmHxDj8ZfZIxfN6Ai+a
83Np1SX0eBfMyERPUNgc0JVnehHhuvHH03aP4KZLLzvrcCQGbu5S57SMgHrV
qJZtEYYZHypXZjUKH4WcFEw6DXdaQz397ijOXo/1X0w8gfrFe5MFlDFsDQ+9
pt/HxgZeZ9xA+hgsRm5mxHkEYngiYL5waQzxxkXKPMPDaFIYJ0nPSdEzkzRC
avJBriTwuYNCijhrA82Pep44kh+ZF7ZXhuzbodNrNQ+AnuxobdogQ9JYZL96
mgVa4+zC35RxlB3ascO21gU63nWRnpfHoVjpn/nDFibOvN37XSsxDq8VC6nx
ZxzRHtKlSHSQQy+i/EIn1x5FMS9Ub9LlCBDp8EURNpipHBFqEnLUhaRw6/Ss
4NA8x+uiEuCaXTydzNkKXhU39G0wAWN2mNL60WZkZW1h6d0iwOxsnbmhMoGW
TkJGVAeBsqK5No+gDZh80tttqiCwzTtqx7S2McL1Jjb3qwgcXZKkZhcYYKJc
0lD5jIB2iV3GMdUqaNPuMlK6CZwjb9PPlGsjYMursl+vERDkfsUUEBo4FRhd
HL6TwDoD9+uUNhI8qBUfWtvlYEQlGhs2LtI/8HLJbhvlEDAmT975ZpZuv7Fv
vm7vOP6ZlPisTFPTF77v2+foJIPy2FP2U56K7ue32iD29RiY1PI72ecn6Y/J
zIS1bqP4D9Q9QHE=
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], AbsoluteDashing[7.5], LineBox[CompressedData["
1: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
DQ==
            "]]}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{True, True}, {True, True}},
        FrameLabel->{{
           FormBox[
            TagBox[
             StyleBox[
             "\"\\!\\(\\*SuperscriptBox[\\(\[Eta]\\), \
\\(r\\)]\\)/\\!\\(\\*SubsuperscriptBox[\\(\[Eta]\\), \\(c\\), \\(r\\)]\\)\"", 
              45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}, {
           FormBox[
            TagBox[
             StyleBox[
             "\"J/\\!\\(\\*SubsuperscriptBox[\\(J\\), \\(max\\), \\(Wh\\)]\\)\
\"", 45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}},
        FrameTicks->{{{{0, 
             FormBox["\"0.0\"", TraditionalForm]}, {1, 
             FormBox["\"1.00\"", TraditionalForm]}, {2, 
             FormBox["\"2.00\"", TraditionalForm]}}, None}, {{{-1, 
             FormBox["\"-1.00\"", TraditionalForm]}, {9.3, 
             FormBox["\"9.30\"", TraditionalForm]}}, None}},
        FrameTicksStyle->Directive["Label", 
          GrayLevel[0], Bold, 45],
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->{{155.0625, 0.5}, {127.62421875, 29.25}},
        ImageSize->750,
        LabelStyle->Directive[Bold, 
          GrayLevel[0], 35],
        Method->{
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
          "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox["\"(b)\"", StripOnInput -> False], TraditionalForm],
        PlotRange->{{0., 1.}, {0., 1.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}], {1200., -243.3508830702711}, 
       ImageScaled[{0.5, 0.5}], {750, 463.5254915624211},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
     InsetBox[
     TemplateBox[{
      "\"Chiral(VP)\"", "\"Helical(VP)\"", "\"Chiral(VTP)\"", 
       "\"Helical(VTP)\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
               
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", "Framed"}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 0.}], ImageScaled[{0.5, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->1500,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1]], 
              Line[CompressedData["
1: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
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1: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
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1: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
t8OydOtq/7NIECnl559c27E9QWrqCGskRI319Z6btKPUz69jW2IE4pN/pRqp
tcNwOPa29/EInGb4mnVOvB0xCokRPq/C0T5vX0T1XzuM2l2TqITCsbyflrr7
QDsKKKd/f60Ng1k8f3PG5naMylBLcSuHoUL3UCr91zZcqixzahgPxW/VA2kt
5W3oHRAuyHAMRWP4GnN0RBuC3C0UGhlDoX1ut77Z/XXd13H5tjf9CTjNIhjk
r7ThuX6J2GOxJ/hx0MmLsLYhearAgPVTCLL6QyC41IpwZhXfcucQxC87vSKt
rTjgObJH/3AIotQ9xBRSW7FX6GDepqpg/Kr5fd/KuRUerNpcEQbBCGuejU9S
acWqSrbndoZgdK0cFf/E3YpjdDRT9cZB+HVJuuH05lak0InX7Xv3GAfNmKMe
DbfAdbDy3T+Wx7h3IOLgQlELDNv2a9+1DMTcxicVZsEt2JW95kI6ApBzhGpy
1bAFdgb3tK3OBSA51Zs6WrQFI6+Z/Rai/BHS+85Ecn8LenWqJnKo/PFI48vj
zfPNGN49URxp6ofnujQplKZmGEX+5x015Iv9Q59MypObYdFYwfNc1heHU7q3
Fj5shumXzG0vqh9B8s8qVaVKMwqdtcQjLz7CuK/sreGzzeg93fhRt9AHF3cY
lTBtbYbZloM/f53zwWMuZxO1z01Y8Tbtlcn3xkGBwdbXpU3421EGBQFvGO88
dIEjvAkUGTHWX2VeaN6lQZtxvwn1f39k8kh44QSDp5/E1SbwM67cnW3zhGyK
88HlI034UJ6wm+umJ553MDK9W30P2qG2ktYpDxg/GC191vMejn7f4jqdPZBz
1dgsNPs9Ns77S3EyeyC9Z+VBgu97UCpuudWlu8O/PIOvVu89OKmqpeMuu+Oi
xZ0xKvIewnRfxpM/uIG5pm5IZe97eO1s6Wh1dMOGoCCDmrlG3GIWq2Dc74bk
TaxN0i2N+Hvob/StUld8ZxyQ+p7WCHWjHeU52q7Y2b706Ll7I068KZP+vdEV
38ounbW92YixD7c/3FRxwX6Hntnbgo2YH1n8/viFM4pGU1aNmBtxMiD9rcXf
h2A5dyzEf7oBw78USudUH0J1Y/lifWMDmqPPvfqb/wASUnX3Dqc04PHU7mr3
3Q/gbKfO98S1AZ6Mqj4mDk5QYjQLYtNqQFb1pa/pnxxxZ3au9L1AAzYfe3SS
85ojjv3bvhjM3IDF51Qr/cUOOP1sr4vVz3oMRvDdeMHpgNy2kUDLpnoIRV9y
835mj4Bb6tqP0+pxIq/vot4ue1zL6OGs96hHT8cJF+7HdrBh0jt5SKcetkt7
4vq32eFZ3h6LYOF69BXbmSn42aJs30DNkX31GKmKvBlAb4tTO+s82xfr8Frk
y377EBuwXKHSe9ZZB0FbNfbN+2ywOtXk/ii7Dn2cvNdOPbdGnMnFnU8C6hCv
x5jfe9YaJLUEJUZ1iD7a37BabgWG5bwLVJJ1cNfzvRgoZ4XCZXueuxx1+D6S
tNF51BKnztyRn6KqA+v+Eq1KR0usWTXXBQ/XgnWYuVaa2RIno8fLlN7W4kyM
3RrDKwsYev67Kfi0Ft/Lyqn/SVvgUPTNrosOtWD8mcay87s5LHdvl7ilWotT
xyLzL/qbw9xWYiDpfC1sOG6Gm3ObQ8/L+A3trlpEye3QuJZmhgD+BVr/uRqM
aVkqJizeR8AJ269nO2pQwLQ2+l7yPr40b3VezK5B0cyt64XPTCFT2f5j8HEN
xu8F8ckum8Cxukjpi2kNftcI5DsrmYCjUKKXTqYGQ1vcpPkK7kH+rG2w8uka
dLJTPmjuu4eISI/ECroajAwnvvnsaoy6n7nHZSar0apxJqBw0gjkqbLw6vtq
qLOX6deqG+FDdc6f9xnVmAtpyf3z3hBZ9zS9yvyq0bVWTmRhCJXyoqk242qU
RGryphbeBVOK9HWaa9WY9v5Ev/jfXdzgGi3VOlWN8WKeVK5XBvClYlHopavG
ggXraQFuA/z6U8lhOVWFLsskNrrcO5DX6r36X0sVTNoE1CL576Dx981OxldV
yFs+86u5XB/MHK7dzEFVkLxEZ/NMSh+/5nx0hcyrICzyK3ilVw/mhl/93OSr
QLNHVKPXQA9dgZK6U7xVOH3y/Un237dBbx4077CrCsdljsR3Bd6G0wleea6l
SgxKC6QOcNzGwLVrvn/6KhGVLm16qlwX8hfc0+bfVCJy01XDN+q6iG5KKKaP
rYSGoZas/bIOyukvN1x1rsS2nud7tSJ10MhyYiRNpxJ/w6s3qAvp4BERZeAS
q8R4sui/upJbULYvVm47VgnV4bNRn2hv4ZXxZFXklvU9ZNT89TcVbdwJd9by
mKwAUTmY3ZhxE2mrkpxPWiuw1t5z8z71TezyMztbk1sBhVm3TVU3tXCqyMJ6
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
yC3n1zo6vsiI9zlQsuUd4d9ZUMl30hdRnz6o6t8oJ6Yc9FGuM4+QcPbTc62Y
t6Tsks0VsTePoJ+i5eU7UUZK92Z+dHJ/hJk7B/Z2CpeR9zsaLTmvP0LyD4tt
rGGlJOGIx95rLI+w4jcRrfyzhGQpsI4Pf/IBy9u8IF3ZEvJRX3N+PNMHi2OV
5FTuG+LVEaJxy84H56NFnWP3vCHfClz5r4r54HfdsxfxbsVk5eem5IQdPriF
95GHfxYRoaV3lXeHvKE2IJu0WaeIHPLh/hKT7o3Yky5RYt2FZOaTTNQlO29M
782qfHetkChqt/y7JuGNbc4WFMO6AqLndNykltkbGjkbGE6LF5BvviIH0z97
4e6p0F9LNfkkPYdNYinXC2r9/clFV/PJxuW7e166eSHw+ENPrbbXpO6D3NH3
8l44Wlpo0a32mpTEPrWUPbqO9y7Z7hjLI7tnxC5cmPeEvn+F6KpVHlFY0zrs
V+MJ0fM9XL40eUS2pOk9ifCEDuOQc3p07rrCu6irGnrikviNmev/5ZKVHZ/n
Oy944tmlz8H6jTkk+vFMQw6DJxSL6VtG9HOI9cgZ+plPHuh3KDYspM4h8yXb
FoLyPbBUyPD7hUQ2catleBP0yAOzwk/GtfxeEXXGx+HTWv/jpxnud2WRd/sV
qjN5PHBSm9Ouii2L1Lkv2NXReuCc1PmDopYvSdeXTxxkyB0Zp4e/tNdnkiwn
kVamPHfEWJ+pUz+SSRx58ppFHrnjLlX/iRrnDHJb/6Pee213JF3l+f1rOJ2I
NX7vzzrvjjMMP/NGxNNJ9Uc+y+/07sg/QatomPWCBO6MtXMZdYPM9lh1u30v
iOaB67wmZW6467W57vejNNJX1DaVHeaG0wWfmQdXU8n3LOp5KVM3sJTyCm62
TCUfT7E+EbrihgmNp3HGkynETztjr/NhN0gsPT8+dzeFPL/m3svy2xWTD7cf
8f+aTIx92g5u7HLF7nxhGXbjZNJovZ9cznKFQVZS74ufz8nQyFxgl48r/i1c
V9hm/5woH2pcyb/tCniYl/FvfE5eMbm8mLjkinE3ettDIUkkReRCh+k+VzR/
CL/86kgSCW4gCe7fXcD232sJSn4iEeVglapPcoGBV+LRIOlEstVAP/WFpgv8
+/I0Kz4nEPGpS50cu12waNhoqf0wgTQdZ2K62OaMT2wW3zX2JxAXih7dd19n
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
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1:eJxdl3k4Ve/XxmmSiJIKlVJkiopQyr5JiMj4zZTMaaJBpiJjoslUplTIlCSE
lJQoIZJ5yjyec/YxT0W8+/fve/451+c6ez/neda6173WI2Rz2cB+GQsLC205
C8v/vv//Z0F/87abj7Mgn/Axsbg2EM/nN0VOmxaDK/jVe/mESOQdLlbzli5H
0gNJ5bmGeMRplQ7tr6jBK9Pswr8qKfgme8Tx2uN6CMtGcPFGv4J9zVCJgkQz
PrvWubdezIJm+LsUoxdtKGWcrk9geQvVu2+KD7B2wtZgaHX03TzsDU+qF0rs
hjn9atcoewE2yetcdJXvhcffZf/ab31A1SXlpuqiPiyOHYgPpX3E74/Bry0O
DmCnpQfktT7jUI3UVfOUQdSO50r4/SpGU0zHnQW2YdS0/jPZMPsFnsb+Cq4W
NBxuyTs7wFeKDU9TE/+l0LH3MXcsl/xXSEa3fv3ez8DVprqSpJPf8Ls03Yl9
MxPXypuUimzKYPj6r8qs0ghMJbj+XLr2HYaf9mV+Mx1F9sxTl3Kvctw8oeBq
JDcG57XiP/oCKjBkT3pdKBjDj4zI9Lo7lfgdUPWTkB+H6w1Hq7TAHzCIbRZj
ZI5jt/2vZjffKnS2m4kH75yAEWdNnKF7Nbo5VTRlwiYwzz/XqXPxJ2JUifal
vxPgl2S75m5Wg72bONdwWE2ihPxxfmLnLzTcLG68VDyJNse7vHWRv3DptfUm
YusUuOKDX/StrkXJ9r5rUc5TWPptfWqvRy1qgh7ZhpVNQYHl0rGioVrc19eW
ObZxGrQDQlaPjepAJO2e+W45DbrJpPPnz3XIqnkUdiBlGjeCTwqritejY7vr
24ThaTSzCE+KhtWj8vmHut2iM/ASVlByma3HjaRP0u3WM0i79uOIzOkGbPGS
qm6MnkFHay/72c8NiDCdc5eqmkFvtMCTzUKNsGwsKJ6bn4FHpEiZjm8jwoey
p3XEZrGg/FWZu7sRqyJvSajqzyL+kGSCjVITmNX8MiOus2Dj2mZ5MqYJ2vMP
n9rFzGLZ3ra6lskm3C8pLCosmEWkg+XB1TrN0Kg6+nx14yxOZnzM6U1qBnPu
zxqrkVkoCfcTTvPNGPmsdLtpxRwiy/W/Zem1oOZYirYP3xwy6nrXZyW1IIR2
3PSq+BzMNNwars62QOr0kHmRwhzCGpRezB9vxcf1kp/cVOcg8api3iCmFd/X
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
D/M=
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{155.0625, 43.78125}, {127.62421875, 29.25}}, 
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
              HoldForm[
               Style[
               "\[Eta]/\!\(\*SubscriptBox[\(\[Eta]\), \(c\)]\)", 45, Bold, 
                GrayLevel[0]]], None}, {
              HoldForm[
               Style[
               "P/\!\(\*SubsuperscriptBox[\(P\), \(max\), \(Wh\)]\)", 45, 
                Bold, 
                GrayLevel[0]]], None}}, 
           FrameTicks -> {{{{0, "0.0"}, {0.5, "0.50"}, {1, "1.00"}}, 
              None}, {{{1., "1.00"}, {0, "0.0"}, {2, "2.00"}}, None}}, 
           FrameTicksStyle -> Directive["Label", 
             GrayLevel[0], Bold, 45], GridLines -> {None, None}, 
           GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 750, LabelStyle -> 
           Directive[Bold, 
             GrayLevel[0], 35], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> Style["(a)"], 
           PlotRange -> {{0., 2.}, {0., 1.}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], {400., -243.3508830702711}, 
         ImageScaled[{0.5, 0.5}], {750, 463.5254915624211}, 
         BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1]], 
              Line[CompressedData["
1:eJwVxXk4lAkAB+BhS0uI2GrCjlZT5O6mmp8wyUYPclR2RTWieqZDjijlKCVy
pbYQaiy5bUa5MstoFCPHMHLN8WVq2NBFKtrdP97nXXHwhBtDkUQiOf3n/33f
WlkfVplE/IWMUVd2KVDMDWp/NAGDAO42ZUYFku0UlIdqxnG62iXjaN5DGN7V
NEm3e4sA24VpmyfZsFmj+sAyeAyvidpjVPvH2OGps0jClENkVhm+P6cG13UM
uBa7XuNiXITvxx/qsaXo24Jhygiqki916TEbEOWQnT8wK0UXj56gMMGBvW+m
y+N3YrjfcuacMGoEO9bwq9OPw7D1f0H6zmgCs8iLZxXcj2qOi4UPi4vS2JjJ
SXMhfNi8efRXzVAyW33a2FqAPP80xWAqDylrDlFKUjthpiUXVh1pgf1UEHPP
8XY80SlmDBQ+A7nH//s0niOmrfxCzfhzzFBONQamP8UvtnceWK5rw6sYtvYi
vyZURgWnGoTx0VCcmW5+i4Npg5DNofXtOPui+Ubj3jqwZliZ1xQ64CDPXJRr
/BhJAvuYMFYHonhlBcLUSozO+O8Od+jEiZfBjE8RFRgkV0iujnYi+hk76mZx
CZSvXG/NSezCRs/66XbqAwQGfNSvtuhG7ly5kZJjHrZbjdnyu7sx3hiUz5/L
hWl7WZUwRAAv9V5bM8Zd1JY9mu4i90DYrv1OwroNfcLDvbquB6vz90ljs9JR
L5toiT3QC+UCyU/a61OhEjvYZKYohO+p1POR965D7RChVM4SwvTQtp6xv6+i
sZWSRXLoQ5Iuw2Pu/iXM9aofWSrvw1xVqc1G42jYaZhMyONfIpxPj6g7F4lf
R7J4x0364RPW5D2adBZHQ94Pp/D7MXXuJsnrWDBW7RJXOzIHwP8a9UI0cQo+
v4Wui1YfBPcyZb6JEhNm7v27VpUOwnXw4Hd9vUB07FF8qOc8BO4nK+fCucM4
o+q7wWlsCFmesr9K4v2wP7R8WcqVYZx0oz9f4vQ7srVyfJ+uFOF8ADukLmgv
BJqhkw0NIiD7yFQpwx1ulh078kzEWG7ZQmUouGJMY6F3epgYrs2CgU+eTvCI
92clNokRd/mNSettB6zUkn1hqEkQRrFBIssOtTvfVU14SHCDU5BS4WkDBWe/
+x8zJZhdRxniG23BJrYud4NUAmLBbG9s8kYs5bDlgVQppr74j5Br1+Kl7jaV
rf5SWLWn/VOx2Byt8+DhyJLC+FqyWhrHCNl3ND7/LJKi9EDu5zI3KrxqWy9t
WkJgt75X6vb7KxBIKnw/vZOAitAmx5eqhxQ7e63iEAJzNbIVhmrL4Cg7eDX6
LoEIztrD1Z1a+GPo+GhcAwGBMlNsvVsDnhvkXbl9BM6cDB/p5KlAYPhlb9wb
AiWa890t3s8HnezRXPOWwHLZvsVPJhWQGMzwvigjYBGpsy8Bs7RB1YFjgg4C
T023Xl7YNE2bMVApOFBIoEVRIPKz/kCjFd9LCjxJIJX+oTv68zitj2pW1EIh
oL+K/i2h7Q3NiTy9vqNSCpK3nS7rEUEbkqu2WBtLobFDPcJFW0RrzFryp2ak
BPofeJKvm/tooQVrcpPyxZCm6xgxM7poGTEyN5KtCAlkI6lQuY1mWuSZZd48
iH8BKnxayA==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1: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
Zfvv4Q==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1:eJwV0H080wkAx/F18ToiNSKtqzuvFkmWF0Id+27yylS6PF6SZK66pPKQOstF
F/MceVglzuLk8fLspHmRpx2LbITNfruklfXgdhfCq3LdH5/X+/+PCfuc5/Ev
SCSS2+f+tyLuD8pE8HvY5ZqXjvF/h/3BvFGRaA5rMngG1fY18PRl7w9Wz0K5
zpUfK6hFQMlRFkUxA0bOex21Rz1yhM0sReE7xLpzoizmGtDiIfhWxvwXgfE7
V4eUNkEzQ3d52KAaKT0x8VPBzbgf/YKUfG8a6S67bT+at+Ajm+NNefga6fri
Vur8A0RlGTK8VFN4GZB+48v+VtxLM1mvYfsCSgc5wSltg5OG6zLbikm0F+7+
Gp3tmE+weZ/sMYHGX7Yb5Tc8xCGWsVOtnwL7KUstP5V2YJjCKD4RLcPaCzv9
k253omPRxnZ+aQRlz3qXUjK7UBhcu6djagg/Dm2P3MftxsImknOqpRhCq+Ir
BTE9sJzLqva91g+7pOHzRyKFKNDJ5VGO9EJLSGs/FfInyLOVnyiN3WBlKN9U
BvWCseakESelA0Z+woKVfn3oX/az+678Ntwim3THHBShQodZLVS24LI13qlc
H8HB8DffVGkTWOZn2lzRj0rrroj7QfWoeNbhnGI3ANVByfmekBpwXu0quWv5
GBqZ5Sp+TyX4LacPu+kPoibN7MHixVII5IRzUfogQh/viSgZKAathKwr1RJD
so9nbljPh3SFV9zUVTHY9y9VFZrkw1I7R0v0SQzusStqq6obeGux6gonWgKG
dH2W08tslB3wXa5+JwHrusTqVHMm3F2qH246O4RNtBJfU/00uAy6t+t+/uY4
b1/TlJqIVurGO/ygYZATUl1PCq5CLN7mPyQbRkipjdmHxDj8ZfZIxfN6Ai+a
83Np1SX0eBfMyERPUNgc0JVnehHhuvHH03aP4KZLLzvrcCQGbu5S57SMgHrV
qJZtEYYZHypXZjUKH4WcFEw6DXdaQz397ijOXo/1X0w8gfrFe5MFlDFsDQ+9
pt/HxgZeZ9xA+hgsRm5mxHkEYngiYL5waQzxxkXKPMPDaFIYJ0nPSdEzkzRC
avJBriTwuYNCijhrA82Pep44kh+ZF7ZXhuzbodNrNQ+AnuxobdogQ9JYZL96
mgVa4+zC35RxlB3ascO21gU63nWRnpfHoVjpn/nDFibOvN37XSsxDq8VC6nx
ZxzRHtKlSHSQQy+i/EIn1x5FMS9Ub9LlCBDp8EURNpipHBFqEnLUhaRw6/Ss
4NA8x+uiEuCaXTydzNkKXhU39G0wAWN2mNL60WZkZW1h6d0iwOxsnbmhMoGW
TkJGVAeBsqK5No+gDZh80tttqiCwzTtqx7S2McL1Jjb3qwgcXZKkZhcYYKJc
0lD5jIB2iV3GMdUqaNPuMlK6CZwjb9PPlGsjYMursl+vERDkfsUUEBo4FRhd
HL6TwDoD9+uUNhI8qBUfWtvlYEQlGhs2LtI/8HLJbhvlEDAmT975ZpZuv7Fv
vm7vOP6ZlPisTFPTF77v2+foJIPy2FP2U56K7ue32iD29RiY1PI72ecn6Y/J
zIS1bqP4D9Q9QHE=
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0], 
               AbsoluteDashing[7.5]], 
              Line[CompressedData["
1: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
DQ==
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{155.0625, 0.5}, {127.62421875, 29.25}}, 
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
              HoldForm[
               Style[
               "\!\(\*SuperscriptBox[\(\[Eta]\), \
\(r\)]\)/\!\(\*SubsuperscriptBox[\(\[Eta]\), \(c\), \(r\)]\)", 45, Bold, 
                GrayLevel[0]]], None}, {
              HoldForm[
               Style[
               "J/\!\(\*SubsuperscriptBox[\(J\), \(max\), \(Wh\)]\)", 45, 
                Bold, 
                GrayLevel[0]]], None}}, 
           FrameTicks -> {{{{0, "0.0"}, {1, "1.00"}, {2, "2.00"}}, 
              None}, {{{-1, "-1.00"}, {9.3, "9.30"}}, None}}, FrameTicksStyle -> 
           Directive["Label", 
             GrayLevel[0], Bold, 45], GridLines -> {None, None}, 
           GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 750, LabelStyle -> 
           Directive[Bold, 
             GrayLevel[0], 35], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> Style["(b)"], 
           PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], {1200., -243.3508830702711}, 
         ImageScaled[{0.5, 0.5}], {750, 463.5254915624211}, 
         BaseStyle -> {
          Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}}, 
     ImageSize -> 1500, {PlotRangePadding -> {6, 5}}, ImageSize -> 1500], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[5]], 
        Directive[
         RGBColor[1, 0, 0], 
         AbsoluteThickness[5]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[5], 
         Dashing[{Small, Small}]], 
        Directive[
         RGBColor[1, 0, 0], 
         AbsoluteThickness[5], 
         Dashing[{Small, Small}]]}, {
       "Chiral(VP)", "Helical(VP)", "Chiral(VTP)", "Helical(VTP)"}, 
       LegendFunction -> Framed, LegendLayout -> "Row"]], {0.5, 0.}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.91359110905657*^9, 3.913591123630224*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"6ede9591-db7f-4903-8d61-33eba416e986"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A5", "=", 
  RowBox[{"Legended", "[", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"A1", ",", "A2"}], "}"}], "}"}], ",", 
      RowBox[{"ImageSize", "->", "1500"}]}], "]"}], ",", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Red", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Blue", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", "Dashed"}], 
           "]"}], ",", 
          RowBox[{"Directive", "[", 
           RowBox[{"Red", ",", 
            RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", "Dashed"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Chiral(VP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Helical(VP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Chiral(VTP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Helical(VTP)\>\"", ",", "Bold", ",", "Black", ",", "35"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"LegendFunction", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Framed", "[", 
            RowBox[{"Style", "[", 
             RowBox[{"#", ",", "20"}], "]"}], "]"}], "&"}], ")"}]}], ",", 
        RowBox[{"LegendLayout", "->", "\"\<Row\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "0.0"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.91359157234059*^9, 3.9135916077596903`*^9}, {
  3.9135916492727747`*^9, 3.913591662964775*^9}, {3.9135917094876347`*^9, 
  3.913591711559017*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"7acf76d5-da3c-4438-a2f3-2dea6771d914"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {InsetBox[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], LineBox[CompressedData["
1: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
            "]]}, 
          {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], AbsoluteDashing[15], 
           LineBox[CompressedData["
1:eJxdl3c8Vv/7x0XZe4aySUYfI6PoXMksITKzhSJKpFAR2aMSGSV7yy4yki0i
ssne932fY5Rkpd/5/vvzj8fzce5zznWu63W9rust6HDHyImcjIyMQEFG9r//
//9P3eOOsBNPLmi7d9337g0FjJuWfejLBzgzZuFelpIA1OpVwYw8jfBwb6/j
d2865JlRFQqJt0H7qMX6mTO54FQbM6LJ1AUPdFPpCiOLYD86yJmr7xuEuakc
dnAoA7aOI/Dmw3dQQLv/km9WwPW0s1Pp6wNwvceb6Y7fB7j5ViTmFvcwDJ4m
qfz6XQ2nCf2/L8qMwqsQ24pq51poifbyjFQYhyPWm+92u+vhv1F+5ocnJ0A1
p1Pol/hn6BnKeuZCPwVFr1itb31qhF9xs9ZZU9MQ9ll20W22CYw007rP9s1A
uvDx+kSyFpj/ahLIWTALx7lTxg7ztoIc5fZfWr850C6YSu+WaYNcFTYtRH0e
Xv3qJlJeaIeG8S3m4cML8OLt3GqXfge0/d39+6dhASyajj78z+wLRNytvdZ5
dxGSv620XLLshAxeJ5U7x5fgAiEwUM6yC6qeBXsyNi+B6BcM2zP9Cre1w559
tV2GTtmSL3X63bCNWo10bS1Do5DwtdALPeCeH6QrE7YCtAUa9+/IfYMr1Oyp
/CwE6Cn7HBDJ1wtTFDmn6+MJwJRAqehN0QciYueET7ISYSQvZbbPuw8Y5Mel
IyKIcJEoYWS/1Afvg3eaD3aJcOJ+mst/Jt+BqfbmfpEzCXgjd3rVm79DNMvj
VxXdJOAbZiLLk+6HG6WPd+SlUXhknahjn9gPq7rmsobhKJDpzLX5/esHaNcj
SkyhMP79jfue0wAQrWo9Z09hsKGac4jUNQBZ5hkf4/0wuLDrwWd4ahCavDl1
HJswMFNQUlR4MQjSYKx3h2IVpqwWXqauD8LVh6PBg+dXIVrX0yjeYAjG/2qa
VviugmmZg9fx4iFQZSdWi5WsQsJ2Sed5mmGY+HdRxWBqFULPFRw54jgMWaxh
NBdp12DD/Xmlx6dhOKb4c15Gbg12XySdi+QYgXvmAfzCpmtQ7xVMMHMbATXq
F/kq99dAj6FicrppBLhD2f+9erkGOV1KfOKco8AzJn9Wr2gNrjSVv1B0GYW4
oVqyR41rYHBaYpe5bhQy+MXjVPvXgK9llvwT3Ri8r5NqyJ9Zg0RWI7nzlmNQ
Exi5MkZag/lK1q20gjH4ML9PRfi1BmYmmWmzW2OwxrSWu7q9BgOqfpa06uNA
+8twmXxvDbw9yS/zPxsHSxnwPre7Br9dJV1FR8fhYJwi4cPWGggppb8WFPwB
rw8LCgWtr0GkDVv+UZcfYPv9fljN8hrYDwhrMpX9gLmw8qa7E2ugHupPTbv1
A+oeXrzV+G0NDktlPGBQmYC7heE1tQ1rwKSTQ8YXMAHvr6tpe79bgx6bgEVo
ngD1PoEXh5PWwOHYPe8HhyfhX5nv/UeBa2Dxdab/i+YkeK3U+K/fXAMvFTUm
5dBJcJaqb/fSXwOOeFXxzrZJaFNTO8KN5//t+WHKJ4engO7V78ifbHi8izxP
7C5Mwf34UA3WzVWYeEJvejtgCoDt6oeI/lVw4MtQKK6bgsa7FpSupavw9nNu
vcCfKShNr/7ZErkKmf9a73bLTkNF9O+pPMdVWHve9K3y1jTEML75InpuFT4K
pymPZ08DF0OBgR77Knzf1z6sPjkNIu8XP0gTMRgKm6n1oZ2BpmCu6aEGDP6I
nrDbFJ0BoTtZV41fYtBqWEbBqTYDeQ5vtKsdMbD0Oyk7bTkD4XO3fekVMXDx
X3Q0vD8DdJ5zPvaUGLCu9Iy4v5gBR+EbDi1DKLh3GnxXLJwB9bfxFJCNgkXR
2eV3LTMQsntocOYuCnYHfm3fJ2ZAe75m+z2Cwve4C125v2cgMtFfvYMWha6W
w5elGWfB9GBTQXiYBJ009W+cxWbBRb2QbDCdBKzrohTGyCwoxVCGLriSwNo7
q23LZBZ0Ck9a2p4mAcb7QOCK+yw4fhLt1P9LBCuzL5fsg2dhKlLhW30bEU5+
vu0t+WYW5C/L8lfGEOHWZ73u0nL8efQ/xFVMiGBQ9OLeWscsHlcOs80xIowq
dsWQJmfBUIu3WmSeAMWkNrmcX7MQH0f1MbGAAIahEj7Haeag45mJ2+c7BLgM
H91N+ObgmxRCylIgQNuNg+P68nNw8bY/nd4e7mfhas+odeaAnifZsblxBeTO
/WoIsZoDxXrHK3ShK2DL8q+o3WMO3jd9I53SXQHHmI+63cFzcJg+6uhp5hVo
2y97kZg0B4Wsf/wFh5ZhM+7qzZPv5qA/lBj5N3kZch5x1AV9xn+vSfT+ZrMM
Y1RBt7P75+BxzUN4LbwM96/kOzxfnAN+aoX3zitL4Oqjdk9jew5YsjiczxQv
wVZHl28r7TxE3T/UwOW5BNFfcnSYj88Dba4/Sqm0BLfpa8vE/5sHVkqmX3T7
i6CxsfqYUW0eLuTUZEk2LUI0VPk0G82DuSZrpmvoIviPVDlpOs4DKcj0eo/u
Irw8c+lIkvc8WN+plTdnWYS58NOcdaHz8LBZU5ZpZAEM4/IMSxPn4UTc0pWt
FHzeXDp22zt/HiIbwmxYri+A9XgVH2PNPHR0cx1cP7kAKXM+bH6d83DZLOrd
xto8mPxa264Zmwe7rO7GT1XzsOta4PONMA8Gjpjb18fz4P64TvnjzjwQvdsa
jmvOw2RA+8QDmgXwqtDMqKafh+ospiOM3AtA4BGbfDM4B5KhTAYPxRfAxrSH
uydlDk6vmpg0Ki2A1EXvKT2nORjyehA/qbUAC99GXwqcmoNTB+d/DZgswBL/
8Sfaf2bB97NpRZbjAng7lX1vbZwFn/EPj/S8FvB8CCS8jpyFTIqI6e+BC7Aa
u/a5y3gWfp30dpJ9sQCiauZiZvyz8Nf+WYJb6gKMSiqGqhFnYMdqaPvpuwX4
1+wbFPVhBveDa0w+tQuwde5ujmLgDMTc1bC8+AW/33XHTkNvBvpRdcvtoQUQ
iLBhquKegSPz9VEh8wtw77UeibtnGm4/NXLZWF+AgIz5J/E3pmEqedxZ9WAB
+vTPMU+RT4NusP6BM90iEDL0M7ZTp+CrgXXW3aOLEOD1lm1JZQrs35d1WIku
wtvkx8fzxybhAxI/Li63CEmtgcbnfSbhrrjHpWFkESbteMTKuCbhC3ot2AnX
AfUY2fR29QQkVRZtDJstAl/IYjavxQSwyG3tSDguQq4EWTD33g/YNvc64uCx
CPpf+6//evsDuASqfB49WgT5OJShUO0HsPpFv/YLX4TalXY1ZGkcqhtahazj
F+GV0aJtWdQ4qOfYsoukL0J9N9mhQ3LjoDaYtdFbtAhtPHf8ZMbGQPIoL6d9
9SKos3vQQuAYmN5jmRhpXgTdZ6sjUhJj8FsLSzn9Df++QeefOwOj8EDTqezB
2CI8iYw2yvUfhVk7NveMhUUgn731Q1ZiFChm6cQr1hbhT0usRcrwCFCNBZwu
3F0E2Yz/whafjgDTW9rFiCNLsFvwmIZBbgR+/bWKNGRegodH1LxYZ4fBhbnH
6xDvEji3amn+fjEMq5pU68miS+B/5cPqe7VhqJlx1OWVWYIf0SHfrvwagsC0
+u8hZ/G+rI+X/5IzBH6rHj1jGkswXBVuzWMxBCMDJWFcBkuwOK39WIthCEZZ
uHXAYglk8lmqdJsHQdDd3dTw+hLst2YeP+kzCIhH7B899yWQ8jnxaRLfWwa5
d+4oPFiCIlPR2JtLA+BLd5mCOnAJaPquRX1JHYAeSkdCW+QSZO+vx+6bDYBR
qOHTO/FL4BtuGELBOgDLHL9+Hk5dAjffzJMT3f1Qdc3ucWjeElgH/jEOCe+H
jvuFTptl+P0iEs1/NfqBls5sWb8Wf9/vNGEN8n7IsN5RSWhZAptZIxmzxu/w
RlEuu6sbjzexN0oh4Du8Fqk2RYeWQOuP6PAk8h2UCo8835tagpSnxfn6//pA
9N/R4O3lJRgosU0IbewDvu1jt+fXlyArUE0qOKgP1GWmn9bvLEHnVOuGpmYf
cGsY7z0lXwZPJ36XLuo+KBh/S3OWbhlOyLvwC7zuhRdX9uem2JbhaPfHegmR
XhAsoqvzPLYMr/1j48pLv8Gs76OW3yLLwHf8cUi56jd4Zr4rc1N6GRQseN1P
fO2BS6aobJfCMhi66fMxW/bAqtDXP7zIMiRMnb9xE+0G80DlCmutZWj+m8ss
HdANMtekXzzXX4a+cbupa2zdsBWHfS43XYbALrIXq/lfga2A7k4r7vNnRa7O
LsBXMAt27+pwXgZvUmXk2dEumF3WOqi7vQy3DvWpoXe7gMdVWjHj/jLMyZTW
bNF3ASMjxdsH/svQb+ueZVrQCVpvaK0hdBkc+Y6XUGt3AlNgZ9p2zDJwmNdE
0Sx9gaC8rpdZr5aBoWp/0ST0C6z49hqdf7sMXklut4gnvsD30bOsvdnLMBAW
2tnS1QFn+Dx/G7xbhhjquOKp2x1AqTci1FK5DCOvwtqV2TuAq0HmyMm6ZQgV
zW3+WtsO3r8jNp80L8M8ebVVokM7CPQxL33tXAaZBP2TiXTtEO/3vZzm+zIQ
uqx2Oj60wcD570/Pji5D0gPEV8y+DYaKpx/ZTC9DrcYPu1KGNoDSpc/eS8tQ
0VPiYlvXCkUfN28/wZaBcyXWVN61Fab204v9N/HrGdxK4jytUPiQ5oPH3jKc
WS8bOvO1Bbj4AyxNyVdgVMZ60+lxC7jYpNHL0KzAjyPmdAUyLUB7uq73L9MK
vEqwW/m30Aw6zXytnzlXYCMswfbG62ZI9nWkuX98BXSUaHQmrjSD6HvVBgGR
FWg1v/LYkroZylrPHmqUWIExK9Pp2cYmEFbnXr8quwKCVHtGbn5NsMqQmD+h
tALq6x1Nf043AerSrn0NWQEzLh2ewPVGkN3wJXZrrIB01U+DI8WN8N9ZxuLT
+N5wO8vHMtC1EcaPBxfFGq5A9P5dlZ/ijSA1V31owWwFsu04Zwv6PoPP49VO
SZsVuBDszqRniDNvvICL4wrQzE9xfBlogFCfV3wprivwd2lShMO8Aeoiy6db
PVbAgoL95qmpT8D3U/fR/P0VcL0oIczo/Al+xzUxbj9aATtZlfSStXq41sxf
Rv50BerFBk/TPqwH+25qX4qIFVjnEdXgpa4HFTuBoN1nK6BwykF1IqEO3mBP
55fjVyDf8FaS9ok6qDRi/PD19Qq4y52YNqupBQ45F8bc9BU4d6Eqi0qvFuad
Sygf5OL16HT2M5yrgQvtSWXIuxUoY9ISlvGtgQdGIPG3HN+rpgL0U1lqYK60
ObSiegW0hX83JhR9hJIrQhM2n1bgDuneZXbtj7B4RPw8ecsKGN706WVZqIZJ
NfMvKV9WwKrBVTEyqBoUMCTy1LcV+FbC4u0jVA17/6aTqwdW4DWyHTfSUgVS
Jgv0ymMrkHF+IzPTuQoq+m/+KZ1aAXMVwudB2iow9khx519YgcNi6RwuZR+A
/pnX01ACHr+Wy8Q1sw/wI0LpyuLqCozXrZvm/HsP54WwCZXNFYiilBtWL3gP
HVoErcidFZA4IVoja/weIj//l9p3sAKH/gtzdiV7D4s3EzYZDxOA3+K0OaG4
Erwmn1hr0hBAxN6PudCqEq4cnyJ6MRLgZf8dgXz6StCfP1X6mo0AdEsOAtOf
KiCHjL+u5igB4hovf7rkUQFUbf6C348TwEA7vXBJuAKyohV/zQgRwJqPq6Bk
tBy2LJXUCCcIIPbxfUTqs3IQKX1wnChFgEuXD4lUaJbDoZk/ifOyBHAfo7Vd
/FsGucERTUOKBJDuspY6XV0GTDM6hY0qBNDZfBL1+m4ZsArVOWSfJ4DvmeJQ
duky0N7u2n2iSQDuoNKbqgOlwKarG2R6iQAPnmS539AvhQ7daWpRAwIor5/x
yfxaAo0FP9+iVwnwvc/n7+KlEnh2idqw2JwAKy8lQyS6i2H2YYnMDWsCzNRr
vL9pUAz/so0u8zgQIORhwYXkwXcgvxhU0e5MgETsKtkHy3cQSzdx1+0WAQ4/
jx14v1AEg2JNSXQeBHhUaVwTe6cIJKu9FLLvEaCl6Gurxn4hvCqnNlX0JcDC
GU3+jshCIBN1o25+TIDJv7Y0rLyFcJmUe007iABOFrSDfMUFUI+mWrSHEvA5
doAtnS+AqIIlFogiAJfy5ND14XzALP/Flz8nwDX2DYHn7vmgv9lFOh5PAL2t
MF8Hynwo2ikRCU4iwO+LC6kj6XlwzDX68kIKAQrYRh1XVPPghwivB5JBgN6n
hMZn47kgcHcm9WUOAYKOUYS3+uaCy+TNiRn8HPNb8cvPpzw4H1s9d7KEANfb
XhztqM+B5m9vu29V4OcciUHZcLscaCEGxedXEYA3vjSy6UgO3LkcnTFdS4Bv
meZB7u+yYajM5x/zZ/z6U8+oUONsmHKlrFVtIYDgS2dJqoMsODYeNOHQQQDJ
ivpdQn4WWC8neD79SgBFVYXskyZZ+P7tEZbaS4B5Rb7FRvIssG9QFns/QADb
MzwxheWZYBJIca11hAD2Nq8fz9pnwvXKKuneHwSgvklfaMeWiZ+nxd4NThPg
YUgUl3B7BjwxoZkZxM9tQWJRE8J+GXB/a2Ogd5kA3UVMXDb/ZQCVWkd0G4kA
b38vM/cspkN/dwhf1RreDz8v0ru9TYf7/qLPM37h+ZPKv65omg5y5V9Wwv4Q
4Mr5I0EnmNPBittPwWWPAPojra3eCWkwcJIxQPMfAS6s6QqOMqaBfqxf7zEK
In7+f2/gHpEKPXHmMmuURGhLfpgrRZkKc3cuFtXTEoFicPQNQ8hboI0kXgxh
JEKRgFULFeVbyMGCOC6yEiHLKayPNSIF0P5HXNScRKjk0Y4XY0wBSXEGi2Zu
IgjLOf89++oNnO4wnsc7EBjcjx3V4XsDfSesP4sLEmFHtYtBq+A1vO8V2RoU
IUKGg7mItOJrKBXyfPFInAhl6joNv1uT4YcXcyK/FBH6id0WSSbJwOhgx9rw
HxH8T52LZVhJgtXgHTpzeSKIeNHx6D9Kgo9e16MwRSKQUZ1pM2JNAuOJwGT/
s0T4vi8SwF6YCBIVMwgdQoTsof8Mo9UTgexHeHCcGhE4lROdKqcSQMlq5x6X
JhE0LW9mBT1MgAWZSOpEHSKkffzR9os7AXinKyxYLxOh1UuQhaz2FTxV4bkV
YUCEZz9KaTIsX4GDwKz6vhERwrmvXuo7iIeBbSmSqyke/yHqyLCseKBpuO0y
ZEGEgmib+MaL8SDgQNauYk2EySIFfe+NOKA4l0udakeECxSWZWmv4+DFG1Pl
/et4ffJSv53RjAOX/gUr0xtEcJXk8oWNl3BfXWLlnSsR5vxyQ3NTX8ICktF+
4E6EzIKFFje9l/CBY2zi8l0imNoVCkf/jYVLF3+yJ97D6xEqsHdQEgtiNNdv
TT4gQrp0fN9n+1hg9TWc539IBBlasoudHLHgENkdZONPhG1bK0HOry+gznrL
IDmQCEx941IZgS8AubNs2BdMhBMUSvpOZ14Av5vBM4pwPP++/ZR1C89hp8S4
9jbOLPxN5TQWz6HncfeAzTMifPx6c/pd7zOQSK4hhMYSod2D4c9rnWeQNMJg
UhRPBETlc0hXSwxQjyge604kArXk+jk5tRj4dZCnSXhNBH2X4N9fGqPham72
CHkqfv+Xz7khF6LBr+TB6NEMIkh82b9t2x4FLhLG+pLZuD5sV2L0LkdB561L
cDaPCKcLM29pD0bCnLRDhWYhEdbPvHqsYRMJCZvHi/SKiaCtbuCjSoyArJAd
WaMyIqTopR8/4RMB5HmnLl+tJIJkx2fjfaoICBjV/neligjNj7VF3yeHwwOD
SEPdGiJ4sYy+15IOh2abOzoX6okwO6506V1zGOQcdSYofCZC4/30i5MWYdAU
FqIi1kwEoaYUhf6fofCPYeYCWxsRUkkBJU9jQoEp4dmRvx1EyDtbeZ14MhQS
Hf4Lmu8igvQl/kv/OkKA/bZTV3sP3s/s+pfqboRAtEziZG4fEepMrz/kogmB
zYn5pqcDROB7I0XH8C4YZBOsHlkP499feVjj1ZVgkKvQYj09RoSkv5JRBVtP
4QTnj3CqCfz9HHx26qlPgUVMaXFkiggzo5etrbSfgrvjG6mcWSIkLmwrrG4E
gYEateOdBSKUPFCt/vk2CLCWmBeKy0QQl+fpuK4bBBLFktW7BLy/++QdVXYD
gY91eKIOJULuvF2OV2EgvLznSem3hutVx7uG0ioQPlxpUVb4SYQWgufSKmMg
uEePPMA2idBgRh0t1vIE7Fg9ejP/ECH2j8ixfJ8nYEvzRMFklwhSFb5Ct/97
AoaLUnWH/xIhxmv1ydK3AODc9LAv/0cE+V21a45qAbAoTJKyJCfB+YIlF90q
f6CKOi1EfoQEd+P2vWKl/aG4pF8zl4oE8x9fOkrlPQZ5MfkUbVoS0LXnXGUV
fgzZb3ZPLtGTgCckOeBMxiPQfoL8CmQiQWZMkkGS4COIjZP8y8NKgj62CAPR
7IfA92TvUjk7CWypf58dEX8INS3InAYXCTiiuFeyS/2A3ehG+xA3CV5TVJqH
KPvBTYR9//oxEmgZy1bcafEFtmqZsDU+EgyZJoPlFV/wPnXMzUeQBO084/dh
2gdoMzXKDoRJ8MG64Tubhw+sN41fDRIjQYz+9WN95D4wf3/GhuIkCaZO3BZ1
S3wALTLMg4GSJAh957I4Lf0AHgTcq/4rTcL3tCpv4fb7cEvwgP6BDAnKyd6x
/Gd3H1SefBvF5Ehw3P4Wy96eNyx+t+ZzUCBB52j5RkCyN3QTDs0NKJGAnY9J
t0rZG96K3jihfpYEu5wrQwlj92CR2ulnqSoJPpv03eR5dA8s/du1eADPj630
9hmBe9BEZiAepEaC9GNNr1bbvMBZpS55WZ0ElXTSHrLuXkDZNZlxSYsEwwZP
BvY4vOAYg5JakQ4JJLP2hbUbPYGbSvYRjS4JLjkILdO7eYKk8Kypkx4JdF0H
a7S4PeE8T+FggwEJarZKjFc77oJdAfMOhxEJyG94R/59cBf4Q1o6XI1J4Ca3
oX375F34nMur8cmUBL2NDnFnJzyAuyHrLoMFCfxM+KOtXnhAmeX3q5aWJDjb
rer6TdMDGKc5V3OtSXBPhWyffecOSCePqa/b4vn3j7DldLkDHGpB5koOeDzv
Ug5e/bgNQha3/nvkSALFZC2qiCu34YfV6tcGZxIc1J8aWuhwB2EfS9l/N3G9
tBysp6q5Ax+J8vq5WyTYk7NlKv7kBjJ9px193UlwUjyT9YiqG6iOuClX3sHz
e5jzX0r9LTiXtDlLvEsCu/n3h2/BLTAOq7QRuEcC+is/nzm1ukIKi07d1fsk
qNdlF3mq6wpcEeZ/gn1IsLP3waN20AVSH7zkeO+H681hQpfczgUGA6m4Zx/h
36twt9IQuwnyVS2H6QNI8HY462vao5sgnN7z43QgCTBvial5hpsQRy6YYfmU
BPyyVNc4Mm7Aw8p6sycheH+l3++XVLwBFJIvybPC8PoZNh/w9TiDt0ZcdksE
CagPzGuWnJyhtCDn/FwUCTZ4I//5kTnDGm352EEMCaZNMtYHUpxAuCbak/sF
CQRGW3sIZ52gNImTUe4l3p8pmjIfxh0hjV2lRieeBJ6X5X5LP3KEgCQfc+sE
XN8ac456/I6gQVqi90giQXyJBS1963VwKj7V++Q1nt+wjXYH1+twL5st83kK
Cd5VI68vsV4HlSqt8JRUEkh1ymfW1zmAfn9IcF463h8W9TwVzg5wgy8juSyT
BK8G71uLsDmAlFB4V3U2CVIb7UUZmuzhw+xH8U+5JCjbMeV38rCHh587DBvz
SdAYlbcgJmgPrcltR5sLSYCk66C6A3ZgW1vW1/SOBBq1/NzfQu0g0f1Q+ecS
vH7WO+55KnbAU/D6U10Znj+i73TWvC1UPVzY/FBBgssjz5qeG9lCwIdg65L3
JFh/foSGqtUGVMuSt7OrSND1/IbfgZINKB8q/JL8kQRHJ5/T3CqxBmtztr7o
Wrx+HeY/1E5Yw3iyKYt/PX6/+9l7PplWkEt+9ZV7A65PszMDFAJWcO+ei55l
IwnyJ5Tox9MsYTzu6EXtZhJIbKisrgtaQkSeTIRsKwl4b3x6iOReg+N6Lkw8
7SQIS21f/Ch1DZr25ifJvpCA0iQv3PSDBfzgGtla7MSfPx1AZDhvAbxp96w6
v+LXz4vVD3Wbw+t1YZaiHhJoduQMZVuaQ2LwMa6oXtx/0iWUPFEzgOepHi7f
STDCQUutEGAG/LdW+LUGSNAyy5KwwGYGHX2nTwgOkaB4eMrYp9AUSjtqwneH
SRCiqDG5fMEUapQKtfpHSfCwtheVmDSBNS+V6/nj+Hzo03pwxtcE8llK5x9N
kMD6KdlFOi4TWIysaDSYwvPf5t2cVGUMD19tHxGcIcHpZWGecTNj2NRxrFif
JUGs6vP6jt2rIPdJ/UvDPO5npLnT19KuQvHtexejFklwPVlMNlLzKiS2KSub
LpOg+uwt/yuYEVxqy0vgJ5Bg0teAJjfBCDj+DDsvE/H5csV68qmaEfjTjBQW
oyQY/C9SZB4zBDGZKkfPVdz/swlin94Ywjl4kaCwjsfTUX2RTtcQ1nxsL/zZ
IEHAawemjr0rEFyu4lr9C+/3rABGYvEV6FePob7/G/enby/pb9tfga+GMpLy
f0hQ90Zg8jLnFXiS6tK7uo33I7n9LFmyAeTo/9vK3yVBuJ9i7hFqA0grH8+y
3yfBmGercYqvPrCzzo0cPcCfv23jVoPpgdjoZvy3fyT4zjeaauioB97N6ETQ
IRR4Zru/W0xehoPS6XIFChSSDDO4Oswvg/696xzLh1FYEbP68GxYF0YHzGgS
KVGoqTIRzDXVhSr+3uea1ChEdi7/IR+7BObIQcFPGhR2/KlY3lhfgnTJiGup
dCgEB5c7OC5chFdWNpk6DCiYj7sdM3HHmZw3eIMRhcDL/DHXt3Vg6XcjWTIz
CrphT5VCQ3SAAgvlAVYUbM9eaa1k1wHyqgeD82wo/Ks6ODyfow0i84xSYRx4
vLVaW7RntOF1utWJk1worNFT1Ap90wI1xRftnUdRaJGQeC3opAUnAk3oXHhQ
uEf+herfX02w0nL9Q3kMBaEOw+SKJE0Yev0gOus4ChMJCbSnFTTh6fCJboQf
hfMWrKoPBzRAo1Hk46gACr/Oc8o98dIAKi0mo7tCKKxCJrsKhwZoV8a+oRZB
4WxNr3T2R3VQilJMSBVFYfHLArHSWh3635Wqy59AwaPz6LjDYXXg9Xye0y6O
wvr9H4UF7y7A47Qnn8wlUBBr45UONL0ArTenogmSKFBlF1yZO3QBzvp5cfhK
o+Dv+UukvUQNLM+2mVP9h4IOr9WYqLUa6J91uxYvgwK7nfuHXXo1eGSVwSEg
h8KlETVxpOE8bFice1koj8JJVqyO4HEeyhvD+uQVcD5MT/NH5DxcXozrrVNE
4US1T/Xn9wAfRTTjLiijML7Exq0qBMBvaML55QwKvXJiJ8xeIlDOe8LtsgoK
QZxkVEeOIHDtnEVwryoev+Yyy1m/c5BSpuRsiKAQWzs+QtxQhbuIC1s/oMBy
qp6L3k0VPonxxhiqoXAzQLzj5YoKFB1sDvZeQGGpe+aF7w0VcH7cnaCngcIc
YqiYs3IWYt3yBr9oopDxkKyf1+0shFCGP1fXRkHChz+6Z+MMjN5pPP5JB4W/
Oi91y3zPQBO5eaDCJVx/s0PHaynOQAfXk7p3uijQTUQis8+VoXPtbY+QHgrn
+Mg5jvEpQ40UR02iPgrUC0ry9iVKcD8WCaC7gsIN8uumeeeVwIM+QdDfEIUY
RxrHxUFFWH7umrFmhELVJelbrLcU4fQjcTI7YxS2PrZmilIowuUPCtBrggKz
h5AL51sFuB28aXvODIWnvhrqE8oKkHu/+XqhOQqWjnETt4dPw0gw22XOayhE
uOpTtnufhlcpTjyBliiUh2yUjnGehhsygr1EKxROz9CgGTXy0CeqYn/VBoWp
KFtqLht54HwrsFBri4LxTpWN7GF5uCD7wlDQHgU/l0B3QpEcZB5TLgx1QOGQ
XeAPJRM5yDPD1ojXUfj4wNSNg0wOoCBHWN8JBesshPLhO1mQXiZqlTmj0G8y
V2h/TRZu5updY7mJQnzeraBmGln4zVdse9cFhTDjqm8JtTIglbxl1ueKwm2Z
Pz9H3GSgQDVN45Qbrtf87VsBAjJA0ncUi3JHgfzF4zKGov/g5Mnqg6XbuH5p
A+d7uf6D2Mrxb2oeKDRsuvKeCTsFB/YjiW/uosAVWKZ6bkca0q//urbpiUJt
xz+7Pndp8L2ox335HgoWYdyjSwtS4KJFP5jpjfdr0yMxbxspqHM1id6+j8ez
F33YY1wSOOL11PV88Px7Ely7zSXhTNkvqgxfFBRi+A0CxiTAIXi0/JcfCmTy
e2L+VhJwyf7NLc1HKGimdDg2zJ6Ehx/ixBMe4/5gn1il4HISbK8OERb9UZh5
eHNn7Kc4VA/5lp1+gkLKDQ7lDH9xeDKc/DgoEIWNj0GFgfTicDCma9QbhPej
t+2Huykn4K1B1X+8wSi86C9eunHqBAyPfeB0DkFhbz5591qzGNz9kEhdFopC
On37oJq5GGySX6XcCUNhe44YxLYuCsZ8O8xqEShwWJ1X6YgQhRv+SSfDI1Eo
eaHgaCwqCp/WHhh9i0KB79odl4pmEVBMWQ5ni0Ehk56RecxeBCRFCN/NnqEw
EKMn2EguAgEOCVJvnuN+oxT/0jZHGH7Shr6efIFCWsVOQOlFYcgSKDjG/xIF
O/5HUvlrQjD7X+l72zhcrw2jqFqiEDCV79mnxaMwyfHH0Pu8EJwj/hKdeoVC
95TEv7MkQUiBLPJjibheJSTqoxIFYY7n3rZ5Egr0v3Pv2mkK4vPWivpVMgqO
SbniFZsCoDFOkut7jedrsIfGL0cAGq+Z+tGmoMB7fN+q3AznetMp9be4n9td
iTGkEwBOQ1n7R6n4POAtEMx/wg9VV04eep+G++Gp3P+cMD5o0F9oIqbj9Yub
/tZjxQf5dZk5ApkoaP9muDf07TjsfmnLNclCQY5x1MBD/TjM+fd1R2TjfvNt
2Otl7TGonP3I+SkH928KZiWZ08fAJnwzeC0XBZt9xv+QMl6Y1tg5KpiPwkEl
O3/5KV6gcnw5YFiAwoe61H+PS3nA+H3zh8BCFOLcWPaS5XjA/XBgY1kR3g/D
Qe671dwQoNG7OfUOhRwJg/l44IZv8alX6UtQeEItwW3beRQUNNmmlEtR8Kpu
3tE3OQoV6oyvHMtQyN2QTb02zwU+XM99n5fjevrKoerjxQV5n1L9aypwPx/c
vpZ6hAv2vcdr5ypRKCZkvWxJ5gTqwzpidB9wf0u7WzT1HyccTSlokqvCnw8x
b5c6OID/9uNnFtUoOP88eN1vzwG2dzJeBHzE63c6PSn5LztIcfR9yq5BgeAj
bCr/hh2UO9WFOmtRSPxToZ94lh2ih6/VoXUo0LwOUvz0gw06HzBGMH1C4bED
4+8UfzZQCxiKlm1AYV5pOeaUMBtInA7oMPqMgqzQoKRrJyu8Muo549WIQoHc
8DGdu6zALh+08LIJBaWXcf2NPKxwsfrOl/JmXF+3K6a621hgRW9zsbcFBV/r
lweOnixwbpMVsFbc76P+UQQJsMDu3NsBmnYU2l9mEY/1MUP0UzRbtAOFcFS2
9VQgMxipFlac/4JCaMfVvjJ5ZuAJyz641on7Yeu/DuVeJpDy8o6414XCRc8g
4tAZJriy9P1qzFcUPpewyEjlMcJaxWObnG4UHLji9k5xMUII/7nC+h4UKHwH
Cd8jGOCT6YDSwDfcj7+G9FH/o4dTxeTUhF4U7MdVP3Xcp4cU1Rjegz4UvIf4
N8k36EA0T9KLtR/fl2jX10rc6eDPxXwmsQEUpO6+tm1EaWErsXpDeRD3q+Lb
YlK3aYHJlotHdwiP14rVcnmDBqaEoyKshvH5erRIc/kBDXTTtpx3H0EBpdKx
EySjAV3TgPOPR1H43shhEhVJDfWGy2nRYyg8pB75y8NFDSDqcOzNOAo9OcLX
23OooLObYTf/B75PJazUPlWkAg67FaGqCfz3UX9vXuykBKXZ1cTmSXyfMfy2
z2BDCR4CtRbfpnA9Z8fKftk8As7MZC5j0yiouvxGb8ccgXvKt9vnZ1ConuhG
dk4cgbHVak9sFoVHdqu2Nq2HwSAq4vbWHD5fzpaWv3I4DHGzz2sP5nF/YBb9
lEB+GJpID8woF1HovL8rZ5FNAe0GFFoMS3i+zjxiHtKmgFvnQqPZllFw+Xfi
xyGMHBp7XHi4V1AIsG+XGI0jB0mn9EN8BBS4W/SPX1Elh9JI7nNCRFzfn3p4
HZYOAXE/sEeUhMLyH4cKypeH4AQxpFIcRWH40oXninAIpGm71iQw3C8tfgUR
MTLo3z7yVGoV1292sz9vKhnoViy6S6+hcMX84qtmAzLg4hYvl17H9d6LbI+S
k8HF2/f0pDdQ6Au0+ll6+x9y2OKxutRP/HkXgMVz/ADp6j0cL/EL3y+PJbuS
dA6QvOVPIL6JwhDjPzOm2r+Iva+vtuhvFMwYzrh9l/6LCJHPFwluoeBzUdlb
NHsfOe436X78D94Ptuw+/47tI6cCWJ4d3UZh94Zd+dWkPSTijzwD2w4Kx6iP
hHFy7iEN09k/6HdRmP7O9041YRdxQlXZKPfw+YdRH9Qe3UXcGMMLD3D2sjOK
CX27gxycE8zc2kcB+331bbzIDjJqmbeL/UVhX+h85njxNnKVM/39wgEK4hGV
F/TPbCPn5T/1jf9D4S0Ls/Fi+x/ENu2ZQR8ZBlVvkPFXpn+Qkz9eyrYdwuCr
ezWN6coWcrYx8kENOQY9x2zUjj3aQlTEpwWLKTDQHxZlmmbZQi7Tn5dNP4wB
70ql5KuC30hnkWruyyMYBJR891NQ/4047TgHBlNisP8okrZ6ahNJzb3S4k2F
Qf9le1aWR5tIMUOkmzM1BhMnMn+e5d1EluyzH5vSYEBVHSsvVf8LMUZP/dGk
xaCBbi94wuYXMmTXOHaaDgPymf16dYpfiJzzkqgwPQZGWl3DFgU/kXBa5glm
BgxerbVtchr+RM7u/9z/i3NPr76V1+4GwppJH0FkxODBBPODGzkbyP37K0+G
mTCQHibrJxluILyWbItNzBg8JqYd2/m3jgwqcFW9Y8Hg4Wcn8fDSdWQq5dFm
AisGp/XFV2Lt1pHQe1/Tn7Bh0F6bf4eJbR3h1omtc2HHIOe5/OKvmDWk6aih
phEHBlHDfeGvtleRrsCXyFlODJxPi5RuOa0illpTeYJcGIx4EHxphzEkTftj
IPVRPJ59/xjqixiigcWy/saZj9KpXK4BRQqPDrCNcGNwyHhfi1wRRdxPt+fX
8uDXJ5pO2pSRkHX/5eJUXgzYHOc25KVJyMSkdWTQMQy01Ipdvd8REcEyxX9O
xzHg1ndS5zxFRGIZ8zZ1+DDwZNtloKsgIJN15Ncl+TF49566RUeZgLTou+sw
CGAwYKOT2dq4gjDQ5GWt4pygLC56T3cF+cF8wrtXEAO5OOfty6PLSOADyU+l
QhggXka/NW4sI05yTx89F8ZgfO+ypNH2EmIqrFt5WwSDuMonA65RS8iRyiF7
PVEMFHXvmIYILCHd+eIRkmIYcJF+6SRVLyLNG00naU5gcMX6zK3XVxYRRrNo
9SWcH/vcKQgiLSDDnpdHmsUxeF2ywK0TvoD4jQUtpp7EoIKTYX9WbAH5Y5Fz
208C1/NR4RrtjnmEivqSl4kkBs87Ds16uMwj6+tDv/6TwiDvQriUCcM8cvfb
yjqNNAan3nn5oRVzCIcO8615nCPSjXpPXZtD/LmHHepPYaAhWmTGTjGHPN4T
H4v/D4NFGU/LV8WziHP7+x43GQzG7lhdLbSYRVgLNtQ0ZPHn9aQP6FLNIpZu
Woq8chhE6nXEe1bNINee2xdt4Pxi6NZdrhszSBglWWaHPAY0VBOO8twzyEhl
NM/b0xjE7ssfDUieRugsOzg8FTB8fywRcqWYRrZHFB9oKeL1l4vs5vGYQm4+
VXTnUcLjQ4cOBU9PIkmD3osYzsL8IltJhpPIezOnmUZlDEJKBo7qtU8gNWfv
2cSdwfWyQsYef24CsapntnM6i8Gtd9+/2lf/QBTCyhYVVfB+NC6yLJT/gcxX
5a9RqWIw59151KFiHPnDHug/ivPpVs+Yx/LjiOdSysv8cxjY3Vf226gaQ5iE
70j5IBi+v6sPVKiOIWamBpe1AQOG7IamqtZR5Ehs1U+O8xh86Hid/lN/FBFt
oRBYwPk1p+u+5Y8RpAJz+V6uhoGVFE3yissI4pVnzRJwAQOFb+42z3aHkXsT
8sO66ni/3Hh1Uz1mGFF7aSh8VAOD/HdPqA4EhxG0P3lnHmdaR5ua9x+HkNM6
dNdKNTG4XkLObGM4hHyu7Ljgp4XB6GjUxjppEBmUfVGloY3H/2nN0DF8ECmO
6HnPqIOBk6fItVKxQSSlXAwZxZlcXd+is30AcQ2dNMq4iMFnsWedBTcHkH7d
h79cLmHg5WNzUYd+AGn4wywgp4v75Q/O7JTyfuThH5exHZz5bf62p5r3I++p
qvmbLmPgINzWrnUIv15t/StMD/8+b43J6KLviLZts7G+Pgap/p9vuph9R4xb
tTXYDfB8jWiSBg9/R3juGTSP4dxMsUfzpbIPYcpQ6k29gsGTnr1oFcc+5Ab9
nVvXDTHoXeF1FufsQ6htPfJOGGEQ5oHQM8X1ImrRLFdJOG8ycjtn739Dru9p
p5VcxUDPx8SWwuUbMn4PeXTXGAP7fY5vfKM9iIueIVHeBNcvk1M74WIPUtky
QfiN8xPjnSSzhm7kYaLqw2pT3N+ZhPotFbqRduvuVB8z3D/805SJJV+R5ZZF
4zPmGGwx9ndvSXxFVsYW3+7gXFwp1+Fd0IWU6Av51VhgkGY9kGgp0YXcMPlD
8LmG149MdDGluBPhmcDlbIlBQYZX5Cn5TiTvoDtkC+eU06pJR+q+IMWHgyre
W+H++JzJnUvzCzLxZvu+pzUG6QXF0hbfO5DPkUZf/7PBgFnCa6DRtgO5xKDw
EcXZdfsSj8Z6O+LnJqZSYItBYHkq3VhQO1IlU2TsZIdBlgPVlDdXOwKPBI8I
2mPwNnlti7mkDblWyKw3gfOiSOxKulYbYre8KJXogEHN4sLdY7OtiP+ERI7h
dQw2Cgwf+z1uRfKp9KroHPF6hbjwV/C2IqqfMLs2nDsXcpJq61qQ3JWOHH8n
DCRoLhlHWbcgAR+qQpScMQhPjxnlPdSCeAkJkq3j/Oa+LOF6bjNy8Rw7V/4N
DPqcaO0t9ZqRwM9Xu2xv4vO04Z7S7u8mpFJRcI/TBQOztXtpyulNSJl36FgP
ztLXylDGy03I4zfCV4Nd8XyNO8R57zQi/ud1b569hUFbh42kU34jYvj1Cvc6
zpyWlneGzRuRkJehzjlu+DzfvqraTNuICCQjV665Y8DzfEBQ/dFn5Gp81zDj
bQwo9p5x/1hsQBpuPdptxjn+CPkMYtSAsPLm1N2/g8/HaXIF+6ZPyPraKx4J
D3x/MN3kVJD/hBzQZnBN4nz8R2ZTcV49opnFXfn8LgYzTcHFDXz1yC0XK0zN
E4PZaIrnlkl1SFvTaPsvnP9r0NPwYa9DlAPkVXK88Hn2yYieJq4WuXSWwsz0
HgaVZ9UUyNlrkfggaSYqb3zf4Vc1M0+sQbRoom9U42xStaNKdrwGOej1sbtx
H/+9lPryavZHhFPw2R7nA1wvUsah3P99RBIDFBTa/8d/qIK966qROOk0Fm8f
DMjs+h9sX6xGjpV2PRf2xUB3LkAyabwKWdOkLPuOc3QmlnTJvQpRv/7GM8AP
j7fXiXCEvAqpTGkdkXqI18uv615j0gckifnL3BjOkq1Yi4fsB6R2vTsq9BEG
5x1qAhi63yPBoQ/H5R7j8+R3dEzMzffI8g2hnimcA660/F6mfI+Uj25cj/TH
QIQlk8SWV4lkComnKQTg83beopv6YiWin0gfMIOzZOPy8Qa0Aim5sEgR9QSD
m16uzyRfViB363akFQIx8G4w/6VzpgLBeGL/TuGsktChwzhXjpxl++kZHoQB
pXZJmVd0OfI10uGZ7FPcr46f9ryrXI4ocZy4Mo5zxlPunX+LZchGVsjHoGC8
3oMFIkdflSFZit/6JUIwYOe//rFcswwxHhXw78dZkKJsI3qtFHmxsPDDNxQD
sOvgSTUtRVRG9WYFwnC/EBI7HtFYgogspz7rwFmwVODWeekS5DSRZ8E9HPdX
SunqqpRi5KcCxRxbBO7PSfU/pxiLEfvKpPAanIuMmfXePX2HmCwcG7WJxOcf
KyLHuleE/D031kcRhc+nzOyLh72LkA8SDF75OI9unvO+v1GI/EH/NlyOxvtB
PrvPyqMQUeTffb+Oc8Lv0tKijQKk5qq5SXwMBmrRl9+aeRcgSTtW6UrP8Pmt
9dzSZC8fb47AhHGcv++HzCQ/zUeqasmVHz/H5/mNHDMexnyE551ZCP8LDM6o
/OTvfp2HXHUXDWjCuV+x4XHOyTzkM1FR6Xos3l+qalyva3OR/YmLvodf4v3V
T0aeqZeLXL0S8DAHZ+ejgW8q5nIQv480klpxGBxZm9Vo9s1BUrdGI5ZwFtE3
9e1gzUHGxTyTQuMxmPZzm/9YnI0kb7Kbib3C4E8R8W7MpWxEvnixqA3nzvzJ
BRVCFqLLQFfnmIDBN23Z+LqILERW1c2HIhH/Hm50hEIqCylS11nIwHnCTVOW
vi8T8R+bPYAkXA/7dhe7vTMR8fU7XyZxHl87u6FyPBPpwGTVHiZj8H62R+Bq
ewZSwePmcvQ1BjpaM79p7mYga+nmah9wLs1orjQ/noFcdlXoNHyDz9Os+81K
X9ORbwZwaBXnSW/GkjS/dGSzsJIQkYLB4OBf0QjJdGTlVW+Q6Ftcn9lkO2N1
achhvv7uRpzNO8h0w4XTkIwHpA7LVFzvpjduMz1LRciUXO9t4ey8Ht5rv/cW
Cb36qP9FGu6ndQRez1tvkRE+6zmJdAzqrY+ryU+lIBJHTbNbcbYvoHNJupqC
7Ak9P2qTgUH2GeX9+K9vkLwdA/iD8wtMLvWY1hskXKzv6ItM/H3eDtLCLa+R
AvFLOeJZuN78eptSLrxGfiv9WWjEOUpZ+t3j1mRk5hTbqHk2BsaEqHu1OsnI
R64p/3WcyehKxrR7k5CWMp+xsBwMkvlie3nMkxBVM/kVvlx8P7WkDhCfT0So
gtWKPuCccVFYw9kjEVlNGBW6nIdB6FZ1cee/BORZoKzBHM6UY1sPdWITkPav
/jI++fi8F0tKGxVJQOLZsXaGAgyCztmpetS+Qow2N1mzcHZ76px2xOgVMnQm
il25ED/vECi1n5PikVJf9Gs3zh1rP6cowuIRkXiLM/ZF+P4VK4lcE4lHmhe2
rH7jLCMaezOiJQ6ZZaBTiniHwZCiaHS4YxzCtvO141gxBuXs7//pU8Uhqyu6
TGU4V3E1aA4WvUR+fFliUC/BoNrLnpLZ6CUia53TMoTzMfdPbLs7sQjzlxGZ
m6X4/HXucorMikX004tNdnG+f3T/aI1+LFJZIiIXXYbP36bP9/33XiCb15Q7
jpfj+Z0One8veIEoq6exl+LM6jyOlli8QAQtc3nOV/xvnrCp09G9QB4Iuo/1
4cwoaOfZ9PA5cmeBxtC+Etcvu1XElYVnCHVeYuAGzhSUolsfDJ4hGf9x3wp8
j/ez6orEwqcY5KXhOgPLBwya6IJHek7FIApfnFzTcVYI1yQ5ZUYjVfqZT/6r
wufN3Kf4tKPRiEYlq2EDzsIlWcjt2Cgkc2Pux+VqDNaMq1+00Uchy3deCf7A
2a5zxC05MhIB1XtCLh8x+LR+gE3SRiLV77KntnDmZmp1DYuJQOo/05sF12BA
XWXrFskagSjCxyiWWgxaf5/4+CM5HEnhF32civNEQvJPD+FwJMlvR1eyDgPf
2H6Vc6VhyOTAncRqnFO7dMmVz4UhZ3jONanXY3B35feIaU8o8jPi58denKl1
+fif2YYiLXXHTS0/4f5i+t5/8FcI0m7OVLaEc555Pa9AZAiykf2r/W4DBo6a
DpduCIUgLQa7r/dx7jRFo9Prg5FPR42kwj7j+cFo4prNg5HpHamHLI34+U2o
Trl16ymS1lYT9gZnadfskJSEpwiRUdxItAn303WX4gvKTxGmnC/jJThvP6Cg
KfkRhBhEewkqN+P7XXC44PCTIAQ9kyzWhPONq5TZFSeCkKX4m8SLLfj+uOXn
rNIXiGS00br347y4cNTppl8gUtbzpuRaKwb/Byod/l0=
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], LineBox[CompressedData["
1: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
t8OydOtq/7NIECnl559c27E9QWrqCGskRI319Z6btKPUz69jW2IE4pN/pRqp
tcNwOPa29/EInGb4mnVOvB0xCokRPq/C0T5vX0T1XzuM2l2TqITCsbyflrr7
QDsKKKd/f60Ng1k8f3PG5naMylBLcSuHoUL3UCr91zZcqixzahgPxW/VA2kt
5W3oHRAuyHAMRWP4GnN0RBuC3C0UGhlDoX1ut77Z/XXd13H5tjf9CTjNIhjk
r7ThuX6J2GOxJ/hx0MmLsLYhearAgPVTCLL6QyC41IpwZhXfcucQxC87vSKt
rTjgObJH/3AIotQ9xBRSW7FX6GDepqpg/Kr5fd/KuRUerNpcEQbBCGuejU9S
acWqSrbndoZgdK0cFf/E3YpjdDRT9cZB+HVJuuH05lak0InX7Xv3GAfNmKMe
DbfAdbDy3T+Wx7h3IOLgQlELDNv2a9+1DMTcxicVZsEt2JW95kI6ApBzhGpy
1bAFdgb3tK3OBSA51Zs6WrQFI6+Z/Rai/BHS+85Ecn8LenWqJnKo/PFI48vj
zfPNGN49URxp6ofnujQplKZmGEX+5x015Iv9Q59MypObYdFYwfNc1heHU7q3
Fj5shumXzG0vqh9B8s8qVaVKMwqdtcQjLz7CuK/sreGzzeg93fhRt9AHF3cY
lTBtbYbZloM/f53zwWMuZxO1z01Y8Tbtlcn3xkGBwdbXpU3421EGBQFvGO88
dIEjvAkUGTHWX2VeaN6lQZtxvwn1f39k8kh44QSDp5/E1SbwM67cnW3zhGyK
88HlI034UJ6wm+umJ553MDK9W30P2qG2ktYpDxg/GC191vMejn7f4jqdPZBz
1dgsNPs9Ns77S3EyeyC9Z+VBgu97UCpuudWlu8O/PIOvVu89OKmqpeMuu+Oi
xZ0xKvIewnRfxpM/uIG5pm5IZe97eO1s6Wh1dMOGoCCDmrlG3GIWq2Dc74bk
TaxN0i2N+Hvob/StUld8ZxyQ+p7WCHWjHeU52q7Y2b706Ll7I068KZP+vdEV
38ounbW92YixD7c/3FRxwX6Hntnbgo2YH1n8/viFM4pGU1aNmBtxMiD9rcXf
h2A5dyzEf7oBw78USudUH0J1Y/lifWMDmqPPvfqb/wASUnX3Dqc04PHU7mr3
3Q/gbKfO98S1AZ6Mqj4mDk5QYjQLYtNqQFb1pa/pnxxxZ3au9L1AAzYfe3SS
85ojjv3bvhjM3IDF51Qr/cUOOP1sr4vVz3oMRvDdeMHpgNy2kUDLpnoIRV9y
835mj4Bb6tqP0+pxIq/vot4ue1zL6OGs96hHT8cJF+7HdrBh0jt5SKcetkt7
4vq32eFZ3h6LYOF69BXbmSn42aJs30DNkX31GKmKvBlAb4tTO+s82xfr8Frk
y377EBuwXKHSe9ZZB0FbNfbN+2ywOtXk/ii7Dn2cvNdOPbdGnMnFnU8C6hCv
x5jfe9YaJLUEJUZ1iD7a37BabgWG5bwLVJJ1cNfzvRgoZ4XCZXueuxx1+D6S
tNF51BKnztyRn6KqA+v+Eq1KR0usWTXXBQ/XgnWYuVaa2RIno8fLlN7W4kyM
3RrDKwsYev67Kfi0Ft/Lyqn/SVvgUPTNrosOtWD8mcay87s5LHdvl7ilWotT
xyLzL/qbw9xWYiDpfC1sOG6Gm3ObQ8/L+A3trlpEye3QuJZmhgD+BVr/uRqM
aVkqJizeR8AJ269nO2pQwLQ2+l7yPr40b3VezK5B0cyt64XPTCFT2f5j8HEN
xu8F8ckum8Cxukjpi2kNftcI5DsrmYCjUKKXTqYGQ1vcpPkK7kH+rG2w8uka
dLJTPmjuu4eISI/ECroajAwnvvnsaoy6n7nHZSar0apxJqBw0gjkqbLw6vtq
qLOX6deqG+FDdc6f9xnVmAtpyf3z3hBZ9zS9yvyq0bVWTmRhCJXyoqk242qU
RGryphbeBVOK9HWaa9WY9v5Ev/jfXdzgGi3VOlWN8WKeVK5XBvClYlHopavG
ggXraQFuA/z6U8lhOVWFLsskNrrcO5DX6r36X0sVTNoE1CL576Dx981OxldV
yFs+86u5XB/MHK7dzEFVkLxEZ/NMSh+/5nx0hcyrICzyK3ilVw/mhl/93OSr
QLNHVKPXQA9dgZK6U7xVOH3y/Un237dBbx4077CrCsdljsR3Bd6G0wleea6l
SgxKC6QOcNzGwLVrvn/6KhGVLm16qlwX8hfc0+bfVCJy01XDN+q6iG5KKKaP
rYSGoZas/bIOyukvN1x1rsS2nud7tSJ10MhyYiRNpxJ/w6s3qAvp4BERZeAS
q8R4sui/upJbULYvVm47VgnV4bNRn2hv4ZXxZFXklvU9ZNT89TcVbdwJd9by
mKwAUTmY3ZhxE2mrkpxPWiuw1t5z8z71TezyMztbk1sBhVm3TVU3tXCqyMJ6
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
yC3n1zo6vsiI9zlQsuUd4d9ZUMl30hdRnz6o6t8oJ6Yc9FGuM4+QcPbTc62Y
t6Tsks0VsTePoJ+i5eU7UUZK92Z+dHJ/hJk7B/Z2CpeR9zsaLTmvP0LyD4tt
rGGlJOGIx95rLI+w4jcRrfyzhGQpsI4Pf/IBy9u8IF3ZEvJRX3N+PNMHi2OV
5FTuG+LVEaJxy84H56NFnWP3vCHfClz5r4r54HfdsxfxbsVk5eem5IQdPriF
95GHfxYRoaV3lXeHvKE2IJu0WaeIHPLh/hKT7o3Yky5RYt2FZOaTTNQlO29M
782qfHetkChqt/y7JuGNbc4WFMO6AqLndNykltkbGjkbGE6LF5BvviIH0z97
4e6p0F9LNfkkPYdNYinXC2r9/clFV/PJxuW7e166eSHw+ENPrbbXpO6D3NH3
8l44Wlpo0a32mpTEPrWUPbqO9y7Z7hjLI7tnxC5cmPeEvn+F6KpVHlFY0zrs
V+MJ0fM9XL40eUS2pOk9ifCEDuOQc3p07rrCu6irGnrikviNmev/5ZKVHZ/n
Oy944tmlz8H6jTkk+vFMQw6DJxSL6VtG9HOI9cgZ+plPHuh3KDYspM4h8yXb
FoLyPbBUyPD7hUQ2catleBP0yAOzwk/GtfxeEXXGx+HTWv/jpxnud2WRd/sV
qjN5PHBSm9Ouii2L1Lkv2NXReuCc1PmDopYvSdeXTxxkyB0Zp4e/tNdnkiwn
kVamPHfEWJ+pUz+SSRx58ppFHrnjLlX/iRrnDHJb/6Pee213JF3l+f1rOJ2I
NX7vzzrvjjMMP/NGxNNJ9Uc+y+/07sg/QatomPWCBO6MtXMZdYPM9lh1u30v
iOaB67wmZW6467W57vejNNJX1DaVHeaG0wWfmQdXU8n3LOp5KVM3sJTyCm62
TCUfT7E+EbrihgmNp3HGkynETztjr/NhN0gsPT8+dzeFPL/m3svy2xWTD7cf
8f+aTIx92g5u7HLF7nxhGXbjZNJovZ9cznKFQVZS74ufz8nQyFxgl48r/i1c
V9hm/5woH2pcyb/tCniYl/FvfE5eMbm8mLjkinE3ettDIUkkReRCh+k+VzR/
CL/86kgSCW4gCe7fXcD232sJSn4iEeVglapPcoGBV+LRIOlEstVAP/WFpgv8
+/I0Kz4nEPGpS50cu12waNhoqf0wgTQdZ2K62OaMT2wW3zX2JxAXih7dd19n
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
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
           AbsoluteThickness[5], Opacity[1], AbsoluteDashing[15], 
           LineBox[CompressedData["
1:eJxdl3k4Ve/XxmmSiJIKlVJkiopQyr5JiMj4zZTMaaJBpiJjoslUplTIlCSE
lJQoIZJ5yjyec/YxT0W8+/fve/451+c6ez/neda6173WI2Rz2cB+GQsLC205
C8v/vv//Z0F/87abj7Mgn/Axsbg2EM/nN0VOmxaDK/jVe/mESOQdLlbzli5H
0gNJ5bmGeMRplQ7tr6jBK9Pswr8qKfgme8Tx2uN6CMtGcPFGv4J9zVCJgkQz
PrvWubdezIJm+LsUoxdtKGWcrk9geQvVu2+KD7B2wtZgaHX03TzsDU+qF0rs
hjn9atcoewE2yetcdJXvhcffZf/ab31A1SXlpuqiPiyOHYgPpX3E74/Bry0O
DmCnpQfktT7jUI3UVfOUQdSO50r4/SpGU0zHnQW2YdS0/jPZMPsFnsb+Cq4W
NBxuyTs7wFeKDU9TE/+l0LH3MXcsl/xXSEa3fv3ez8DVprqSpJPf8Ls03Yl9
MxPXypuUimzKYPj6r8qs0ghMJbj+XLr2HYaf9mV+Mx1F9sxTl3Kvctw8oeBq
JDcG57XiP/oCKjBkT3pdKBjDj4zI9Lo7lfgdUPWTkB+H6w1Hq7TAHzCIbRZj
ZI5jt/2vZjffKnS2m4kH75yAEWdNnKF7Nbo5VTRlwiYwzz/XqXPxJ2JUifal
vxPgl2S75m5Wg72bONdwWE2ihPxxfmLnLzTcLG68VDyJNse7vHWRv3DptfUm
YusUuOKDX/StrkXJ9r5rUc5TWPptfWqvRy1qgh7ZhpVNQYHl0rGioVrc19eW
ObZxGrQDQlaPjepAJO2e+W45DbrJpPPnz3XIqnkUdiBlGjeCTwqritejY7vr
24ThaTSzCE+KhtWj8vmHut2iM/ASVlByma3HjaRP0u3WM0i79uOIzOkGbPGS
qm6MnkFHay/72c8NiDCdc5eqmkFvtMCTzUKNsGwsKJ6bn4FHpEiZjm8jwoey
p3XEZrGg/FWZu7sRqyJvSajqzyL+kGSCjVITmNX8MiOus2Dj2mZ5MqYJ2vMP
n9rFzGLZ3ra6lskm3C8pLCosmEWkg+XB1TrN0Kg6+nx14yxOZnzM6U1qBnPu
zxqrkVkoCfcTTvPNGPmsdLtpxRwiy/W/Zem1oOZYirYP3xwy6nrXZyW1IIR2
3PSq+BzMNNwars62QOr0kHmRwhzCGpRezB9vxcf1kp/cVOcg8api3iCmFd/X
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
D/M=
            "]]}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{True, True}, {True, True}},
        FrameLabel->{{
           FormBox[
            TagBox[
             StyleBox[
             "\"\[Eta]/\\!\\(\\*SubscriptBox[\\(\[Eta]\\), \\(c\\)]\\)\"", 45,
               Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}, {
           FormBox[
            TagBox[
             StyleBox[
             "\"P/\\!\\(\\*SubsuperscriptBox[\\(P\\), \\(max\\), \\(Wh\\)]\\)\
\"", 45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}},
        FrameTicks->{{{{0, 
             FormBox["\"0.0\"", TraditionalForm]}, {0.5, 
             FormBox["\"0.50\"", TraditionalForm]}, {1, 
             FormBox["\"1.00\"", TraditionalForm]}}, None}, {{{1., 
             FormBox["\"1.00\"", TraditionalForm]}, {0, 
             FormBox["\"0.0\"", TraditionalForm]}, {2, 
             FormBox["\"2.00\"", TraditionalForm]}}, None}},
        FrameTicksStyle->Directive["Label", 
          GrayLevel[0], Bold, 45],
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->{{155.0625, 43.78125}, {127.62421875, 29.25}},
        ImageSize->750,
        LabelStyle->Directive[Bold, 
          GrayLevel[0], 35],
        Method->{
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
          "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox["\"(a)\"", StripOnInput -> False], TraditionalForm],
        PlotRange->{{0., 2.}, {0., 1.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}], {400., -243.3508830702711}, 
       ImageScaled[{0.5, 0.5}], {750, 463.5254915624211},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
      InsetBox[
       GraphicsBox[{{}, {{}, {}, 
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], LineBox[CompressedData["
1:eJwVxXk4lAkAB+BhS0uI2GrCjlZT5O6mmp8wyUYPclR2RTWieqZDjijlKCVy
pbYQaiy5bUa5MstoFCPHMHLN8WVq2NBFKtrdP97nXXHwhBtDkUQiOf3n/33f
WlkfVplE/IWMUVd2KVDMDWp/NAGDAO42ZUYFku0UlIdqxnG62iXjaN5DGN7V
NEm3e4sA24VpmyfZsFmj+sAyeAyvidpjVPvH2OGps0jClENkVhm+P6cG13UM
uBa7XuNiXITvxx/qsaXo24Jhygiqki916TEbEOWQnT8wK0UXj56gMMGBvW+m
y+N3YrjfcuacMGoEO9bwq9OPw7D1f0H6zmgCs8iLZxXcj2qOi4UPi4vS2JjJ
SXMhfNi8efRXzVAyW33a2FqAPP80xWAqDylrDlFKUjthpiUXVh1pgf1UEHPP
8XY80SlmDBQ+A7nH//s0niOmrfxCzfhzzFBONQamP8UvtnceWK5rw6sYtvYi
vyZURgWnGoTx0VCcmW5+i4Npg5DNofXtOPui+Ubj3jqwZliZ1xQ64CDPXJRr
/BhJAvuYMFYHonhlBcLUSozO+O8Od+jEiZfBjE8RFRgkV0iujnYi+hk76mZx
CZSvXG/NSezCRs/66XbqAwQGfNSvtuhG7ly5kZJjHrZbjdnyu7sx3hiUz5/L
hWl7WZUwRAAv9V5bM8Zd1JY9mu4i90DYrv1OwroNfcLDvbquB6vz90ljs9JR
L5toiT3QC+UCyU/a61OhEjvYZKYohO+p1POR965D7RChVM4SwvTQtp6xv6+i
sZWSRXLoQ5Iuw2Pu/iXM9aofWSrvw1xVqc1G42jYaZhMyONfIpxPj6g7F4lf
R7J4x0364RPW5D2adBZHQ94Pp/D7MXXuJsnrWDBW7RJXOzIHwP8a9UI0cQo+
v4Wui1YfBPcyZb6JEhNm7v27VpUOwnXw4Hd9vUB07FF8qOc8BO4nK+fCucM4
o+q7wWlsCFmesr9K4v2wP7R8WcqVYZx0oz9f4vQ7srVyfJ+uFOF8ADukLmgv
BJqhkw0NIiD7yFQpwx1ulh078kzEWG7ZQmUouGJMY6F3epgYrs2CgU+eTvCI
92clNokRd/mNSettB6zUkn1hqEkQRrFBIssOtTvfVU14SHCDU5BS4WkDBWe/
+x8zJZhdRxniG23BJrYud4NUAmLBbG9s8kYs5bDlgVQppr74j5Br1+Kl7jaV
rf5SWLWn/VOx2Byt8+DhyJLC+FqyWhrHCNl3ND7/LJKi9EDu5zI3KrxqWy9t
WkJgt75X6vb7KxBIKnw/vZOAitAmx5eqhxQ7e63iEAJzNbIVhmrL4Cg7eDX6
LoEIztrD1Z1a+GPo+GhcAwGBMlNsvVsDnhvkXbl9BM6cDB/p5KlAYPhlb9wb
AiWa890t3s8HnezRXPOWwHLZvsVPJhWQGMzwvigjYBGpsy8Bs7RB1YFjgg4C
T023Xl7YNE2bMVApOFBIoEVRIPKz/kCjFd9LCjxJIJX+oTv68zitj2pW1EIh
oL+K/i2h7Q3NiTy9vqNSCpK3nS7rEUEbkqu2WBtLobFDPcJFW0RrzFryp2ak
BPofeJKvm/tooQVrcpPyxZCm6xgxM7poGTEyN5KtCAlkI6lQuY1mWuSZZd48
iH8BKnxayA==
            "]]}, 
          {RGBColor[0, 0, 1], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], AbsoluteDashing[15], LineBox[CompressedData["
1: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
Zfvv4Q==
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], LineBox[CompressedData["
1:eJwV0H080wkAx/F18ToiNSKtqzuvFkmWF0Id+27yylS6PF6SZK66pPKQOstF
F/MceVglzuLk8fLspHmRpx2LbITNfruklfXgdhfCq3LdH5/X+/+PCfuc5/Ev
SCSS2+f+tyLuD8pE8HvY5ZqXjvF/h/3BvFGRaA5rMngG1fY18PRl7w9Wz0K5
zpUfK6hFQMlRFkUxA0bOex21Rz1yhM0sReE7xLpzoizmGtDiIfhWxvwXgfE7
V4eUNkEzQ3d52KAaKT0x8VPBzbgf/YKUfG8a6S67bT+at+Ajm+NNefga6fri
Vur8A0RlGTK8VFN4GZB+48v+VtxLM1mvYfsCSgc5wSltg5OG6zLbikm0F+7+
Gp3tmE+weZ/sMYHGX7Yb5Tc8xCGWsVOtnwL7KUstP5V2YJjCKD4RLcPaCzv9
k253omPRxnZ+aQRlz3qXUjK7UBhcu6djagg/Dm2P3MftxsImknOqpRhCq+Ir
BTE9sJzLqva91g+7pOHzRyKFKNDJ5VGO9EJLSGs/FfInyLOVnyiN3WBlKN9U
BvWCseakESelA0Z+woKVfn3oX/az+678Ntwim3THHBShQodZLVS24LI13qlc
H8HB8DffVGkTWOZn2lzRj0rrroj7QfWoeNbhnGI3ANVByfmekBpwXu0quWv5
GBqZ5Sp+TyX4LacPu+kPoibN7MHixVII5IRzUfogQh/viSgZKAathKwr1RJD
so9nbljPh3SFV9zUVTHY9y9VFZrkw1I7R0v0SQzusStqq6obeGux6gonWgKG
dH2W08tslB3wXa5+JwHrusTqVHMm3F2qH246O4RNtBJfU/00uAy6t+t+/uY4
b1/TlJqIVurGO/ygYZATUl1PCq5CLN7mPyQbRkipjdmHxDj8ZfZIxfN6Ai+a
83Np1SX0eBfMyERPUNgc0JVnehHhuvHH03aP4KZLLzvrcCQGbu5S57SMgHrV
qJZtEYYZHypXZjUKH4WcFEw6DXdaQz397ijOXo/1X0w8gfrFe5MFlDFsDQ+9
pt/HxgZeZ9xA+hgsRm5mxHkEYngiYL5waQzxxkXKPMPDaFIYJ0nPSdEzkzRC
avJBriTwuYNCijhrA82Pep44kh+ZF7ZXhuzbodNrNQ+AnuxobdogQ9JYZL96
mgVa4+zC35RxlB3ascO21gU63nWRnpfHoVjpn/nDFibOvN37XSsxDq8VC6nx
ZxzRHtKlSHSQQy+i/EIn1x5FMS9Ub9LlCBDp8EURNpipHBFqEnLUhaRw6/Ss
4NA8x+uiEuCaXTydzNkKXhU39G0wAWN2mNL60WZkZW1h6d0iwOxsnbmhMoGW
TkJGVAeBsqK5No+gDZh80tttqiCwzTtqx7S2McL1Jjb3qwgcXZKkZhcYYKJc
0lD5jIB2iV3GMdUqaNPuMlK6CZwjb9PPlGsjYMursl+vERDkfsUUEBo4FRhd
HL6TwDoD9+uUNhI8qBUfWtvlYEQlGhs2LtI/8HLJbhvlEDAmT975ZpZuv7Fv
vm7vOP6ZlPisTFPTF77v2+foJIPy2FP2U56K7ue32iD29RiY1PI72ecn6Y/J
zIS1bqP4D9Q9QHE=
            "]]}, 
          {RGBColor[1, 0, 0], PointSize[
            NCache[
             Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[5], 
           Opacity[1], AbsoluteDashing[7.5], LineBox[CompressedData["
1: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
DQ==
            "]]}}, {{}, {}}},
        AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
        Axes->{True, True},
        AxesLabel->{None, None},
        AxesOrigin->{0, 0},
        DisplayFunction->Identity,
        Frame->{{True, True}, {True, True}},
        FrameLabel->{{
           FormBox[
            TagBox[
             StyleBox[
             "\"\\!\\(\\*SuperscriptBox[\\(\[Eta]\\), \
\\(r\\)]\\)/\\!\\(\\*SubsuperscriptBox[\\(\[Eta]\\), \\(c\\), \\(r\\)]\\)\"", 
              45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}, {
           FormBox[
            TagBox[
             StyleBox[
             "\"J/\\!\\(\\*SubsuperscriptBox[\\(J\\), \\(max\\), \\(Wh\\)]\\)\
\"", 45, Bold, 
              GrayLevel[0], StripOnInput -> False], HoldForm], 
            TraditionalForm], None}},
        FrameTicks->{{{{0, 
             FormBox["\"0.0\"", TraditionalForm]}, {1, 
             FormBox["\"1.00\"", TraditionalForm]}, {2, 
             FormBox["\"2.00\"", TraditionalForm]}}, None}, {{{-1, 
             FormBox["\"-1.00\"", TraditionalForm]}, {9.3, 
             FormBox["\"9.30\"", TraditionalForm]}}, None}},
        FrameTicksStyle->Directive["Label", 
          GrayLevel[0], Bold, 45],
        GridLines->{None, None},
        GridLinesStyle->Directive[
          GrayLevel[0.5, 0.4]],
        ImagePadding->{{155.0625, 0.5}, {127.62421875, 29.25}},
        ImageSize->750,
        LabelStyle->Directive[Bold, 
          GrayLevel[0], 35],
        Method->{
         "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
          "DefaultGraphicsInteraction" -> {
           "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
            "Effects" -> {
             "Highlight" -> {"ratio" -> 2}, 
              "HighlightPoint" -> {"ratio" -> 2}, 
              "Droplines" -> {
               "freeformCursorMode" -> True, 
                "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
          "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
            Directive[
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.528488, 0.470624, 0.701351], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.772079, 0.431554, 0.102387], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.363898, 0.618501, 0.782349], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[1, 0.75, 0], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.647624, 0.37816, 0.614037], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.571589, 0.586483, 0.], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.915, 0.3325, 0.2125], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[
             0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
             AbsoluteThickness[1.6]], 
            Directive[
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
             AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
          "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
          "OptimizePlotMarkers" -> True, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& )}},
        PlotLabel->FormBox[
          StyleBox["\"(b)\"", StripOnInput -> False], TraditionalForm],
        PlotRange->{{0., 1.}, {0., 1.}},
        PlotRangeClipping->True,
        PlotRangePadding->{{0, 0}, {0, 0}},
        Ticks->{Automatic, Automatic}], {1200., -243.3508830702711}, 
       ImageScaled[{0.5, 0.5}], {750, 463.5254915624211},
       BaseStyle->{Graphics3DBoxOptions -> {SphericalRegion -> False}}]}, {}},
     InsetBox[
     TemplateBox[{
       StyleBox["\"Chiral(VP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False], 
       StyleBox["\"Helical(VP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False], 
       StyleBox["\"Chiral(VTP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False], 
       StyleBox["\"Helical(VTP)\"", Bold, 
        GrayLevel[0], 35, StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        FrameBox[
         StyleBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0, 0, 1], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0, 0], 
                    AbsoluteThickness[5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], 20, StripOnInput -> False], StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "5", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 FrameBox[
                  StyleBox["#1", 20, StripOnInput -> False], StripOnInput -> 
                  False], "&"}], ")"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 0.}], ImageScaled[{0.5, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   DisplayFunction->Identity,
   ImageSize->1500,
   PlotRangePadding->{6, 5}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1]], 
              Line[CompressedData["
1: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
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1: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
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1: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
t8OydOtq/7NIECnl559c27E9QWrqCGskRI319Z6btKPUz69jW2IE4pN/pRqp
tcNwOPa29/EInGb4mnVOvB0xCokRPq/C0T5vX0T1XzuM2l2TqITCsbyflrr7
QDsKKKd/f60Ng1k8f3PG5naMylBLcSuHoUL3UCr91zZcqixzahgPxW/VA2kt
5W3oHRAuyHAMRWP4GnN0RBuC3C0UGhlDoX1ut77Z/XXd13H5tjf9CTjNIhjk
r7ThuX6J2GOxJ/hx0MmLsLYhearAgPVTCLL6QyC41IpwZhXfcucQxC87vSKt
rTjgObJH/3AIotQ9xBRSW7FX6GDepqpg/Kr5fd/KuRUerNpcEQbBCGuejU9S
acWqSrbndoZgdK0cFf/E3YpjdDRT9cZB+HVJuuH05lak0InX7Xv3GAfNmKMe
DbfAdbDy3T+Wx7h3IOLgQlELDNv2a9+1DMTcxicVZsEt2JW95kI6ApBzhGpy
1bAFdgb3tK3OBSA51Zs6WrQFI6+Z/Rai/BHS+85Ecn8LenWqJnKo/PFI48vj
zfPNGN49URxp6ofnujQplKZmGEX+5x015Iv9Q59MypObYdFYwfNc1heHU7q3
Fj5shumXzG0vqh9B8s8qVaVKMwqdtcQjLz7CuK/sreGzzeg93fhRt9AHF3cY
lTBtbYbZloM/f53zwWMuZxO1z01Y8Tbtlcn3xkGBwdbXpU3421EGBQFvGO88
dIEjvAkUGTHWX2VeaN6lQZtxvwn1f39k8kh44QSDp5/E1SbwM67cnW3zhGyK
88HlI034UJ6wm+umJ553MDK9W30P2qG2ktYpDxg/GC191vMejn7f4jqdPZBz
1dgsNPs9Ns77S3EyeyC9Z+VBgu97UCpuudWlu8O/PIOvVu89OKmqpeMuu+Oi
xZ0xKvIewnRfxpM/uIG5pm5IZe97eO1s6Wh1dMOGoCCDmrlG3GIWq2Dc74bk
TaxN0i2N+Hvob/StUld8ZxyQ+p7WCHWjHeU52q7Y2b706Ll7I068KZP+vdEV
38ounbW92YixD7c/3FRxwX6Hntnbgo2YH1n8/viFM4pGU1aNmBtxMiD9rcXf
h2A5dyzEf7oBw78USudUH0J1Y/lifWMDmqPPvfqb/wASUnX3Dqc04PHU7mr3
3Q/gbKfO98S1AZ6Mqj4mDk5QYjQLYtNqQFb1pa/pnxxxZ3au9L1AAzYfe3SS
85ojjv3bvhjM3IDF51Qr/cUOOP1sr4vVz3oMRvDdeMHpgNy2kUDLpnoIRV9y
835mj4Bb6tqP0+pxIq/vot4ue1zL6OGs96hHT8cJF+7HdrBh0jt5SKcetkt7
4vq32eFZ3h6LYOF69BXbmSn42aJs30DNkX31GKmKvBlAb4tTO+s82xfr8Frk
y377EBuwXKHSe9ZZB0FbNfbN+2ywOtXk/ii7Dn2cvNdOPbdGnMnFnU8C6hCv
x5jfe9YaJLUEJUZ1iD7a37BabgWG5bwLVJJ1cNfzvRgoZ4XCZXueuxx1+D6S
tNF51BKnztyRn6KqA+v+Eq1KR0usWTXXBQ/XgnWYuVaa2RIno8fLlN7W4kyM
3RrDKwsYev67Kfi0Ft/Lyqn/SVvgUPTNrosOtWD8mcay87s5LHdvl7ilWotT
xyLzL/qbw9xWYiDpfC1sOG6Gm3ObQ8/L+A3trlpEye3QuJZmhgD+BVr/uRqM
aVkqJizeR8AJ269nO2pQwLQ2+l7yPr40b3VezK5B0cyt64XPTCFT2f5j8HEN
xu8F8ckum8Cxukjpi2kNftcI5DsrmYCjUKKXTqYGQ1vcpPkK7kH+rG2w8uka
dLJTPmjuu4eISI/ECroajAwnvvnsaoy6n7nHZSar0apxJqBw0gjkqbLw6vtq
qLOX6deqG+FDdc6f9xnVmAtpyf3z3hBZ9zS9yvyq0bVWTmRhCJXyoqk242qU
RGryphbeBVOK9HWaa9WY9v5Ev/jfXdzgGi3VOlWN8WKeVK5XBvClYlHopavG
ggXraQFuA/z6U8lhOVWFLsskNrrcO5DX6r36X0sVTNoE1CL576Dx981OxldV
yFs+86u5XB/MHK7dzEFVkLxEZ/NMSh+/5nx0hcyrICzyK3ilVw/mhl/93OSr
QLNHVKPXQA9dgZK6U7xVOH3y/Un237dBbx4077CrCsdljsR3Bd6G0wleea6l
SgxKC6QOcNzGwLVrvn/6KhGVLm16qlwX8hfc0+bfVCJy01XDN+q6iG5KKKaP
rYSGoZas/bIOyukvN1x1rsS2nud7tSJ10MhyYiRNpxJ/w6s3qAvp4BERZeAS
q8R4sui/upJbULYvVm47VgnV4bNRn2hv4ZXxZFXklvU9ZNT89TcVbdwJd9by
mKwAUTmY3ZhxE2mrkpxPWiuw1t5z8z71TezyMztbk1sBhVm3TVU3tXCqyMJ6
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
yC3n1zo6vsiI9zlQsuUd4d9ZUMl30hdRnz6o6t8oJ6Yc9FGuM4+QcPbTc62Y
t6Tsks0VsTePoJ+i5eU7UUZK92Z+dHJ/hJk7B/Z2CpeR9zsaLTmvP0LyD4tt
rGGlJOGIx95rLI+w4jcRrfyzhGQpsI4Pf/IBy9u8IF3ZEvJRX3N+PNMHi2OV
5FTuG+LVEaJxy84H56NFnWP3vCHfClz5r4r54HfdsxfxbsVk5eem5IQdPriF
95GHfxYRoaV3lXeHvKE2IJu0WaeIHPLh/hKT7o3Yky5RYt2FZOaTTNQlO29M
782qfHetkChqt/y7JuGNbc4WFMO6AqLndNykltkbGjkbGE6LF5BvviIH0z97
4e6p0F9LNfkkPYdNYinXC2r9/clFV/PJxuW7e166eSHw+ENPrbbXpO6D3NH3
8l44Wlpo0a32mpTEPrWUPbqO9y7Z7hjLI7tnxC5cmPeEvn+F6KpVHlFY0zrs
V+MJ0fM9XL40eUS2pOk9ifCEDuOQc3p07rrCu6irGnrikviNmev/5ZKVHZ/n
Oy944tmlz8H6jTkk+vFMQw6DJxSL6VtG9HOI9cgZ+plPHuh3KDYspM4h8yXb
FoLyPbBUyPD7hUQ2catleBP0yAOzwk/GtfxeEXXGx+HTWv/jpxnud2WRd/sV
qjN5PHBSm9Ouii2L1Lkv2NXReuCc1PmDopYvSdeXTxxkyB0Zp4e/tNdnkiwn
kVamPHfEWJ+pUz+SSRx58ppFHrnjLlX/iRrnDHJb/6Pee213JF3l+f1rOJ2I
NX7vzzrvjjMMP/NGxNNJ9Uc+y+/07sg/QatomPWCBO6MtXMZdYPM9lh1u30v
iOaB67wmZW6467W57vejNNJX1DaVHeaG0wWfmQdXU8n3LOp5KVM3sJTyCm62
TCUfT7E+EbrihgmNp3HGkynETztjr/NhN0gsPT8+dzeFPL/m3svy2xWTD7cf
8f+aTIx92g5u7HLF7nxhGXbjZNJovZ9cznKFQVZS74ufz8nQyFxgl48r/i1c
V9hm/5woH2pcyb/tCniYl/FvfE5eMbm8mLjkinE3ettDIUkkReRCh+k+VzR/
CL/86kgSCW4gCe7fXcD232sJSn4iEeVglapPcoGBV+LRIOlEstVAP/WFpgv8
+/I0Kz4nEPGpS50cu12waNhoqf0wgTQdZ2K62OaMT2wW3zX2JxAXih7dd19n
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
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1:eJxdl3k4Ve/XxmmSiJIKlVJkiopQyr5JiMj4zZTMaaJBpiJjoslUplTIlCSE
lJQoIZJ5yjyec/YxT0W8+/fve/451+c6ez/neda6173WI2Rz2cB+GQsLC205
C8v/vv//Z0F/87abj7Mgn/Axsbg2EM/nN0VOmxaDK/jVe/mESOQdLlbzli5H
0gNJ5bmGeMRplQ7tr6jBK9Pswr8qKfgme8Tx2uN6CMtGcPFGv4J9zVCJgkQz
PrvWubdezIJm+LsUoxdtKGWcrk9geQvVu2+KD7B2wtZgaHX03TzsDU+qF0rs
hjn9atcoewE2yetcdJXvhcffZf/ab31A1SXlpuqiPiyOHYgPpX3E74/Bry0O
DmCnpQfktT7jUI3UVfOUQdSO50r4/SpGU0zHnQW2YdS0/jPZMPsFnsb+Cq4W
NBxuyTs7wFeKDU9TE/+l0LH3MXcsl/xXSEa3fv3ez8DVprqSpJPf8Ls03Yl9
MxPXypuUimzKYPj6r8qs0ghMJbj+XLr2HYaf9mV+Mx1F9sxTl3Kvctw8oeBq
JDcG57XiP/oCKjBkT3pdKBjDj4zI9Lo7lfgdUPWTkB+H6w1Hq7TAHzCIbRZj
ZI5jt/2vZjffKnS2m4kH75yAEWdNnKF7Nbo5VTRlwiYwzz/XqXPxJ2JUifal
vxPgl2S75m5Wg72bONdwWE2ihPxxfmLnLzTcLG68VDyJNse7vHWRv3DptfUm
YusUuOKDX/StrkXJ9r5rUc5TWPptfWqvRy1qgh7ZhpVNQYHl0rGioVrc19eW
ObZxGrQDQlaPjepAJO2e+W45DbrJpPPnz3XIqnkUdiBlGjeCTwqritejY7vr
24ThaTSzCE+KhtWj8vmHut2iM/ASVlByma3HjaRP0u3WM0i79uOIzOkGbPGS
qm6MnkFHay/72c8NiDCdc5eqmkFvtMCTzUKNsGwsKJ6bn4FHpEiZjm8jwoey
p3XEZrGg/FWZu7sRqyJvSajqzyL+kGSCjVITmNX8MiOus2Dj2mZ5MqYJ2vMP
n9rFzGLZ3ra6lskm3C8pLCosmEWkg+XB1TrN0Kg6+nx14yxOZnzM6U1qBnPu
zxqrkVkoCfcTTvPNGPmsdLtpxRwiy/W/Zem1oOZYirYP3xwy6nrXZyW1IIR2
3PSq+BzMNNwars62QOr0kHmRwhzCGpRezB9vxcf1kp/cVOcg8api3iCmFd/X
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
D/M=
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{155.0625, 43.78125}, {127.62421875, 29.25}}, 
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
              HoldForm[
               Style[
               "\[Eta]/\!\(\*SubscriptBox[\(\[Eta]\), \(c\)]\)", 45, Bold, 
                GrayLevel[0]]], None}, {
              HoldForm[
               Style[
               "P/\!\(\*SubsuperscriptBox[\(P\), \(max\), \(Wh\)]\)", 45, 
                Bold, 
                GrayLevel[0]]], None}}, 
           FrameTicks -> {{{{0, "0.0"}, {0.5, "0.50"}, {1, "1.00"}}, 
              None}, {{{1., "1.00"}, {0, "0.0"}, {2, "2.00"}}, None}}, 
           FrameTicksStyle -> Directive["Label", 
             GrayLevel[0], Bold, 45], GridLines -> {None, None}, 
           GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 750, LabelStyle -> 
           Directive[Bold, 
             GrayLevel[0], 35], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> Style["(a)"], 
           PlotRange -> {{0., 2.}, {0., 1.}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], {400., -243.3508830702711}, 
         ImageScaled[{0.5, 0.5}], {750, 463.5254915624211}, 
         BaseStyle -> {Graphics3DBoxOptions -> {SphericalRegion -> False}}], 
        Inset[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1]], 
              Line[CompressedData["
1:eJwVxXk4lAkAB+BhS0uI2GrCjlZT5O6mmp8wyUYPclR2RTWieqZDjijlKCVy
pbYQaiy5bUa5MstoFCPHMHLN8WVq2NBFKtrdP97nXXHwhBtDkUQiOf3n/33f
WlkfVplE/IWMUVd2KVDMDWp/NAGDAO42ZUYFku0UlIdqxnG62iXjaN5DGN7V
NEm3e4sA24VpmyfZsFmj+sAyeAyvidpjVPvH2OGps0jClENkVhm+P6cG13UM
uBa7XuNiXITvxx/qsaXo24Jhygiqki916TEbEOWQnT8wK0UXj56gMMGBvW+m
y+N3YrjfcuacMGoEO9bwq9OPw7D1f0H6zmgCs8iLZxXcj2qOi4UPi4vS2JjJ
SXMhfNi8efRXzVAyW33a2FqAPP80xWAqDylrDlFKUjthpiUXVh1pgf1UEHPP
8XY80SlmDBQ+A7nH//s0niOmrfxCzfhzzFBONQamP8UvtnceWK5rw6sYtvYi
vyZURgWnGoTx0VCcmW5+i4Npg5DNofXtOPui+Ubj3jqwZliZ1xQ64CDPXJRr
/BhJAvuYMFYHonhlBcLUSozO+O8Od+jEiZfBjE8RFRgkV0iujnYi+hk76mZx
CZSvXG/NSezCRs/66XbqAwQGfNSvtuhG7ly5kZJjHrZbjdnyu7sx3hiUz5/L
hWl7WZUwRAAv9V5bM8Zd1JY9mu4i90DYrv1OwroNfcLDvbquB6vz90ljs9JR
L5toiT3QC+UCyU/a61OhEjvYZKYohO+p1POR965D7RChVM4SwvTQtp6xv6+i
sZWSRXLoQ5Iuw2Pu/iXM9aofWSrvw1xVqc1G42jYaZhMyONfIpxPj6g7F4lf
R7J4x0364RPW5D2adBZHQ94Pp/D7MXXuJsnrWDBW7RJXOzIHwP8a9UI0cQo+
v4Wui1YfBPcyZb6JEhNm7v27VpUOwnXw4Hd9vUB07FF8qOc8BO4nK+fCucM4
o+q7wWlsCFmesr9K4v2wP7R8WcqVYZx0oz9f4vQ7srVyfJ+uFOF8ADukLmgv
BJqhkw0NIiD7yFQpwx1ulh078kzEWG7ZQmUouGJMY6F3epgYrs2CgU+eTvCI
92clNokRd/mNSettB6zUkn1hqEkQRrFBIssOtTvfVU14SHCDU5BS4WkDBWe/
+x8zJZhdRxniG23BJrYud4NUAmLBbG9s8kYs5bDlgVQppr74j5Br1+Kl7jaV
rf5SWLWn/VOx2Byt8+DhyJLC+FqyWhrHCNl3ND7/LJKi9EDu5zI3KrxqWy9t
WkJgt75X6vb7KxBIKnw/vZOAitAmx5eqhxQ7e63iEAJzNbIVhmrL4Cg7eDX6
LoEIztrD1Z1a+GPo+GhcAwGBMlNsvVsDnhvkXbl9BM6cDB/p5KlAYPhlb9wb
AiWa890t3s8HnezRXPOWwHLZvsVPJhWQGMzwvigjYBGpsy8Bs7RB1YFjgg4C
T023Xl7YNE2bMVApOFBIoEVRIPKz/kCjFd9LCjxJIJX+oTv68zitj2pW1EIh
oL+K/i2h7Q3NiTy9vqNSCpK3nS7rEUEbkqu2WBtLobFDPcJFW0RrzFryp2ak
BPofeJKvm/tooQVrcpPyxZCm6xgxM7poGTEyN5KtCAlkI6lQuY1mWuSZZd48
iH8BKnxayA==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[0, 0, 1], 
               AbsoluteDashing[15]], 
              Line[CompressedData["
1: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
Zfvv4Q==
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0]], 
              Line[CompressedData["
1:eJwV0H080wkAx/F18ToiNSKtqzuvFkmWF0Id+27yylS6PF6SZK66pPKQOstF
F/MceVglzuLk8fLspHmRpx2LbITNfruklfXgdhfCq3LdH5/X+/+PCfuc5/Ev
SCSS2+f+tyLuD8pE8HvY5ZqXjvF/h/3BvFGRaA5rMngG1fY18PRl7w9Wz0K5
zpUfK6hFQMlRFkUxA0bOex21Rz1yhM0sReE7xLpzoizmGtDiIfhWxvwXgfE7
V4eUNkEzQ3d52KAaKT0x8VPBzbgf/YKUfG8a6S67bT+at+Ajm+NNefga6fri
Vur8A0RlGTK8VFN4GZB+48v+VtxLM1mvYfsCSgc5wSltg5OG6zLbikm0F+7+
Gp3tmE+weZ/sMYHGX7Yb5Tc8xCGWsVOtnwL7KUstP5V2YJjCKD4RLcPaCzv9
k253omPRxnZ+aQRlz3qXUjK7UBhcu6djagg/Dm2P3MftxsImknOqpRhCq+Ir
BTE9sJzLqva91g+7pOHzRyKFKNDJ5VGO9EJLSGs/FfInyLOVnyiN3WBlKN9U
BvWCseakESelA0Z+woKVfn3oX/az+678Ntwim3THHBShQodZLVS24LI13qlc
H8HB8DffVGkTWOZn2lzRj0rrroj7QfWoeNbhnGI3ANVByfmekBpwXu0quWv5
GBqZ5Sp+TyX4LacPu+kPoibN7MHixVII5IRzUfogQh/viSgZKAathKwr1RJD
so9nbljPh3SFV9zUVTHY9y9VFZrkw1I7R0v0SQzusStqq6obeGux6gonWgKG
dH2W08tslB3wXa5+JwHrusTqVHMm3F2qH246O4RNtBJfU/00uAy6t+t+/uY4
b1/TlJqIVurGO/ygYZATUl1PCq5CLN7mPyQbRkipjdmHxDj8ZfZIxfN6Ai+a
83Np1SX0eBfMyERPUNgc0JVnehHhuvHH03aP4KZLLzvrcCQGbu5S57SMgHrV
qJZtEYYZHypXZjUKH4WcFEw6DXdaQz397ijOXo/1X0w8gfrFe5MFlDFsDQ+9
pt/HxgZeZ9xA+hgsRm5mxHkEYngiYL5waQzxxkXKPMPDaFIYJ0nPSdEzkzRC
avJBriTwuYNCijhrA82Pep44kh+ZF7ZXhuzbodNrNQ+AnuxobdogQ9JYZL96
mgVa4+zC35RxlB3ascO21gU63nWRnpfHoVjpn/nDFibOvN37XSsxDq8VC6nx
ZxzRHtKlSHSQQy+i/EIn1x5FMS9Ub9LlCBDp8EURNpipHBFqEnLUhaRw6/Ss
4NA8x+uiEuCaXTydzNkKXhU39G0wAWN2mNL60WZkZW1h6d0iwOxsnbmhMoGW
TkJGVAeBsqK5No+gDZh80tttqiCwzTtqx7S2McL1Jjb3qwgcXZKkZhcYYKJc
0lD5jIB2iV3GMdUqaNPuMlK6CZwjb9PPlGsjYMursl+vERDkfsUUEBo4FRhd
HL6TwDoD9+uUNhI8qBUfWtvlYEQlGhs2LtI/8HLJbhvlEDAmT975ZpZuv7Fv
vm7vOP6ZlPisTFPTF77v2+foJIPy2FP2U56K7ue32iD29RiY1PI72ecn6Y/J
zIS1bqP4D9Q9QHE=
               "]]}, {
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 90]], 
               AbsoluteThickness[5], 
               Opacity[1], 
               RGBColor[1, 0, 0], 
               AbsoluteDashing[7.5]], 
              Line[CompressedData["
1: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
DQ==
               "]]}}}, {{}, {}}}, {
          DisplayFunction -> Identity, 
           ImagePadding -> {{155.0625, 0.5}, {127.62421875, 29.25}}, 
           DisplayFunction -> Identity, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
              HoldForm[
               Style[
               "\!\(\*SuperscriptBox[\(\[Eta]\), \
\(r\)]\)/\!\(\*SubsuperscriptBox[\(\[Eta]\), \(c\), \(r\)]\)", 45, Bold, 
                GrayLevel[0]]], None}, {
              HoldForm[
               Style[
               "J/\!\(\*SubsuperscriptBox[\(J\), \(max\), \(Wh\)]\)", 45, 
                Bold, 
                GrayLevel[0]]], None}}, 
           FrameTicks -> {{{{0, "0.0"}, {1, "1.00"}, {2, "2.00"}}, 
              None}, {{{-1, "-1.00"}, {9.3, "9.30"}}, None}}, FrameTicksStyle -> 
           Directive["Label", 
             GrayLevel[0], Bold, 45], GridLines -> {None, None}, 
           GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> 750, LabelStyle -> 
           Directive[Bold, 
             GrayLevel[0], 35], 
           Method -> {
            "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
             Automatic, 
             "DefaultGraphicsInteraction" -> {
              "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
               "Effects" -> {
                "Highlight" -> {"ratio" -> 2}, 
                 "HighlightPoint" -> {"ratio" -> 2}, 
                 "Droplines" -> {
                  "freeformCursorMode" -> True, 
                   "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
             "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
               Directive[
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.922526, 0.385626, 0.209179], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.528488, 0.470624, 0.701351], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.772079, 0.431554, 0.102387], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.363898, 0.618501, 0.782349], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[1, 0.75, 0], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.647624, 0.37816, 0.614037], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.571589, 0.586483, 0.], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.915, 0.3325, 0.2125], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[
                0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                AbsoluteThickness[1.6]], 
               Directive[
                RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
             "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
             "OptimizePlotMarkers" -> True, 
             "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}}, PlotLabel -> Style["(b)"], 
           PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{0, 0}, {0, 0}}, 
           Ticks -> {Automatic, Automatic}}], {1200., -243.3508830702711}, 
         ImageScaled[{0.5, 0.5}], {750, 463.5254915624211}, 
         BaseStyle -> {
          Graphics3DBoxOptions -> {SphericalRegion -> False}}]}}, {}}, 
     ImageSize -> 1500, {PlotRangePadding -> {6, 5}}, ImageSize -> 1500], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[5]], 
        Directive[
         RGBColor[1, 0, 0], 
         AbsoluteThickness[5]], 
        Directive[
         RGBColor[0, 0, 1], 
         AbsoluteThickness[5], 
         Dashing[{Small, Small}]], 
        Directive[
         RGBColor[1, 0, 0], 
         AbsoluteThickness[5], 
         Dashing[{Small, Small}]]}, {
        Style["Chiral(VP)", Bold, 
         GrayLevel[0], 35], 
        Style["Helical(VP)", Bold, 
         GrayLevel[0], 35], 
        Style["Chiral(VTP)", Bold, 
         GrayLevel[0], 35], 
        Style["Helical(VTP)", Bold, 
         GrayLevel[0], 35]}, LegendFunction -> (Framed[
         Style[#, 20]]& ), LegendLayout -> "Row"]], {0.5, 0.}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.913591595499312*^9, 3.913591608391818*^9}, {
   3.913591650019939*^9, 3.913591663802024*^9}, 3.913591712318137*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"6f17f6f7-c5f8-4ada-b965-02d43e2e06db"]
}, Open  ]]
}, Open  ]],

Cell["", "Title",ExpressionUUID->"899582bd-6fb3-453a-a4da-14920d46d869"]
},
WindowSize->{1381.5, 762.},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"13.2 for Linux x86 (64-bit) (January 31, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"36c13052-bf66-46e0-a07a-2c6fe798f5f8"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 574, 19, 113, "Title",ExpressionUUID->"23418549-6c9e-4878-857f-d4b9f3817912"],
Cell[CellGroupData[{
Cell[1179, 45, 21345, 612, 2235, "Input",ExpressionUUID->"77ffaeb3-8a34-4d8a-afc8-147f2f9a8f42"],
Cell[22527, 659, 324, 6, 33, "Output",ExpressionUUID->"ddb7d42d-7cc0-475d-bad7-f653a58a53fa"],
Cell[22854, 667, 287, 4, 33, "Output",ExpressionUUID->"ff9b382b-a74f-4657-8afa-34ed8e04d526"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23190, 677, 586, 19, 113, "Title",ExpressionUUID->"151cb62e-e9af-4e8f-b776-fbdea6a760ce"],
Cell[CellGroupData[{
Cell[23801, 700, 23372, 662, 2221, "Input",ExpressionUUID->"e106e667-1885-441f-810c-a81ba9346d02"],
Cell[CellGroupData[{
Cell[47198, 1366, 747, 15, 45, "Print",ExpressionUUID->"f4446db9-d854-4fb9-9446-631ed742990b"],
Cell[47948, 1383, 747, 15, 45, "Print",ExpressionUUID->"0ce9e71b-cf58-46e9-8c8c-df1fc0dcc010"],
Cell[48698, 1400, 758, 15, 45, "Print",ExpressionUUID->"97bb9539-6fcd-4c6c-aeeb-77bcd0340e9d"],
Cell[49459, 1417, 758, 15, 45, "Print",ExpressionUUID->"1eb8b6f7-b96d-4d90-906c-0433885e26db"],
Cell[50220, 1434, 758, 15, 45, "Print",ExpressionUUID->"13af2a81-0fc8-49a8-aef1-c82774727175"],
Cell[50981, 1451, 758, 15, 45, "Print",ExpressionUUID->"19d9b9f3-8675-4648-a7fb-943f6c344dc7"],
Cell[51742, 1468, 445, 10, 25, "Print",ExpressionUUID->"2578c962-e01f-4f36-ac2b-c44fdbefbfb0"],
Cell[52190, 1480, 445, 10, 25, "Print",ExpressionUUID->"80dc369c-6582-478d-b08a-f155534ab608"],
Cell[52638, 1492, 491, 11, 45, "Print",ExpressionUUID->"e2830f1f-e243-4cc6-a6fe-9c157d64b49f"],
Cell[53132, 1505, 493, 11, 45, "Print",ExpressionUUID->"4c0cc226-0ff0-49ed-abf5-2f25aaddf831"],
Cell[53628, 1518, 491, 11, 45, "Print",ExpressionUUID->"da08b233-63c7-4458-bce6-2d96d705a597"],
Cell[54122, 1531, 491, 11, 45, "Print",ExpressionUUID->"507a6cdb-b677-42d8-948f-90cbf38ad553"],
Cell[54616, 1544, 491, 11, 45, "Print",ExpressionUUID->"dc9181d7-f9bd-43b8-8aea-082457dcc82c"],
Cell[55110, 1557, 491, 11, 45, "Print",ExpressionUUID->"4c2eb0c5-cef0-456a-af26-0bd9bcdfa3f0"],
Cell[55604, 1570, 444, 10, 25, "Print",ExpressionUUID->"4207ce57-53a4-4fe3-88aa-031353577ebb"],
Cell[56051, 1582, 446, 10, 25, "Print",ExpressionUUID->"8b01a546-8296-495c-877d-be8aa9bb56f6"],
Cell[56500, 1594, 747, 15, 45, "Print",ExpressionUUID->"6a3634ba-a00b-48ce-85f6-4b27a1eefdf7"],
Cell[57250, 1611, 749, 15, 45, "Print",ExpressionUUID->"18ffcee8-a96d-4b1d-bd55-55c7d5ed857e"],
Cell[58002, 1628, 760, 15, 45, "Print",ExpressionUUID->"2773e158-dbbe-4014-bb77-cd5e3c0c9dbf"],
Cell[58765, 1645, 758, 15, 45, "Print",ExpressionUUID->"e910ca21-5c83-4392-87fe-b1e9e6f960ad"],
Cell[59526, 1662, 758, 15, 45, "Print",ExpressionUUID->"d7ea4a7f-8b8f-4836-b424-8f23f896b0d4"],
Cell[60287, 1679, 758, 15, 45, "Print",ExpressionUUID->"549c1995-173e-4bdf-af00-97636bcb6ea9"],
Cell[61048, 1696, 445, 10, 25, "Print",ExpressionUUID->"54b33267-c73a-470f-8a34-bfdb2eef48ba"],
Cell[61496, 1708, 443, 10, 25, "Print",ExpressionUUID->"2c0f66e8-6114-4a54-b449-4cae10a709ea"],
Cell[61942, 1720, 491, 11, 45, "Print",ExpressionUUID->"bde2b687-08b8-42b3-9ad7-5a37916b47fc"],
Cell[62436, 1733, 491, 11, 45, "Print",ExpressionUUID->"1f1f6ca7-3ccc-44fa-8e6f-2061505e9f37"],
Cell[62930, 1746, 491, 11, 45, "Print",ExpressionUUID->"66df9073-2591-4d77-b7bf-6cfb618e59a0"],
Cell[63424, 1759, 493, 11, 45, "Print",ExpressionUUID->"6de2eea3-be99-4a43-af7d-cfdb543b9405"],
Cell[63920, 1772, 491, 11, 45, "Print",ExpressionUUID->"c201e575-494b-475c-aef1-d860ea827199"],
Cell[64414, 1785, 491, 11, 45, "Print",ExpressionUUID->"5b7658ef-82c2-4ac3-816e-3026f6995570"],
Cell[64908, 1798, 446, 10, 25, "Print",ExpressionUUID->"38469875-1466-4f05-90b0-c3202f21295c"],
Cell[65357, 1810, 446, 10, 25, "Print",ExpressionUUID->"450fd966-ab4a-4d65-b4ea-e5299ad31abe"],
Cell[65806, 1822, 747, 15, 45, "Print",ExpressionUUID->"99f64762-c6c8-4d74-af00-ca15e4992b7b"],
Cell[66556, 1839, 760, 15, 45, "Print",ExpressionUUID->"5a432d5d-7a10-4c13-9a20-464765116926"],
Cell[67319, 1856, 758, 15, 45, "Print",ExpressionUUID->"96ee6626-1f0f-46b0-8005-33d445c9abd2"],
Cell[68080, 1873, 747, 15, 45, "Print",ExpressionUUID->"48115e11-0ac4-4a1e-9463-f0a903468f81"],
Cell[68830, 1890, 443, 10, 25, "Print",ExpressionUUID->"4c4951ef-d367-4c96-a8e6-39ea522d2e73"],
Cell[69276, 1902, 756, 15, 45, "Print",ExpressionUUID->"94741d27-5952-4463-9f7b-f323be41e0fa"],
Cell[70035, 1919, 491, 11, 45, "Print",ExpressionUUID->"15ceb828-ab44-4fae-8960-40755db2b041"],
Cell[70529, 1932, 758, 15, 45, "Print",ExpressionUUID->"8bed0475-b006-4089-9cf3-e84af93cf177"],
Cell[71290, 1949, 491, 11, 45, "Print",ExpressionUUID->"5a0cca9c-caa1-481f-8ecc-57d2e3477d66"],
Cell[71784, 1962, 443, 10, 25, "Print",ExpressionUUID->"29ca0888-62b3-4209-a7c8-3d66a0f4df82"],
Cell[72230, 1974, 493, 11, 45, "Print",ExpressionUUID->"971bd0fd-8bda-4705-8d7f-2c681e9e2010"],
Cell[72726, 1987, 491, 11, 45, "Print",ExpressionUUID->"67b8ee78-f7df-4b23-a564-bd4679314099"],
Cell[73220, 2000, 444, 10, 25, "Print",ExpressionUUID->"b8ced62b-227a-4917-b30d-7b898086b802"],
Cell[73667, 2012, 493, 11, 45, "Print",ExpressionUUID->"e6c2eecd-2586-4647-ae19-191b0c48dfb4"],
Cell[74163, 2025, 491, 11, 45, "Print",ExpressionUUID->"1d6ab8f1-f7cb-4151-9b90-273dc54ba238"],
Cell[74657, 2038, 446, 10, 25, "Print",ExpressionUUID->"2a739e45-de3f-4971-ade1-24df9ada7821"],
Cell[75106, 2050, 746, 15, 45, "Print",ExpressionUUID->"5d57f484-c28d-4515-bb8b-d27d68d65b21"],
Cell[75855, 2067, 760, 15, 45, "Print",ExpressionUUID->"cc142198-f54b-47fb-bd2f-9496d65fe8a6"],
Cell[76618, 2084, 757, 15, 45, "Print",ExpressionUUID->"8444adc0-07a3-4c9d-b5cd-2bf728a8b4d6"],
Cell[77378, 2101, 443, 10, 25, "Print",ExpressionUUID->"05e9e6fe-0c26-4786-a28f-8aa408436178"],
Cell[77824, 2113, 747, 15, 45, "Print",ExpressionUUID->"9f0bdc5a-7619-432f-b711-eb2e321ff40f"],
Cell[78574, 2130, 491, 11, 45, "Print",ExpressionUUID->"9c04c66b-312b-4cf1-b6a7-e5a26ddaaf7b"],
Cell[79068, 2143, 758, 15, 45, "Print",ExpressionUUID->"0241c389-25cc-4b33-ac78-29fd0f71cb57"],
Cell[79829, 2160, 493, 11, 45, "Print",ExpressionUUID->"eb7d3fa3-87ed-4dfb-ab12-8522f552e80c"],
Cell[80325, 2173, 760, 15, 45, "Print",ExpressionUUID->"02dfaf9d-91b1-4e1f-ba39-75c4ca0ad7ac"],
Cell[81088, 2190, 493, 11, 45, "Print",ExpressionUUID->"3d8795e9-d818-425e-961d-4c67c452c29a"],
Cell[81584, 2203, 443, 10, 25, "Print",ExpressionUUID->"079785b8-9e58-4ec5-b940-55a68f9e6f5a"],
Cell[82030, 2215, 446, 10, 25, "Print",ExpressionUUID->"cc51a3ac-fc91-43f1-9753-675e244287c2"],
Cell[82479, 2227, 491, 11, 45, "Print",ExpressionUUID->"afa0ef18-91ea-4566-81e2-a175071b0850"],
Cell[82973, 2240, 493, 11, 45, "Print",ExpressionUUID->"c1657453-c1ac-4d4e-bb04-2030d3ccd619"],
Cell[83469, 2253, 491, 11, 45, "Print",ExpressionUUID->"b6766c26-0e94-46a5-857f-245b7d0193d1"],
Cell[83963, 2266, 446, 10, 25, "Print",ExpressionUUID->"19cf1d66-2744-4f91-a6be-bec965841bf6"],
Cell[84412, 2278, 749, 15, 45, "Print",ExpressionUUID->"c7410554-58d5-4575-968a-ccb25101d41d"],
Cell[85164, 2295, 760, 15, 45, "Print",ExpressionUUID->"bbcad05e-03b6-4c48-9bae-0a88d6afa557"],
Cell[85927, 2312, 758, 15, 45, "Print",ExpressionUUID->"363cc33b-a1f7-4a25-a1f3-3cbcc6b3b857"],
Cell[86688, 2329, 443, 10, 25, "Print",ExpressionUUID->"317449d0-6a61-4240-8992-9bd65e630c6a"],
Cell[87134, 2341, 747, 15, 45, "Print",ExpressionUUID->"4b5ef509-5965-45ae-8202-ac4e947b7afc"],
Cell[87884, 2358, 491, 11, 45, "Print",ExpressionUUID->"198265e2-b4fe-44a4-b815-6f1df414341c"],
Cell[88378, 2371, 757, 15, 45, "Print",ExpressionUUID->"e3c54a32-7293-4b1b-8b85-6b082fedb54c"],
Cell[89138, 2388, 491, 11, 45, "Print",ExpressionUUID->"f0ae9177-a1f0-4fa4-8a37-a2e3f87223bc"],
Cell[89632, 2401, 758, 15, 45, "Print",ExpressionUUID->"c5934749-ee9b-4bc7-836a-7e3ee3510289"],
Cell[90393, 2418, 491, 11, 45, "Print",ExpressionUUID->"27c67ae7-2675-4b36-8919-e33260ecf246"],
Cell[90887, 2431, 443, 10, 25, "Print",ExpressionUUID->"2a09f1f0-d71b-48bc-be7b-5bc605ff2c46"],
Cell[91333, 2443, 444, 10, 25, "Print",ExpressionUUID->"92d8d5f9-fb34-4fdd-96e0-b6e439eb51eb"],
Cell[91780, 2455, 491, 11, 45, "Print",ExpressionUUID->"2e301d7c-3e4a-4f3c-b679-d33932871180"],
Cell[92274, 2468, 493, 11, 45, "Print",ExpressionUUID->"a60418d3-2b45-4e18-956a-bb2dc2167059"],
Cell[92770, 2481, 491, 11, 45, "Print",ExpressionUUID->"68576f63-9277-47d5-a1a9-b36ba662bfc9"],
Cell[93264, 2494, 446, 10, 25, "Print",ExpressionUUID->"2e802233-48dc-458d-ab2a-b121841c2069"]
}, Open  ]],
Cell[93725, 2507, 399, 7, 33, "Output",ExpressionUUID->"d5c63d61-f381-46f6-85ae-db3dfd950831"],
Cell[94127, 2516, 361, 5, 33, "Output",ExpressionUUID->"0e07272b-882f-44dc-8188-906025f0da3e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94537, 2527, 531, 18, 113, "Title",ExpressionUUID->"59b342ff-d4ef-44e9-97d0-801387c29d4e"],
Cell[CellGroupData[{
Cell[95093, 2549, 28992, 784, 2515, "Input",ExpressionUUID->"e7603db1-8f2c-4adc-8e53-98390ebb75b3"],
Cell[124088, 3335, 372, 6, 33, "Output",ExpressionUUID->"31f100f6-a2c9-419d-86d5-6bf08dc7fd8b"],
Cell[124463, 3343, 334, 4, 33, "Output",ExpressionUUID->"5c7ddc76-9ea1-4283-8e66-4d54c8427291"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124846, 3353, 539, 18, 113, "Title",ExpressionUUID->"cf77c7a3-5abd-474b-bdc8-482ab3eb5628"],
Cell[CellGroupData[{
Cell[125410, 3375, 30963, 841, 2543, "Input",ExpressionUUID->"7060e226-f1b0-4d41-a9d7-c337dfc834d7"],
Cell[CellGroupData[{
Cell[156398, 4220, 747, 15, 45, "Print",ExpressionUUID->"fc299821-a18f-484a-8882-a4708356ccd9"],
Cell[157148, 4237, 749, 15, 45, "Print",ExpressionUUID->"0f514667-f880-4596-8b4f-fb8b788ba895"],
Cell[157900, 4254, 755, 15, 45, "Print",ExpressionUUID->"39a1059b-8cb5-442a-a20e-e7c15844e078"],
Cell[158658, 4271, 757, 15, 45, "Print",ExpressionUUID->"802495b6-d78f-4248-be8a-dd971b6b24ff"],
Cell[159418, 4288, 758, 15, 45, "Print",ExpressionUUID->"14a92e86-6f26-48bf-960c-8f14f009d33a"],
Cell[160179, 4305, 760, 15, 45, "Print",ExpressionUUID->"2d192eaf-5b1d-4dc0-b8f2-bc8d88a4af40"],
Cell[160942, 4322, 443, 10, 25, "Print",ExpressionUUID->"74d8d4a4-0bfe-42b1-baa1-a05b5ffbb399"],
Cell[161388, 4334, 443, 10, 25, "Print",ExpressionUUID->"dc37e312-eda9-4005-bfaf-34f99f941257"],
Cell[161834, 4346, 749, 15, 45, "Print",ExpressionUUID->"b96645e1-8bce-4882-b830-d12983974258"],
Cell[162586, 4363, 747, 15, 45, "Print",ExpressionUUID->"dcf06e58-82bd-4919-90b3-4d5f564cb2d5"],
Cell[163336, 4380, 754, 15, 45, "Print",ExpressionUUID->"223d441a-faf3-42be-b284-5f9775418eb7"],
Cell[164093, 4397, 757, 15, 45, "Print",ExpressionUUID->"2e0c9d04-fb97-4fd1-ae7f-8f4c7d1b6c63"],
Cell[164853, 4414, 758, 15, 45, "Print",ExpressionUUID->"d0efab93-60df-4409-8b08-ce7b8f99f078"],
Cell[165614, 4431, 758, 15, 45, "Print",ExpressionUUID->"75d55d5a-f6fa-45f9-9f48-2f3c5fafae1c"],
Cell[166375, 4448, 443, 10, 25, "Print",ExpressionUUID->"7280f40a-d066-47ea-a3e4-4ca89eacd8d0"],
Cell[166821, 4460, 443, 10, 25, "Print",ExpressionUUID->"684d5d8f-a1d3-46e6-976b-998ffae08732"],
Cell[167267, 4472, 747, 15, 45, "Print",ExpressionUUID->"0da6d3a9-b6dc-4bba-a350-76448a962299"],
Cell[168017, 4489, 755, 15, 45, "Print",ExpressionUUID->"1ef8a292-7112-4920-9e55-b0023227be20"],
Cell[168775, 4506, 758, 15, 45, "Print",ExpressionUUID->"2d3abf55-38ae-4193-a5b6-4154a07debc6"],
Cell[169536, 4523, 443, 10, 25, "Print",ExpressionUUID->"7b07f1ac-8922-41d2-a0f8-20831b649fdf"],
Cell[169982, 4535, 749, 15, 45, "Print",ExpressionUUID->"b2a4911b-e9e0-40be-90ed-1530206b13af"],
Cell[170734, 4552, 755, 15, 45, "Print",ExpressionUUID->"7765ef70-39c0-40ee-941f-b8c853594156"],
Cell[171492, 4569, 758, 15, 45, "Print",ExpressionUUID->"7e1f5922-1d38-4512-925e-63ecddcf54ac"],
Cell[172253, 4586, 443, 10, 25, "Print",ExpressionUUID->"373102d9-6986-4974-924e-b65bb4f6fb8b"],
Cell[172699, 4598, 747, 15, 45, "Print",ExpressionUUID->"c9590a23-86c7-4588-b96f-8f26ad058c75"],
Cell[173449, 4615, 755, 15, 45, "Print",ExpressionUUID->"b0950e6c-c0ef-4edf-91f2-d2c32a0bfb9c"],
Cell[174207, 4632, 758, 15, 45, "Print",ExpressionUUID->"e81f7517-5b6c-4526-a261-782f202f3530"],
Cell[174968, 4649, 443, 10, 25, "Print",ExpressionUUID->"211e730c-401e-439a-9e22-7bab5be0760f"],
Cell[175414, 4661, 749, 15, 45, "Print",ExpressionUUID->"37abfab9-8d90-48ef-9d8a-9dc00f75e3a6"],
Cell[176166, 4678, 755, 15, 45, "Print",ExpressionUUID->"3026f64c-32d6-4f2d-b01a-207b835cc6ee"],
Cell[176924, 4695, 757, 15, 45, "Print",ExpressionUUID->"76ff1d92-ceab-44ad-873b-71d9a5c81f1c"],
Cell[177684, 4712, 443, 10, 25, "Print",ExpressionUUID->"f3d0bd30-9c14-4795-b8bb-b66044468f7c"],
Cell[178130, 4724, 747, 15, 45, "Print",ExpressionUUID->"5f5688d3-fb6e-47d6-a628-dcbafe1e79a3"],
Cell[178880, 4741, 755, 15, 45, "Print",ExpressionUUID->"1e894d5b-5379-413f-9d20-b9a295057d5c"],
Cell[179638, 4758, 760, 15, 45, "Print",ExpressionUUID->"3290f5f0-b076-4dc2-82a4-2be4f7be2375"],
Cell[180401, 4775, 445, 10, 25, "Print",ExpressionUUID->"53baad43-e204-4442-b9b7-5449d8be1b2c"],
Cell[180849, 4787, 747, 15, 45, "Print",ExpressionUUID->"9116df2f-8671-4c7a-88a3-371d95a5081a"],
Cell[181599, 4804, 755, 15, 45, "Print",ExpressionUUID->"db0ca85a-f7a9-40b2-9332-e6e75e0907d6"],
Cell[182357, 4821, 760, 15, 45, "Print",ExpressionUUID->"5892c67f-3b92-4f21-8f5f-f6295e1d6f77"],
Cell[183120, 4838, 443, 10, 25, "Print",ExpressionUUID->"96a403e6-a5e2-435d-b635-eeac4c009815"]
}, Open  ]],
Cell[183578, 4851, 255, 5, 33, "Output",ExpressionUUID->"ac5b5ead-c133-43e1-bb6d-f0b4ae418b00"],
Cell[183836, 4858, 215, 3, 33, "Output",ExpressionUUID->"3517f685-8573-4c8d-bd0f-6e9570c2eee9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184088, 4866, 4619, 125, 236, "Input",ExpressionUUID->"33463118-f26d-4417-8683-a1b290c73d45"],
Cell[188710, 4993, 550, 12, 28, "Message",ExpressionUUID->"02af5c70-25e9-40c1-8000-4ce8bf9c85b2"],
Cell[189263, 5007, 25171, 460, 567, "Output",ExpressionUUID->"a83f42ab-a02a-4f9c-9ec9-a2930d5e06b2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[214483, 5473, 534, 18, 113, "Title",ExpressionUUID->"04cbdae3-46b2-4977-874f-2e214fdbdb7c"],
Cell[CellGroupData[{
Cell[215042, 5495, 7664, 213, 994, "Input",ExpressionUUID->"b4d4069a-8829-4ffa-88d0-e51367f34139"],
Cell[CellGroupData[{
Cell[222731, 5712, 470, 10, 45, "Print",ExpressionUUID->"8b7bb6b1-57de-48db-bfed-848d1fe270ab"],
Cell[223204, 5724, 468, 10, 45, "Print",ExpressionUUID->"3b6bb7d0-016c-472b-a804-9e8be1cfbd0b"],
Cell[223675, 5736, 1024, 18, 105, "Print",ExpressionUUID->"fa49471d-a644-4f1b-93bb-9abc8c43bf9c"],
Cell[224702, 5756, 1024, 18, 105, "Print",ExpressionUUID->"4c217b03-79fb-46e9-946a-85a31e0a52fb"],
Cell[225729, 5776, 468, 10, 45, "Print",ExpressionUUID->"0457d648-16cd-4c27-953f-a4af379787f2"],
Cell[226200, 5788, 470, 10, 45, "Print",ExpressionUUID->"24aff8ff-2a68-44d0-b446-00ce2a425c42"],
Cell[226673, 5800, 1024, 18, 105, "Print",ExpressionUUID->"7057492a-77ab-4824-9352-9896babe23e5"],
Cell[227700, 5820, 1022, 18, 105, "Print",ExpressionUUID->"6b0d9694-a811-4362-b037-0398d2806fe6"],
Cell[228725, 5840, 468, 10, 45, "Print",ExpressionUUID->"8665f341-060e-4c75-9dc4-fe1ee0ec6cd4"],
Cell[229196, 5852, 468, 10, 45, "Print",ExpressionUUID->"c77a10f1-d357-41b4-89e9-153d9b63d101"],
Cell[229667, 5864, 445, 10, 25, "Print",ExpressionUUID->"a0e8f4a9-769e-416c-b075-7310f02a294f"],
Cell[230115, 5876, 445, 10, 25, "Print",ExpressionUUID->"f7cf9af8-ff0a-4ed6-8178-c9807a8d925a"],
Cell[230563, 5888, 1033, 18, 105, "Print",ExpressionUUID->"2f75b546-038d-49d8-adde-24dbaca6c59e"],
Cell[231599, 5908, 1034, 18, 105, "Print",ExpressionUUID->"4dc47b10-0886-4245-bc40-97925ee21446"],
Cell[232636, 5928, 444, 10, 25, "Print",ExpressionUUID->"e68d398e-d3f8-4fc4-97c5-064a72982e92"],
Cell[233083, 5940, 443, 10, 25, "Print",ExpressionUUID->"356f9a6e-ad6c-42d1-b688-0c5c631c6d1c"],
Cell[233529, 5952, 470, 10, 45, "Print",ExpressionUUID->"df6305c4-7978-4502-aba6-f7adc7b27cea"],
Cell[234002, 5964, 1023, 18, 105, "Print",ExpressionUUID->"8f59ea2e-0918-4ee0-b877-5f332f72df01"],
Cell[235028, 5984, 470, 10, 45, "Print",ExpressionUUID->"d5078681-53ef-4b8f-b02a-3e222941741c"],
Cell[235501, 5996, 1023, 18, 105, "Print",ExpressionUUID->"4a9dd551-a2bc-4d7d-aa32-94d9b2a6d755"],
Cell[236527, 6016, 468, 10, 45, "Print",ExpressionUUID->"1e004088-4266-47ba-b342-82e725dffd9d"],
Cell[236998, 6028, 447, 10, 25, "Print",ExpressionUUID->"142e3cf5-7d32-42ae-bf88-36e82f95f446"],
Cell[237448, 6040, 1024, 18, 105, "Print",ExpressionUUID->"e423e607-3b33-4b21-982d-455938ab8daa"],
Cell[238475, 6060, 444, 10, 25, "Print",ExpressionUUID->"29156e93-9fe6-43c7-bd4a-0bb8c01b5d95"],
Cell[238922, 6072, 468, 10, 45, "Print",ExpressionUUID->"d0c8d491-417e-4506-b6c3-1b6f89e85433"],
Cell[239393, 6084, 1022, 18, 105, "Print",ExpressionUUID->"6496bce4-eec4-4c57-8913-5f932ce231b2"],
Cell[240418, 6104, 468, 10, 45, "Print",ExpressionUUID->"04670668-bb96-4b33-95c7-80f6f89328a5"],
Cell[240889, 6116, 1022, 18, 105, "Print",ExpressionUUID->"455f2c10-798b-40c3-87da-0e32bd233312"],
Cell[241914, 6136, 470, 10, 45, "Print",ExpressionUUID->"9919783f-d17c-4283-b950-49248b6a1eba"],
Cell[242387, 6148, 445, 10, 25, "Print",ExpressionUUID->"442c72f7-face-4593-8137-b9e1ee004cbb"],
Cell[242835, 6160, 1023, 18, 105, "Print",ExpressionUUID->"a033a2e6-2531-4ad0-ba15-0f9a353662da"],
Cell[243861, 6180, 444, 10, 25, "Print",ExpressionUUID->"aee20cf8-5512-4703-afb5-66cb90bb7143"],
Cell[244308, 6192, 468, 10, 45, "Print",ExpressionUUID->"b6148a56-35ff-4f38-a2f7-ff026b8c61d7"],
Cell[244779, 6204, 1023, 18, 105, "Print",ExpressionUUID->"5dc318b8-4b5d-4821-9093-5f6d45299db0"],
Cell[245805, 6224, 468, 10, 45, "Print",ExpressionUUID->"9bc88b70-11f3-4593-97c2-b39c8ccd8787"],
Cell[246276, 6236, 1023, 18, 105, "Print",ExpressionUUID->"385a4985-9e6c-409a-9d42-7162e9b98df4"],
Cell[247302, 6256, 468, 10, 45, "Print",ExpressionUUID->"d4d40030-de8d-405b-8d2d-0943d89b43b7"],
Cell[247773, 6268, 447, 10, 25, "Print",ExpressionUUID->"05ad6eb4-5b0e-44e2-bdc8-eec676236d5d"],
Cell[248223, 6280, 1035, 18, 105, "Print",ExpressionUUID->"d30dc24c-6250-417b-b172-e8a0440f1129"],
Cell[249261, 6300, 444, 10, 25, "Print",ExpressionUUID->"6c0d9fa9-f836-4267-80c1-401d2e655063"],
Cell[249708, 6312, 470, 10, 45, "Print",ExpressionUUID->"47e6ab4a-66cb-47ba-b37f-29f82a6b6ea2"],
Cell[250181, 6324, 1025, 18, 105, "Print",ExpressionUUID->"6914b490-b0b4-46c1-be8e-74d01e64a7bc"],
Cell[251209, 6344, 470, 10, 45, "Print",ExpressionUUID->"cb834396-0323-49a4-855f-1ea2db91609e"],
Cell[251682, 6356, 1023, 18, 105, "Print",ExpressionUUID->"e4b34f8b-e0d3-4c55-9443-ff4cd464d50d"],
Cell[252708, 6376, 470, 10, 45, "Print",ExpressionUUID->"a37295bb-8452-4110-983a-08c01696f6e6"],
Cell[253181, 6388, 445, 10, 25, "Print",ExpressionUUID->"81848180-9b8b-4850-9561-a00939e43fb8"],
Cell[253629, 6400, 1023, 18, 105, "Print",ExpressionUUID->"ab5aac07-b507-4bcc-99e4-c9437ab45d79"],
Cell[254655, 6420, 446, 10, 25, "Print",ExpressionUUID->"ecaab8dd-458d-44f5-ba09-57fdbfce1250"],
Cell[255104, 6432, 468, 10, 45, "Print",ExpressionUUID->"8f3aad60-ade3-426f-8712-250bb82937c1"],
Cell[255575, 6444, 1022, 18, 105, "Print",ExpressionUUID->"8b27e79a-7e8a-4959-91e3-63d4a80390c5"],
Cell[256600, 6464, 468, 10, 45, "Print",ExpressionUUID->"4d79f557-f60c-40ee-8586-563938594cf6"],
Cell[257071, 6476, 1023, 18, 105, "Print",ExpressionUUID->"e2459064-51dd-4f1d-8cf2-6c5d5786ee33"],
Cell[258097, 6496, 470, 10, 45, "Print",ExpressionUUID->"02c63dd5-afc5-431b-ab54-aafacd2bbecf"],
Cell[258570, 6508, 445, 10, 25, "Print",ExpressionUUID->"26b66e8e-3e85-474f-b669-76621e13f87b"],
Cell[259018, 6520, 1023, 18, 105, "Print",ExpressionUUID->"4e6decb1-7f88-4312-84a0-bb86d5e5f48f"],
Cell[260044, 6540, 444, 10, 25, "Print",ExpressionUUID->"0ba86a0c-e225-40a9-b553-21dec2a43e80"],
Cell[260491, 6552, 468, 10, 45, "Print",ExpressionUUID->"43a024c3-da73-4f25-b4bc-41f81b2445fa"],
Cell[260962, 6564, 1024, 18, 105, "Print",ExpressionUUID->"ccdb8925-45de-4e22-b591-bd6b43717a2e"],
Cell[261989, 6584, 470, 10, 45, "Print",ExpressionUUID->"4501bc7d-b53e-4965-b200-9a2bbcb71fc3"],
Cell[262462, 6596, 1023, 18, 105, "Print",ExpressionUUID->"c07d906d-bb6c-4178-8b8a-0ccc5451af7d"],
Cell[263488, 6616, 470, 10, 45, "Print",ExpressionUUID->"42aa6597-6dad-4d66-aba6-a719d00c39a1"],
Cell[263961, 6628, 447, 10, 25, "Print",ExpressionUUID->"4244b40a-9e20-4e11-bf49-354b6e64957d"],
Cell[264411, 6640, 1024, 18, 105, "Print",ExpressionUUID->"bb7b5c28-f14a-4133-9253-37d3d0ae8219"],
Cell[265438, 6660, 443, 10, 25, "Print",ExpressionUUID->"7a981d76-8a5f-465e-9b9d-067ce604fdf7"],
Cell[265884, 6672, 468, 10, 45, "Print",ExpressionUUID->"529d03c6-5106-4973-840d-4787505c5f6f"],
Cell[266355, 6684, 1024, 18, 105, "Print",ExpressionUUID->"a9a20ad5-ed47-4e8f-b9a5-c83826fb7bbb"],
Cell[267382, 6704, 468, 10, 45, "Print",ExpressionUUID->"998b0c8f-001f-491b-9d2e-08e0f9d029d5"],
Cell[267853, 6716, 1033, 18, 105, "Print",ExpressionUUID->"4e604e87-7d90-4cb2-a46d-ec4298049ebd"],
Cell[268889, 6736, 468, 10, 45, "Print",ExpressionUUID->"6756906e-04f4-4482-a96e-1c0e7a300c4d"],
Cell[269360, 6748, 445, 10, 25, "Print",ExpressionUUID->"2c7f9be8-8ab5-4061-807d-ed6ad7a2ddf5"],
Cell[269808, 6760, 1022, 18, 105, "Print",ExpressionUUID->"737a87b9-3e51-473f-9550-5fefc663c8c6"],
Cell[270833, 6780, 444, 10, 25, "Print",ExpressionUUID->"ba803974-68b8-4a4b-b464-a4ec2ca0b728"],
Cell[271280, 6792, 468, 10, 45, "Print",ExpressionUUID->"c97f309c-4117-4d60-954a-09b7134a0c40"],
Cell[271751, 6804, 1035, 18, 105, "Print",ExpressionUUID->"ab398725-3a13-48c9-8ff2-edc67fea2d6d"],
Cell[272789, 6824, 467, 10, 45, "Print",ExpressionUUID->"0b7c4a44-aa95-4fa1-b203-44af25fa64b5"],
Cell[273259, 6836, 1023, 18, 105, "Print",ExpressionUUID->"c9a3fcd6-4cc2-49f7-8a26-16473b2b3506"],
Cell[274285, 6856, 470, 10, 45, "Print",ExpressionUUID->"8e8a328c-abfa-436c-b191-07b67e1c9bd9"],
Cell[274758, 6868, 445, 10, 25, "Print",ExpressionUUID->"55ee21ec-0a1f-4b47-9217-7b77f8207875"],
Cell[275206, 6880, 1031, 18, 105, "Print",ExpressionUUID->"9a229687-741f-454b-8172-11c86fd2c4e1"],
Cell[276240, 6900, 446, 10, 25, "Print",ExpressionUUID->"7a4df777-179c-4f41-8fa3-8d2529e4be73"],
Cell[276689, 6912, 468, 10, 45, "Print",ExpressionUUID->"56e41b5f-3dbf-43fb-bb41-22a8fea679ae"],
Cell[277160, 6924, 1035, 18, 105, "Print",ExpressionUUID->"f64847a2-9f34-45da-9a7f-c186cb71ab57"],
Cell[278198, 6944, 470, 10, 45, "Print",ExpressionUUID->"e43e6ec6-1253-4107-8e48-c0521c8d842e"],
Cell[278671, 6956, 1024, 18, 105, "Print",ExpressionUUID->"bddaef7f-9e91-44c0-997b-ad69527c4cfd"],
Cell[279698, 6976, 468, 10, 45, "Print",ExpressionUUID->"6f90db54-ae2d-48e5-9b26-974bee3fafb2"],
Cell[280169, 6988, 445, 10, 25, "Print",ExpressionUUID->"7a0a52fb-c818-4e70-9230-6b91ce85edf7"],
Cell[280617, 7000, 1024, 18, 105, "Print",ExpressionUUID->"d25e7757-16fe-4a60-a71e-57e1294bca64"],
Cell[281644, 7020, 444, 10, 25, "Print",ExpressionUUID->"75b03b2e-16e1-4ea9-a8bf-a7b401f4b133"],
Cell[282091, 7032, 470, 10, 45, "Print",ExpressionUUID->"b1c8ebd9-9ba4-4496-a54a-8f6241e4e4ef"],
Cell[282564, 7044, 468, 10, 45, "Print",ExpressionUUID->"f1732914-1959-4363-baf3-317e78063935"],
Cell[283035, 7056, 468, 10, 45, "Print",ExpressionUUID->"25c497c5-be4c-4a31-acca-def65b4cccef"],
Cell[283506, 7068, 445, 10, 25, "Print",ExpressionUUID->"861e86e1-c32e-4efc-8624-96b489222089"],
Cell[283954, 7080, 470, 10, 45, "Print",ExpressionUUID->"3cecb013-e438-468d-aeb4-3f8ff1af97db"],
Cell[284427, 7092, 468, 10, 45, "Print",ExpressionUUID->"2263dbfd-896c-4eff-a5e6-e440a6cc2c5f"],
Cell[284898, 7104, 468, 10, 45, "Print",ExpressionUUID->"e9f1dfb6-f467-4743-ab39-702fb758af3d"],
Cell[285369, 7116, 468, 10, 45, "Print",ExpressionUUID->"58bce6bc-fe40-47f5-9cce-f53787504098"],
Cell[285840, 7128, 468, 10, 45, "Print",ExpressionUUID->"aed36fab-f54b-45c2-8de4-dc80f23938b1"],
Cell[286311, 7140, 444, 10, 25, "Print",ExpressionUUID->"e9f4ae6d-ac29-4fb4-834e-16552319a7fe"],
Cell[286758, 7152, 468, 10, 45, "Print",ExpressionUUID->"88e57b92-1720-4a1b-8629-c72296a91870"],
Cell[287229, 7164, 445, 10, 25, "Print",ExpressionUUID->"078b0e2b-756e-47f0-82f7-9ee758b0ef77"],
Cell[287677, 7176, 468, 10, 45, "Print",ExpressionUUID->"afa11737-0d88-45f0-8aa2-62d839a02455"],
Cell[288148, 7188, 470, 10, 45, "Print",ExpressionUUID->"219377d4-95e8-4d3f-989c-677b5779c8da"],
Cell[288621, 7200, 468, 10, 45, "Print",ExpressionUUID->"c357057d-e19d-49a9-9201-f0d08e1437c8"],
Cell[289092, 7212, 447, 10, 25, "Print",ExpressionUUID->"f665ba7b-8f5e-414e-8f12-d525e2fd451e"],
Cell[289542, 7224, 468, 10, 45, "Print",ExpressionUUID->"ee176387-36ec-4605-b5e8-39977de47e68"],
Cell[290013, 7236, 468, 10, 45, "Print",ExpressionUUID->"27ebf8be-91a6-4a18-8296-bbc83e0df285"],
Cell[290484, 7248, 468, 10, 45, "Print",ExpressionUUID->"9276637b-8588-49c1-b392-9cebef37fb1b"],
Cell[290955, 7260, 445, 10, 25, "Print",ExpressionUUID->"027e452e-8bf9-4084-9a94-b1992d34e536"]
}, Open  ]],
Cell[291415, 7273, 322, 6, 33, "Output",ExpressionUUID->"0b63e70a-7504-46bd-afa0-86526ff29ab8"],
Cell[291740, 7281, 282, 4, 33, "Output",ExpressionUUID->"cac04937-284c-49e2-91aa-e009b16c5075"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[292071, 7291, 543, 18, 113, "Title",ExpressionUUID->"a85ae2e3-6212-43a2-a223-9e16b290e8a1"],
Cell[CellGroupData[{
Cell[292639, 7313, 9649, 260, 1030, "Input",ExpressionUUID->"6b35f932-2c98-46d8-b50d-10e4854d0872"],
Cell[CellGroupData[{
Cell[302313, 7577, 470, 10, 45, "Print",ExpressionUUID->"23548355-424e-45a4-8587-cde7f02a4e61"],
Cell[302786, 7589, 1033, 18, 105, "Print",ExpressionUUID->"7f59710b-f186-47cc-90dc-e1900fddf849"],
Cell[303822, 7609, 470, 10, 45, "Print",ExpressionUUID->"8cc8499a-2c1b-4683-8652-dc846bda9938"],
Cell[304295, 7621, 1033, 18, 105, "Print",ExpressionUUID->"a75ae0c0-6b90-4d06-835d-85cf8fdcf3dd"],
Cell[305331, 7641, 468, 10, 45, "Print",ExpressionUUID->"d1f14e8f-49de-4205-ab19-0582da0c1f75"],
Cell[305802, 7653, 468, 10, 45, "Print",ExpressionUUID->"6ede4080-9274-4944-a897-f46062efe82d"],
Cell[306273, 7665, 447, 10, 25, "Print",ExpressionUUID->"533b978a-32af-45a8-9f89-60ff79b460a4"],
Cell[306723, 7677, 1022, 18, 105, "Print",ExpressionUUID->"8b5e2122-8af4-4304-87a4-0d05b48284aa"],
Cell[307748, 7697, 1023, 18, 105, "Print",ExpressionUUID->"661a3137-849c-4395-9d8a-4003685e2e34"],
Cell[308774, 7717, 468, 10, 45, "Print",ExpressionUUID->"0ac2eb88-9623-427d-b7eb-7b74b916256a"],
Cell[309245, 7729, 446, 10, 25, "Print",ExpressionUUID->"177e86ef-9724-41d3-aae2-e079995ad071"],
Cell[309694, 7741, 1022, 18, 105, "Print",ExpressionUUID->"1ca81b08-9f45-4045-a571-6bc1b7e53e85"],
Cell[310719, 7761, 468, 10, 45, "Print",ExpressionUUID->"81185288-f7d5-476f-9e8a-1cd483284fc4"],
Cell[311190, 7773, 445, 10, 25, "Print",ExpressionUUID->"2a0ebf4c-9bae-487e-a7a6-68da333d8f6a"],
Cell[311638, 7785, 1022, 18, 105, "Print",ExpressionUUID->"d9f44611-c929-446b-b550-a1a498d2d555"],
Cell[312663, 7805, 443, 10, 25, "Print",ExpressionUUID->"8c214d5e-e343-4434-a3c6-f19869d4b816"],
Cell[313109, 7817, 468, 10, 45, "Print",ExpressionUUID->"d4315901-4a31-44bb-8ff3-b96540af0794"],
Cell[313580, 7829, 1032, 18, 105, "Print",ExpressionUUID->"ceb2c506-f9ab-4198-b1b2-35e0ee40a8d2"],
Cell[314615, 7849, 468, 10, 45, "Print",ExpressionUUID->"3eea097b-46e0-463b-82e8-26310e1c9d44"],
Cell[315086, 7861, 1024, 18, 105, "Print",ExpressionUUID->"f5aaf5fc-e321-4c73-b21c-b6fff527835b"],
Cell[316113, 7881, 468, 10, 45, "Print",ExpressionUUID->"1c9d3152-604b-4acf-9d15-3661e70ffc8c"],
Cell[316584, 7893, 445, 10, 25, "Print",ExpressionUUID->"4d00a1aa-c075-4363-987d-ddc2c784e2ff"],
Cell[317032, 7905, 1023, 18, 105, "Print",ExpressionUUID->"81c9a4fa-fc23-46cb-8d62-bb50f9cec172"],
Cell[318058, 7925, 444, 10, 25, "Print",ExpressionUUID->"10c437d8-2c46-4344-8fca-e5655b9feb13"],
Cell[318505, 7937, 470, 10, 45, "Print",ExpressionUUID->"23d52d10-410b-4854-8500-7314c5042d8d"],
Cell[318978, 7949, 1022, 18, 105, "Print",ExpressionUUID->"1a79ba20-26cc-46c0-b581-566ea5f921ae"],
Cell[320003, 7969, 468, 10, 45, "Print",ExpressionUUID->"34473c55-eafe-4b31-8192-8227fb71da66"],
Cell[320474, 7981, 1023, 18, 105, "Print",ExpressionUUID->"7c3ccba0-b708-46d5-b046-3612565414c8"],
Cell[321500, 8001, 468, 10, 45, "Print",ExpressionUUID->"8a71e051-51e7-4cb1-9236-6c426c440b66"],
Cell[321971, 8013, 447, 10, 25, "Print",ExpressionUUID->"478bd31f-8785-4c1b-9e7f-484dd8524fe9"],
Cell[322421, 8025, 1036, 18, 105, "Print",ExpressionUUID->"c84058e5-36e3-4316-9410-200ac6eab9b8"],
Cell[323460, 8045, 444, 10, 25, "Print",ExpressionUUID->"decb7126-050c-4d92-9408-527eac18ac16"],
Cell[323907, 8057, 467, 10, 45, "Print",ExpressionUUID->"588c54b6-732b-4adb-9d95-829cc0261573"],
Cell[324377, 8069, 1024, 18, 105, "Print",ExpressionUUID->"4a407482-0b0d-4e83-a963-bd80c0a2ae27"],
Cell[325404, 8089, 468, 10, 45, "Print",ExpressionUUID->"14d41f7b-fc3f-4f5d-81c4-093a2a58de41"],
Cell[325875, 8101, 1021, 18, 105, "Print",ExpressionUUID->"54a422b3-fee1-4508-a300-b0a2fecff7e7"],
Cell[326899, 8121, 470, 10, 45, "Print",ExpressionUUID->"81159c16-f622-4ebd-80b7-6a9b21e8cfc7"],
Cell[327372, 8133, 447, 10, 25, "Print",ExpressionUUID->"8dcb6c8d-a067-4710-ab4d-59648c9f16e3"],
Cell[327822, 8145, 1025, 18, 105, "Print",ExpressionUUID->"23d2bd01-4e27-4209-85b1-446c157ca9eb"],
Cell[328850, 8165, 444, 10, 25, "Print",ExpressionUUID->"44439c6b-169b-44c5-9d9f-d0ed955e3a6c"],
Cell[329297, 8177, 468, 10, 45, "Print",ExpressionUUID->"d0620e25-8867-48fc-af18-91ff9aeadadd"],
Cell[329768, 8189, 1036, 18, 105, "Print",ExpressionUUID->"79b77052-1d36-483b-8322-d9d101ac6cdb"],
Cell[330807, 8209, 468, 10, 45, "Print",ExpressionUUID->"ce29ee04-5b55-4cd5-9f58-7e2e51f75f1c"],
Cell[331278, 8221, 1025, 18, 105, "Print",ExpressionUUID->"32601b91-cc38-402f-b158-598d95d755d0"],
Cell[332306, 8241, 468, 10, 45, "Print",ExpressionUUID->"1922320c-a227-4cdb-9222-16198d6b4688"],
Cell[332777, 8253, 445, 10, 25, "Print",ExpressionUUID->"f5869e87-21f0-4d75-9aa0-461f0f53e23b"],
Cell[333225, 8265, 1023, 18, 105, "Print",ExpressionUUID->"e0ea9f18-7456-4b01-a1af-d3ee8d8f760b"],
Cell[334251, 8285, 444, 10, 25, "Print",ExpressionUUID->"5b81b822-ef70-48b3-81c0-9b8e0ec4452e"],
Cell[334698, 8297, 468, 10, 45, "Print",ExpressionUUID->"7b7c271c-1eb7-4eca-a325-36476025ed8d"],
Cell[335169, 8309, 1024, 18, 105, "Print",ExpressionUUID->"541aa145-e13e-4d7b-ae70-bdf2af5762dd"],
Cell[336196, 8329, 470, 10, 45, "Print",ExpressionUUID->"10238ce8-f781-40a8-96f3-c6556221bce6"],
Cell[336669, 8341, 1024, 18, 105, "Print",ExpressionUUID->"a12d8ad5-91c7-44c8-a5fd-6eb49405ecaf"],
Cell[337696, 8361, 468, 10, 45, "Print",ExpressionUUID->"adf07126-90bb-4f1e-a4a2-11991175b1f9"],
Cell[338167, 8373, 445, 10, 25, "Print",ExpressionUUID->"f5611a86-8506-4e6b-a419-8872483cac40"],
Cell[338615, 8385, 1023, 18, 105, "Print",ExpressionUUID->"9e3c7fdc-0e8e-4b12-8ad2-ee3f62eb4a73"],
Cell[339641, 8405, 444, 10, 25, "Print",ExpressionUUID->"db135527-9be7-4338-b3e0-7018e3a04084"],
Cell[340088, 8417, 468, 10, 45, "Print",ExpressionUUID->"448422b6-5688-49c1-9457-1e3e67523987"],
Cell[340559, 8429, 1024, 18, 105, "Print",ExpressionUUID->"0f20f1f9-049e-4241-baeb-dbdaa6138498"],
Cell[341586, 8449, 470, 10, 45, "Print",ExpressionUUID->"5c9561a4-0233-4188-aee7-dbf76005ccc5"],
Cell[342059, 8461, 1024, 18, 105, "Print",ExpressionUUID->"a66a78e3-c420-47eb-a0a7-58f78149fc6c"],
Cell[343086, 8481, 468, 10, 45, "Print",ExpressionUUID->"0f719cd5-fbb1-4452-b780-1809cf0690dc"],
Cell[343557, 8493, 445, 10, 25, "Print",ExpressionUUID->"afa00ba0-9904-42dc-a2c8-7f961b61f120"],
Cell[344005, 8505, 1025, 18, 105, "Print",ExpressionUUID->"bce81b79-8954-4d3b-aadc-4d2d33868f74"],
Cell[345033, 8525, 444, 10, 25, "Print",ExpressionUUID->"55444ff0-af8e-4a00-9303-f45a9ab71d45"],
Cell[345480, 8537, 468, 10, 45, "Print",ExpressionUUID->"46ff758d-7eeb-40cb-b899-e8b11a7f8e6e"],
Cell[345951, 8549, 467, 10, 45, "Print",ExpressionUUID->"7046b945-322f-4ad8-b19b-bf0ac63a109d"],
Cell[346421, 8561, 1024, 18, 105, "Print",ExpressionUUID->"877c58c9-dd22-45c3-be5d-2b53f7b5d79b"],
Cell[347448, 8581, 468, 10, 45, "Print",ExpressionUUID->"ec9edae0-b88c-420a-8abb-38241e695fd9"],
Cell[347919, 8593, 445, 10, 25, "Print",ExpressionUUID->"c5e1df50-1a5a-4ee7-986a-3dffcf7467e2"],
Cell[348367, 8605, 1024, 18, 105, "Print",ExpressionUUID->"4cdd1c44-81a9-4b80-9a36-7c86feb5ca97"],
Cell[349394, 8625, 1022, 18, 105, "Print",ExpressionUUID->"ed026fea-82bb-4c2a-9db2-14fcf75717b0"],
Cell[350419, 8645, 446, 10, 25, "Print",ExpressionUUID->"a3a18b1a-f3fb-4997-86ef-1ead2d191f57"],
Cell[350868, 8657, 468, 10, 45, "Print",ExpressionUUID->"fa6a8dee-97be-42cf-a942-c680a3633d31"],
Cell[351339, 8669, 1023, 18, 105, "Print",ExpressionUUID->"52257903-0e4c-4720-96de-4116a4ccbd7b"],
Cell[352365, 8689, 468, 10, 45, "Print",ExpressionUUID->"7c91af29-afd3-4ccb-a3fc-fe4ffc64c74f"],
Cell[352836, 8701, 1022, 18, 105, "Print",ExpressionUUID->"246bf145-728a-4eb8-a3ee-0a6300813a3f"],
Cell[353861, 8721, 467, 10, 45, "Print",ExpressionUUID->"a4a32790-f25f-432d-bdf8-1e320d60d22e"],
Cell[354331, 8733, 445, 10, 25, "Print",ExpressionUUID->"89e353a4-0ec7-4d5f-a758-c1b6b2ec4058"],
Cell[354779, 8745, 1024, 18, 105, "Print",ExpressionUUID->"b47987d4-6dd4-4df7-9fde-fe64bc9d3fbf"],
Cell[355806, 8765, 446, 10, 25, "Print",ExpressionUUID->"fc755048-0686-4b11-8d4e-165cf6e684f4"],
Cell[356255, 8777, 468, 10, 45, "Print",ExpressionUUID->"81182d37-ff90-4ccc-a72f-462017ca3301"],
Cell[356726, 8789, 1023, 18, 105, "Print",ExpressionUUID->"d0c37e34-b2cf-4cef-82e4-f49a418e8009"],
Cell[357752, 8809, 468, 10, 45, "Print",ExpressionUUID->"3e4ee9a0-8474-40d6-a8af-45597eac2e29"],
Cell[358223, 8821, 1026, 18, 105, "Print",ExpressionUUID->"ea11bd3c-d6bf-4b6e-8da3-7f8f6dad92fa"],
Cell[359252, 8841, 468, 10, 45, "Print",ExpressionUUID->"2401c213-92be-490f-8aca-8c9ad33bf220"],
Cell[359723, 8853, 445, 10, 25, "Print",ExpressionUUID->"9e407dab-caf1-4890-917e-9fab9ea97f24"],
Cell[360171, 8865, 468, 10, 45, "Print",ExpressionUUID->"64132ee0-4486-4a31-b9c6-d002a059b8c1"],
Cell[360642, 8877, 470, 10, 45, "Print",ExpressionUUID->"2d80579d-f9c3-4fcb-9598-94cce6aadc33"],
Cell[361115, 8889, 1026, 18, 105, "Print",ExpressionUUID->"fb3f8ba4-88c0-44be-9441-941c268a8f0f"],
Cell[362144, 8909, 1023, 18, 105, "Print",ExpressionUUID->"a3acaa36-2318-4457-aa00-4dea3cfa7b36"],
Cell[363170, 8929, 446, 10, 25, "Print",ExpressionUUID->"ecce2d6c-25b8-4e2a-a053-c581006d78fb"],
Cell[363619, 8941, 470, 10, 45, "Print",ExpressionUUID->"64a3c562-8737-4cea-8958-5c1d3fcb349d"],
Cell[364092, 8953, 445, 10, 25, "Print",ExpressionUUID->"5fcb1ca4-076f-4b2b-997c-49e145e7c81e"],
Cell[364540, 8965, 1022, 18, 105, "Print",ExpressionUUID->"939de0f9-db4d-4ce9-a60a-207d3acd045e"],
Cell[365565, 8985, 1023, 18, 105, "Print",ExpressionUUID->"dcf79727-466e-4b77-a540-7f96e06ed5ea"],
Cell[366591, 9005, 444, 10, 25, "Print",ExpressionUUID->"b54a48eb-0f53-4bff-8c11-6413af538ee4"],
Cell[367038, 9017, 468, 10, 45, "Print",ExpressionUUID->"0cb8a800-96ba-47f3-a7ff-40686d4c045c"],
Cell[367509, 9029, 1026, 18, 105, "Print",ExpressionUUID->"6f1196ca-b71f-4823-b078-20e2ca3bc326"],
Cell[368538, 9049, 468, 10, 45, "Print",ExpressionUUID->"2c1ecba0-4570-4882-bbd8-8bff68a57baa"],
Cell[369009, 9061, 470, 10, 45, "Print",ExpressionUUID->"4a749095-f6d8-4cd4-9e6d-6defe5190267"],
Cell[369482, 9073, 445, 10, 25, "Print",ExpressionUUID->"71b735c6-80bc-4f76-bb34-81bb767c1bb5"],
Cell[369930, 9085, 1021, 18, 105, "Print",ExpressionUUID->"4d39e12c-c199-4fc3-88e2-eec242f2f2de"],
Cell[370954, 9105, 1023, 18, 105, "Print",ExpressionUUID->"63a0fb14-db7b-4171-ae13-bfe09e332212"],
Cell[371980, 9125, 444, 10, 25, "Print",ExpressionUUID->"265b8b7f-0c35-4c41-abe9-57adf9b2b28e"],
Cell[372427, 9137, 470, 10, 45, "Print",ExpressionUUID->"f439c32d-0484-40ab-affd-87aee8a94228"],
Cell[372900, 9149, 1024, 18, 105, "Print",ExpressionUUID->"78b9af4c-f533-4b5c-9162-616c55065143"],
Cell[373927, 9169, 468, 10, 45, "Print",ExpressionUUID->"62567bc0-cfb8-42bf-9654-5b24dd292502"],
Cell[374398, 9181, 1024, 18, 105, "Print",ExpressionUUID->"f1b62bbc-31f0-48d7-ad62-21dc8ad27ae2"],
Cell[375425, 9201, 468, 10, 45, "Print",ExpressionUUID->"a30a6b5e-98b2-41b2-8817-1cadc85c3904"],
Cell[375896, 9213, 444, 10, 25, "Print",ExpressionUUID->"3d6c2bc2-d337-4015-a505-d900fbdea969"],
Cell[376343, 9225, 1025, 18, 105, "Print",ExpressionUUID->"424d32fc-cc0f-4052-99c4-a14a6b99f626"],
Cell[377371, 9245, 444, 10, 25, "Print",ExpressionUUID->"ac3a8158-90db-4f21-97d6-ad0497356c53"],
Cell[377818, 9257, 467, 10, 45, "Print",ExpressionUUID->"134bbce4-6b1a-46b4-b076-f2d1d5cd7c65"],
Cell[378288, 9269, 470, 10, 45, "Print",ExpressionUUID->"d35c97fb-e1f4-4c09-964c-42a999a2177d"],
Cell[378761, 9281, 468, 10, 45, "Print",ExpressionUUID->"70811f26-2c10-4405-9c30-f364d1db1129"],
Cell[379232, 9293, 447, 10, 25, "Print",ExpressionUUID->"bcdec1ae-ee07-4294-83f1-ec2ca5b167be"],
Cell[379682, 9305, 468, 10, 45, "Print",ExpressionUUID->"6f1af06d-5f3d-4803-8d6d-7129d8368567"],
Cell[380153, 9317, 467, 10, 45, "Print",ExpressionUUID->"ac13420a-1f10-4365-8604-b214eb7daa5e"],
Cell[380623, 9329, 468, 10, 45, "Print",ExpressionUUID->"be293b76-e233-42c6-9f63-5860745fcf70"],
Cell[381094, 9341, 447, 10, 25, "Print",ExpressionUUID->"88825c02-c0a4-4013-8412-7d5bca3e1ad6"]
}, Open  ]],
Cell[381556, 9354, 256, 5, 33, "Output",ExpressionUUID->"0ae4de7f-9778-4d69-94e3-d95baecf1544"],
Cell[381815, 9361, 214, 3, 33, "Output",ExpressionUUID->"278caa5b-5e9d-46fa-bed9-2f9b68a2a9e1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[382078, 9370, 531, 18, 113, "Title",ExpressionUUID->"a6eb0f11-a253-41d5-85fc-0021bafb9648"],
Cell[CellGroupData[{
Cell[382634, 9392, 8530, 238, 1159, "Input",ExpressionUUID->"e385791e-bde1-4192-9680-88664bcacbca"],
Cell[CellGroupData[{
Cell[391189, 9634, 468, 10, 45, "Print",ExpressionUUID->"2673450c-4ee4-4f70-af3b-6054e5dc3960"],
Cell[391660, 9646, 470, 10, 45, "Print",ExpressionUUID->"dada178a-596c-4aa1-a8ef-159d4a94b4d9"],
Cell[392133, 9658, 1022, 18, 105, "Print",ExpressionUUID->"ec9d692b-dc88-4a24-a37f-2209991d988d"],
Cell[393158, 9678, 1023, 18, 105, "Print",ExpressionUUID->"b7ab9d9f-e124-4846-bc9e-274746806e42"],
Cell[394184, 9698, 468, 10, 45, "Print",ExpressionUUID->"4e50c4db-d6d8-4d8c-9334-e0fda07fee92"],
Cell[394655, 9710, 466, 10, 45, "Print",ExpressionUUID->"26321afa-3deb-4fa8-846b-1489e03d6583"],
Cell[395124, 9722, 1022, 18, 105, "Print",ExpressionUUID->"e9486b49-4941-4f00-ab09-8272c49ec5b6"],
Cell[396149, 9742, 1025, 18, 105, "Print",ExpressionUUID->"da08ad17-6efb-4e90-a5c9-efc80141ab53"],
Cell[397177, 9762, 468, 10, 45, "Print",ExpressionUUID->"863e73af-6b21-43cd-8bee-7ffb6583db54"],
Cell[397648, 9774, 445, 10, 25, "Print",ExpressionUUID->"24adcf23-adff-4a49-b7fc-06546f614b5e"],
Cell[398096, 9786, 1033, 18, 105, "Print",ExpressionUUID->"e6332e5b-d3a6-47de-a9d4-d3b707446ad6"],
Cell[399132, 9806, 470, 10, 45, "Print",ExpressionUUID->"dc7e7619-a871-47c6-a70c-c88807841adc"],
Cell[399605, 9818, 444, 10, 25, "Print",ExpressionUUID->"42b4b407-bb04-4dee-a18a-06a1ccb752f9"],
Cell[400052, 9830, 445, 10, 25, "Print",ExpressionUUID->"89343337-0454-442a-ae7c-f9962be802fb"],
Cell[400500, 9842, 1023, 18, 105, "Print",ExpressionUUID->"9cfbe53f-bd02-4f59-ba4b-03c53fc8899e"],
Cell[401526, 9862, 444, 10, 25, "Print",ExpressionUUID->"5de09d0f-efdd-48ee-acc8-eb8f43907fbf"],
Cell[401973, 9874, 470, 10, 45, "Print",ExpressionUUID->"bf3003c6-a990-4778-b4e8-b00025779b58"],
Cell[402446, 9886, 1023, 18, 105, "Print",ExpressionUUID->"d77ca834-8c00-4b81-a650-adca3dd17fa8"],
Cell[403472, 9906, 468, 10, 45, "Print",ExpressionUUID->"ee9aca8d-1d91-4f19-8cf5-07cd1d940c85"],
Cell[403943, 9918, 1022, 18, 105, "Print",ExpressionUUID->"2896e120-bf42-409d-9a77-569c452cbf2d"],
Cell[404968, 9938, 470, 10, 45, "Print",ExpressionUUID->"bcb3c3a8-2646-4d64-8ff6-2cf30ae61534"],
Cell[405441, 9950, 445, 10, 25, "Print",ExpressionUUID->"947e350d-ba61-40ce-8bee-9d4a084769f2"],
Cell[405889, 9962, 1024, 18, 105, "Print",ExpressionUUID->"658375bf-a0c2-4805-9505-b58bfe38b11f"],
Cell[406916, 9982, 444, 10, 25, "Print",ExpressionUUID->"00342ed7-11cc-4b4b-a4cc-8968683c0256"],
Cell[407363, 9994, 470, 10, 45, "Print",ExpressionUUID->"11d05f90-b162-4f4e-9704-34fc7bdef6af"],
Cell[407836, 10006, 1023, 18, 105, "Print",ExpressionUUID->"32d2267b-74f3-4985-b134-1655f18b0fce"],
Cell[408862, 10026, 467, 10, 45, "Print",ExpressionUUID->"ab5719c4-1455-452b-895e-3c884e6a6e75"],
Cell[409332, 10038, 1025, 18, 105, "Print",ExpressionUUID->"006e7a60-e47a-4f66-acfd-3272e565fd61"],
Cell[410360, 10058, 468, 10, 45, "Print",ExpressionUUID->"669e7d62-6130-4d5e-a28f-95da93570fa9"],
Cell[410831, 10070, 447, 10, 25, "Print",ExpressionUUID->"1376eea9-d929-4784-b1b3-dca4a4578d90"],
Cell[411281, 10082, 1022, 18, 105, "Print",ExpressionUUID->"9b3a30a5-73df-4d17-a0e7-aef492793dce"],
Cell[412306, 10102, 444, 10, 25, "Print",ExpressionUUID->"979ff743-5952-4956-bc73-f8fbb6e5f580"],
Cell[412753, 10114, 468, 10, 45, "Print",ExpressionUUID->"8714fe83-c491-45c2-baf9-849cafc6d28e"],
Cell[413224, 10126, 1025, 18, 105, "Print",ExpressionUUID->"86a9e10d-3568-46d3-a65a-12def6873686"],
Cell[414252, 10146, 468, 10, 45, "Print",ExpressionUUID->"0abcbb07-090a-4be9-a989-7976abd8bb5a"],
Cell[414723, 10158, 1023, 18, 105, "Print",ExpressionUUID->"f8c878ae-595c-4bbd-8a40-c5ab70262ff1"],
Cell[415749, 10178, 468, 10, 45, "Print",ExpressionUUID->"e66a9ad5-168e-4d85-acba-5f9883e40bf0"],
Cell[416220, 10190, 445, 10, 25, "Print",ExpressionUUID->"aa498861-48ff-4b4f-81de-46a00799c021"],
Cell[416668, 10202, 1036, 18, 105, "Print",ExpressionUUID->"faaebe7b-5e7b-4cd4-878b-21181d1cdacb"],
Cell[417707, 10222, 444, 10, 25, "Print",ExpressionUUID->"5b9461cb-f1ae-4edd-9a2b-f778062f4b8f"],
Cell[418154, 10234, 470, 10, 45, "Print",ExpressionUUID->"27e2e726-5883-4b45-b1ad-d701f50569ef"],
Cell[418627, 10246, 1024, 18, 105, "Print",ExpressionUUID->"3defb6df-6ec8-4391-ad4d-c75708fdac17"],
Cell[419654, 10266, 470, 10, 45, "Print",ExpressionUUID->"f96d2d70-0df9-4afc-9ce2-1d9892515118"],
Cell[420127, 10278, 1022, 18, 105, "Print",ExpressionUUID->"c5cbd147-fe7e-44f2-803a-7a1fad1cfb2d"],
Cell[421152, 10298, 468, 10, 45, "Print",ExpressionUUID->"2619c9ac-68d8-4fc4-a0e6-7703aaaae989"],
Cell[421623, 10310, 445, 10, 25, "Print",ExpressionUUID->"d713757e-e688-4181-aa0e-fe24ae452280"],
Cell[422071, 10322, 1034, 18, 105, "Print",ExpressionUUID->"4ba647aa-d87a-467f-beb9-5b00d46bfe75"],
Cell[423108, 10342, 446, 10, 25, "Print",ExpressionUUID->"e1c23dc0-495e-4f53-bfa1-099d501b6f99"],
Cell[423557, 10354, 468, 10, 45, "Print",ExpressionUUID->"d5de9690-280c-47e7-b5f3-77e552c24a28"],
Cell[424028, 10366, 1025, 18, 105, "Print",ExpressionUUID->"fbb75680-34c5-41b8-8ea0-801fd0c1e2d2"],
Cell[425056, 10386, 467, 10, 45, "Print",ExpressionUUID->"d3c0c116-1f9d-41b7-bf8f-c4b837bbc25f"],
Cell[425526, 10398, 1023, 18, 105, "Print",ExpressionUUID->"b3eb4cff-6994-4fc8-a1dc-e93ef37b5d0c"],
Cell[426552, 10418, 468, 10, 45, "Print",ExpressionUUID->"29c969bc-c843-4f49-bfd8-14ec7abf43f6"],
Cell[427023, 10430, 445, 10, 25, "Print",ExpressionUUID->"19b90720-27f3-49fc-b342-e8951334115a"],
Cell[427471, 10442, 1022, 18, 105, "Print",ExpressionUUID->"b4b02a75-7030-4f13-a988-726e6dce9a3e"],
Cell[428496, 10462, 446, 10, 25, "Print",ExpressionUUID->"c1d95a10-60aa-4bc5-8c33-f6133638a88f"],
Cell[428945, 10474, 468, 10, 45, "Print",ExpressionUUID->"e5961fcd-387f-46a1-ab57-06aa81e20aae"],
Cell[429416, 10486, 1023, 18, 105, "Print",ExpressionUUID->"b12093e4-0632-4f5c-b91e-e39d4a5503ad"],
Cell[430442, 10506, 468, 10, 45, "Print",ExpressionUUID->"82efae08-271e-4ef5-bd95-3054f7a3fa43"],
Cell[430913, 10518, 1023, 18, 105, "Print",ExpressionUUID->"5fe1b02b-fcff-4d63-a07c-c8232922ea9b"],
Cell[431939, 10538, 468, 10, 45, "Print",ExpressionUUID->"32f59e44-e195-480d-ab1b-31c268e94722"],
Cell[432410, 10550, 444, 10, 25, "Print",ExpressionUUID->"6b6a1e33-5f0e-47af-a68f-6dfc0a1f0987"],
Cell[432857, 10562, 1023, 18, 105, "Print",ExpressionUUID->"4e6fc859-2c9f-48d6-8881-650ba3b8147b"],
Cell[433883, 10582, 446, 10, 25, "Print",ExpressionUUID->"ee4ef72c-2b4c-4f2a-99b4-d0b0fa588d5f"],
Cell[434332, 10594, 470, 10, 45, "Print",ExpressionUUID->"98507a4e-8594-4f23-8d44-d8a3cfdc1ec2"],
Cell[434805, 10606, 1026, 18, 105, "Print",ExpressionUUID->"29ece002-b586-487f-bf0a-4480631c5ea8"],
Cell[435834, 10626, 468, 10, 45, "Print",ExpressionUUID->"ec4d57f0-6c5f-4e31-a989-4d5928b93464"],
Cell[436305, 10638, 1023, 18, 105, "Print",ExpressionUUID->"fb77b3c8-866f-4ddc-926e-324da2b32f6b"],
Cell[437331, 10658, 468, 10, 45, "Print",ExpressionUUID->"b2ebf61a-f286-4f14-a16d-9f4c5800b2cc"],
Cell[437802, 10670, 447, 10, 25, "Print",ExpressionUUID->"b3d57a62-cd2e-45af-914c-ec8d1526d21b"],
Cell[438252, 10682, 1022, 18, 105, "Print",ExpressionUUID->"f3534304-d24c-4bda-a6ac-52e463d899e9"],
Cell[439277, 10702, 442, 10, 25, "Print",ExpressionUUID->"8ff8761c-bf59-4476-b893-dc6a03af21eb"],
Cell[439722, 10714, 468, 10, 45, "Print",ExpressionUUID->"1c657c7e-97b5-44ac-beee-1c85823a64ab"],
Cell[440193, 10726, 1034, 18, 105, "Print",ExpressionUUID->"10daa104-bf31-436d-8ee0-cc8471fb5aa7"],
Cell[441230, 10746, 468, 10, 45, "Print",ExpressionUUID->"1e86db83-96fb-4b35-94f0-fdd556d2181d"],
Cell[441701, 10758, 1023, 18, 105, "Print",ExpressionUUID->"29cb8b70-cefa-4c84-a8e6-2e8355aba51b"],
Cell[442727, 10778, 468, 10, 45, "Print",ExpressionUUID->"4c8f293e-69c9-40aa-ae73-2b59079f8330"],
Cell[443198, 10790, 445, 10, 25, "Print",ExpressionUUID->"dfb5e095-3b6d-49ac-a254-b37c2fee2ce1"],
Cell[443646, 10802, 1023, 18, 105, "Print",ExpressionUUID->"c4615bad-c6d8-4a35-a913-c135a7074cb1"],
Cell[444672, 10822, 444, 10, 25, "Print",ExpressionUUID->"a8000a40-6937-498b-b21d-ef1062fb251b"],
Cell[445119, 10834, 470, 10, 45, "Print",ExpressionUUID->"c00c1439-64c6-455f-816a-3cfa4a3d2cd4"],
Cell[445592, 10846, 1033, 18, 105, "Print",ExpressionUUID->"776edcae-baf6-4888-ba31-5a0261ddc9b7"],
Cell[446628, 10866, 467, 10, 45, "Print",ExpressionUUID->"3a0173ab-cb5d-491e-87da-fbcdaa45c60e"],
Cell[447098, 10878, 1035, 18, 105, "Print",ExpressionUUID->"8c3d7330-12be-4c6e-9449-71b6e8819168"],
Cell[448136, 10898, 468, 10, 45, "Print",ExpressionUUID->"fae4bacf-17d4-460d-9f5e-177790ff7a0b"],
Cell[448607, 10910, 445, 10, 25, "Print",ExpressionUUID->"aa6d1fb3-0223-4153-895c-2ec314f8b735"],
Cell[449055, 10922, 1022, 18, 105, "Print",ExpressionUUID->"c0571a40-1c4e-4c0b-b230-484f7befea1b"],
Cell[450080, 10942, 444, 10, 25, "Print",ExpressionUUID->"098295a2-5500-4330-83bf-a0ee2d8cfe86"],
Cell[450527, 10954, 468, 10, 45, "Print",ExpressionUUID->"f3db26ab-11a6-4b08-a8ca-337c83c1d5fd"],
Cell[450998, 10966, 1036, 18, 105, "Print",ExpressionUUID->"b4b101e7-655d-4844-a03b-b270434976cb"],
Cell[452037, 10986, 468, 10, 45, "Print",ExpressionUUID->"72566e3d-710e-4d00-9338-10411d5abaf8"],
Cell[452508, 10998, 470, 10, 45, "Print",ExpressionUUID->"6d2739cf-22d8-4463-adde-b8c27bf2d6b1"],
Cell[452981, 11010, 444, 10, 25, "Print",ExpressionUUID->"d1161108-44c9-479f-82ef-3536dd455ebc"],
Cell[453428, 11022, 1037, 18, 105, "Print",ExpressionUUID->"3e01c19f-dced-4bdf-92a1-2c05c7fcb385"],
Cell[454468, 11042, 1035, 18, 105, "Print",ExpressionUUID->"99986828-00b9-42e7-a530-0bae80624c5a"],
Cell[455506, 11062, 444, 10, 25, "Print",ExpressionUUID->"851c7e3d-f660-47c2-b2d4-21621179dc2d"],
Cell[455953, 11074, 467, 10, 45, "Print",ExpressionUUID->"a6de29d6-96dd-4101-8da0-d39d904a07b0"],
Cell[456423, 11086, 468, 10, 45, "Print",ExpressionUUID->"8b7f00ac-b114-49ca-9087-6608d6186656"],
Cell[456894, 11098, 468, 10, 45, "Print",ExpressionUUID->"b8c2136c-eb98-4107-b0c1-2f3152965221"],
Cell[457365, 11110, 466, 10, 45, "Print",ExpressionUUID->"b0eb2ff3-5f64-4067-8933-45f3776fe89a"],
Cell[457834, 11122, 468, 10, 45, "Print",ExpressionUUID->"5993d63e-694e-4c6a-8ec5-098fd708ed03"],
Cell[458305, 11134, 447, 10, 25, "Print",ExpressionUUID->"01cbddb1-45b2-44df-8b63-68249c98ead7"],
Cell[458755, 11146, 467, 10, 45, "Print",ExpressionUUID->"3c108803-1180-4fa0-ac53-16e4914536f5"],
Cell[459225, 11158, 445, 10, 25, "Print",ExpressionUUID->"80015140-7dbe-4ff1-aaf2-1a64ece2cedd"],
Cell[459673, 11170, 470, 10, 45, "Print",ExpressionUUID->"4062afb0-5766-4352-97dc-ce8d796617c1"],
Cell[460146, 11182, 468, 10, 45, "Print",ExpressionUUID->"89449090-8532-4b3b-8f49-db0fde4ecc8d"],
Cell[460617, 11194, 468, 10, 45, "Print",ExpressionUUID->"beb53e69-16a7-411d-8e99-d7f638053ac2"],
Cell[461088, 11206, 447, 10, 25, "Print",ExpressionUUID->"57f6525a-5073-4774-b01a-1a5d20249b18"],
Cell[461538, 11218, 468, 10, 45, "Print",ExpressionUUID->"8e81b7a6-e2c9-4b44-8d8a-97a60e7ec127"],
Cell[462009, 11230, 468, 10, 45, "Print",ExpressionUUID->"a78354b5-7594-42ad-9ff3-15f543a3d083"],
Cell[462480, 11242, 470, 10, 45, "Print",ExpressionUUID->"306d54bc-51cc-49a2-8ac7-d50f60cd89a1"],
Cell[462953, 11254, 445, 10, 25, "Print",ExpressionUUID->"97088ae2-c2c4-439c-b126-bc2530f86ed9"]
}, Open  ]],
Cell[463413, 11267, 229, 4, 33, "Output",ExpressionUUID->"c652b170-a6e5-4814-92c5-553aa95d27c0"],
Cell[463645, 11273, 189, 2, 33, "Output",ExpressionUUID->"0acf28f9-c1d7-4592-8844-eb8c83fae458"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[463883, 11281, 569, 19, 113, "Title",ExpressionUUID->"e8d38dbd-4cae-4dff-97a9-776001fd660a"],
Cell[CellGroupData[{
Cell[464477, 11304, 9783, 274, 1195, "Input",ExpressionUUID->"528220f4-bf34-4c73-9ab0-3666ac224edc"],
Cell[CellGroupData[{
Cell[474285, 11582, 468, 10, 45, "Print",ExpressionUUID->"11e4617f-9aa9-42da-b444-4cba296b48eb"],
Cell[474756, 11594, 468, 10, 45, "Print",ExpressionUUID->"b61ee0ef-e849-4984-adc1-8712f4764541"],
Cell[475227, 11606, 1026, 18, 105, "Print",ExpressionUUID->"bd1b403d-5290-4cd9-aacd-2870a73b4b5f"],
Cell[476256, 11626, 468, 10, 45, "Print",ExpressionUUID->"f34caf1c-954e-4663-b91c-671079a5a8ea"],
Cell[476727, 11638, 1023, 18, 105, "Print",ExpressionUUID->"ca229a9d-edfa-4127-bf08-2861b1632b3f"],
Cell[477753, 11658, 468, 10, 45, "Print",ExpressionUUID->"a5a8e912-faf2-4c29-b464-0cf8ece672e8"],
Cell[478224, 11670, 1020, 18, 105, "Print",ExpressionUUID->"7e8edf4e-0a08-4d9d-ac20-bff477948568"],
Cell[479247, 11690, 1022, 18, 105, "Print",ExpressionUUID->"a41583f7-2499-4298-802f-b9dd4dc564da"],
Cell[480272, 11710, 468, 10, 45, "Print",ExpressionUUID->"a40e834a-b730-4ff1-9dc1-c5baedf7416b"],
Cell[480743, 11722, 468, 10, 45, "Print",ExpressionUUID->"5a3884ce-bb82-4bf0-a91f-8b41ac4284ab"],
Cell[481214, 11734, 445, 10, 25, "Print",ExpressionUUID->"fc005a81-7a7f-4da0-a2a4-eaf275cd696e"],
Cell[481662, 11746, 445, 10, 25, "Print",ExpressionUUID->"69317095-1f96-4e18-9e3f-4e8e5a0133ad"],
Cell[482110, 11758, 1024, 18, 105, "Print",ExpressionUUID->"421eb178-347d-4b3a-b8e7-770854d3f091"],
Cell[483137, 11778, 1021, 18, 105, "Print",ExpressionUUID->"acbd9930-7f18-472a-ad90-51d180187ae8"],
Cell[484161, 11798, 446, 10, 25, "Print",ExpressionUUID->"8bdd4e36-7c48-4d04-a36d-07498aabc83d"],
Cell[484610, 11810, 444, 10, 25, "Print",ExpressionUUID->"3bcdbdaa-91fb-4077-8ea0-ff0b1e98d981"],
Cell[485057, 11822, 468, 10, 45, "Print",ExpressionUUID->"aa4180b2-840a-4ef2-a64d-b3f4d337a688"],
Cell[485528, 11834, 1023, 18, 105, "Print",ExpressionUUID->"ddb0a4b0-77e8-448a-9d35-fe21e8681fd7"],
Cell[486554, 11854, 470, 10, 45, "Print",ExpressionUUID->"3d0d3070-da46-44af-bc61-50cdff3b4313"],
Cell[487027, 11866, 1024, 18, 105, "Print",ExpressionUUID->"b225261c-da35-4d67-ba67-4b926bb0dcad"],
Cell[488054, 11886, 470, 10, 45, "Print",ExpressionUUID->"415e15e3-1a5d-4fee-ae1d-93753dc644a7"],
Cell[488527, 11898, 445, 10, 25, "Print",ExpressionUUID->"d5ded28a-defc-4320-a0b6-29b53097cfd0"],
Cell[488975, 11910, 1024, 18, 105, "Print",ExpressionUUID->"bb3fdcf0-32ad-472d-a6d6-3d5d25ab52ea"],
Cell[490002, 11930, 446, 10, 25, "Print",ExpressionUUID->"5b587852-7a63-4df4-9aeb-27771dd36eaa"],
Cell[490451, 11942, 468, 10, 45, "Print",ExpressionUUID->"ff89fff5-b2ed-4bdf-acb6-ace0e297cfcf"],
Cell[490922, 11954, 1022, 18, 105, "Print",ExpressionUUID->"a1041d73-655d-4f09-ba1b-58b363858687"],
Cell[491947, 11974, 470, 10, 45, "Print",ExpressionUUID->"76974759-9553-4ec7-8495-57df3d1e469c"],
Cell[492420, 11986, 1026, 18, 105, "Print",ExpressionUUID->"9636e409-5991-4edb-8440-421773791410"],
Cell[493449, 12006, 468, 10, 45, "Print",ExpressionUUID->"88731193-d016-4ebe-b988-ccdbc3e444f7"],
Cell[493920, 12018, 445, 10, 25, "Print",ExpressionUUID->"2e723d36-872d-4962-822e-b33886831dea"],
Cell[494368, 12030, 1019, 18, 105, "Print",ExpressionUUID->"7cebbe9e-582d-49dd-9214-78b224b32a69"],
Cell[495390, 12050, 444, 10, 25, "Print",ExpressionUUID->"1aa9c71a-b717-4463-97e0-e4bfa7d7310f"],
Cell[495837, 12062, 467, 10, 45, "Print",ExpressionUUID->"fa871960-50bd-426f-81ff-ae0b276ab9b1"],
Cell[496307, 12074, 1024, 18, 105, "Print",ExpressionUUID->"2911c098-3d37-45f3-8020-eda0cd41c853"],
Cell[497334, 12094, 470, 10, 45, "Print",ExpressionUUID->"ba067150-ef8b-4abd-b832-fbfcb0a2a4e9"],
Cell[497807, 12106, 1023, 18, 105, "Print",ExpressionUUID->"5fbaa7a6-bb6e-4eea-9a76-360418538e68"],
Cell[498833, 12126, 470, 10, 45, "Print",ExpressionUUID->"2539d567-b788-4871-90a5-2e69e8c84e38"],
Cell[499306, 12138, 447, 10, 25, "Print",ExpressionUUID->"5776bcb6-b1a2-4605-b8ab-c50f7e3f34d4"],
Cell[499756, 12150, 1022, 18, 105, "Print",ExpressionUUID->"f29fad0a-c7ea-4f30-9448-2c5efcbe01d7"],
Cell[500781, 12170, 444, 10, 25, "Print",ExpressionUUID->"5593f4a9-23d5-4bef-91bc-a0d230f692be"],
Cell[501228, 12182, 470, 10, 45, "Print",ExpressionUUID->"533548b0-2ec9-4f9f-8880-e3ead3c367a2"],
Cell[501701, 12194, 1024, 18, 105, "Print",ExpressionUUID->"cf8c740f-e439-4def-8f98-09530f7e7b7b"],
Cell[502728, 12214, 468, 10, 45, "Print",ExpressionUUID->"a62da6c5-2f7a-4d6b-beaf-db83f16c6aaf"],
Cell[503199, 12226, 1022, 18, 105, "Print",ExpressionUUID->"150a33d0-0091-4a06-a701-93300aef85a9"],
Cell[504224, 12246, 470, 10, 45, "Print",ExpressionUUID->"c05b67d1-8264-4099-872d-3235caf20908"],
Cell[504697, 12258, 447, 10, 25, "Print",ExpressionUUID->"6c00f42c-87c0-4e23-8bb4-c5dc96cfb9ca"],
Cell[505147, 12270, 1026, 18, 105, "Print",ExpressionUUID->"a3a725cc-5c93-4eec-abf1-848d58530037"],
Cell[506176, 12290, 444, 10, 25, "Print",ExpressionUUID->"b77dc966-6c8b-408c-937f-28cdbc46e5b8"],
Cell[506623, 12302, 468, 10, 45, "Print",ExpressionUUID->"db506f1d-5d2f-4517-b0d4-443c43ee391d"],
Cell[507094, 12314, 1023, 18, 105, "Print",ExpressionUUID->"03ec8831-ff9c-41ee-b802-6726bbfc6343"],
Cell[508120, 12334, 468, 10, 45, "Print",ExpressionUUID->"81beb232-6b1a-48de-8596-765daf9fa143"],
Cell[508591, 12346, 1021, 18, 105, "Print",ExpressionUUID->"e8447a6d-6a49-4524-8664-8aaa58bbc51b"],
Cell[509615, 12366, 468, 10, 45, "Print",ExpressionUUID->"881ab4e6-73da-4435-b3f4-b8f9531a559c"],
Cell[510086, 12378, 445, 10, 25, "Print",ExpressionUUID->"9f73489d-92f1-44b9-b2a3-4dc96af784a0"],
Cell[510534, 12390, 1022, 18, 105, "Print",ExpressionUUID->"e171d468-16fc-43a3-b552-3f18eeabb16c"],
Cell[511559, 12410, 444, 10, 25, "Print",ExpressionUUID->"8dc50d25-baf3-43c3-8191-5ff2c380ceff"],
Cell[512006, 12422, 470, 10, 45, "Print",ExpressionUUID->"dcb2169b-7110-4bea-88ca-cc2f40bd15db"],
Cell[512479, 12434, 1025, 18, 105, "Print",ExpressionUUID->"c7796d8c-2a45-48da-b365-d46caa2a08ef"],
Cell[513507, 12454, 470, 10, 45, "Print",ExpressionUUID->"b737b5a7-7e51-476d-aa19-20e654afa091"],
Cell[513980, 12466, 1023, 18, 105, "Print",ExpressionUUID->"0dc0e291-5146-4c3a-9c94-89d40958e7ad"],
Cell[515006, 12486, 468, 10, 45, "Print",ExpressionUUID->"df865409-391d-4319-8e13-71122d67b02a"],
Cell[515477, 12498, 445, 10, 25, "Print",ExpressionUUID->"edfeefc1-b20c-43c7-a310-e40c823c23bc"],
Cell[515925, 12510, 1023, 18, 105, "Print",ExpressionUUID->"299632d5-c388-4930-ab01-ee5ac0b7297d"],
Cell[516951, 12530, 444, 10, 25, "Print",ExpressionUUID->"e1d1f626-274d-4c6a-8814-1df75aec30ed"],
Cell[517398, 12542, 468, 10, 45, "Print",ExpressionUUID->"765b2222-79cc-4bae-8fa2-be49a340594b"],
Cell[517869, 12554, 467, 10, 45, "Print",ExpressionUUID->"6e8a0a85-1c88-48ad-ad32-78f781db48b3"],
Cell[518339, 12566, 467, 10, 45, "Print",ExpressionUUID->"98b144ab-5a1d-45f0-ab40-383969d1cf62"],
Cell[518809, 12578, 445, 10, 25, "Print",ExpressionUUID->"1ed889a0-ccdf-4e2b-989c-f2e924706259"],
Cell[519257, 12590, 1023, 18, 105, "Print",ExpressionUUID->"8c4bde6a-d79b-4e3c-bb62-4d715a096a05"],
Cell[520283, 12610, 1023, 18, 105, "Print",ExpressionUUID->"de5c807c-6abd-4ca0-936a-1a1050527390"],
Cell[521309, 12630, 1022, 18, 105, "Print",ExpressionUUID->"8d087e90-7296-47be-8fe1-72df238f4888"],
Cell[522334, 12650, 443, 10, 25, "Print",ExpressionUUID->"8943fcba-fb2a-4b76-8aec-3779d1af7e64"],
Cell[522780, 12662, 468, 10, 45, "Print",ExpressionUUID->"9bb646e3-98ea-472b-848c-1107e6b698d3"],
Cell[523251, 12674, 1036, 18, 105, "Print",ExpressionUUID->"b46f0d58-4765-4e1b-9abf-f84b71a24ab9"],
Cell[524290, 12694, 470, 10, 45, "Print",ExpressionUUID->"636148ad-36cf-49db-9c6e-d956b38f0472"],
Cell[524763, 12706, 1025, 18, 105, "Print",ExpressionUUID->"34e8aa47-1ae3-4147-95a2-0ce8ea303cff"],
Cell[525791, 12726, 468, 10, 45, "Print",ExpressionUUID->"e1f2ee3b-6022-4d69-8002-f4b2ae6444c6"],
Cell[526262, 12738, 445, 10, 25, "Print",ExpressionUUID->"447762e3-313e-40ab-a87b-584ed56405db"],
Cell[526710, 12750, 1023, 18, 105, "Print",ExpressionUUID->"9f76c262-110e-45bd-8eb8-51c9988d10d1"],
Cell[527736, 12770, 444, 10, 25, "Print",ExpressionUUID->"2758aad0-7371-40a7-9a22-d59a9860d68a"],
Cell[528183, 12782, 467, 10, 45, "Print",ExpressionUUID->"873f7f77-f7b1-45df-ac35-3eda35e91624"],
Cell[528653, 12794, 470, 10, 45, "Print",ExpressionUUID->"4584c0f3-65f4-467e-8160-993feee41bfb"],
Cell[529126, 12806, 470, 10, 45, "Print",ExpressionUUID->"35f09abe-ce13-4b29-94f9-343eb5b6f58a"],
Cell[529599, 12818, 445, 10, 25, "Print",ExpressionUUID->"84c9b5ec-301d-4fda-82c1-509b4bb15ae2"],
Cell[530047, 12830, 468, 10, 45, "Print",ExpressionUUID->"381b0b5c-ddab-4e4a-a48b-2e2460e0ee4a"],
Cell[530518, 12842, 1023, 18, 105, "Print",ExpressionUUID->"9ee45ba6-c4be-48a5-859a-083a2fd33bca"],
Cell[531544, 12862, 468, 10, 45, "Print",ExpressionUUID->"cda5bb7d-47c4-4405-a62b-8640026e3cbe"],
Cell[532015, 12874, 1023, 18, 105, "Print",ExpressionUUID->"9ea04b46-1823-4887-99ed-376cb6e60cb9"],
Cell[533041, 12894, 468, 10, 45, "Print",ExpressionUUID->"4ded61b6-f9cc-44d5-b1c4-d2517a9c2660"],
Cell[533512, 12906, 445, 10, 25, "Print",ExpressionUUID->"c1d30126-7e5a-42b1-868d-f86ad61256c8"],
Cell[533960, 12918, 1021, 18, 105, "Print",ExpressionUUID->"97666d04-5690-4ce7-b739-7fd940bcc92f"],
Cell[534984, 12938, 446, 10, 25, "Print",ExpressionUUID->"0f5adaed-91e2-4ba7-9ff2-5b199f4a4b80"],
Cell[535433, 12950, 1023, 18, 105, "Print",ExpressionUUID->"8fb1baf4-f080-4267-a4ca-cbcba17c5e10"],
Cell[536459, 12970, 1026, 18, 105, "Print",ExpressionUUID->"1cdf00b0-9533-4974-a4ec-06debec350f5"],
Cell[537488, 12990, 1023, 18, 105, "Print",ExpressionUUID->"d6eb57be-54e6-4575-8609-b6cdefa0d40a"],
Cell[538514, 13010, 444, 10, 25, "Print",ExpressionUUID->"fcde0aaf-30e9-403a-b56f-ad3b864fa419"],
Cell[538961, 13022, 470, 10, 45, "Print",ExpressionUUID->"3851ee6c-b2fb-4a97-be65-a53e49b7e675"],
Cell[539434, 13034, 470, 10, 45, "Print",ExpressionUUID->"4ffc16be-449c-42b3-ba6d-fe519ad841f8"],
Cell[539907, 13046, 1020, 18, 105, "Print",ExpressionUUID->"044afbde-5e80-4b83-8d29-283334a5b345"],
Cell[540930, 13066, 468, 10, 45, "Print",ExpressionUUID->"736c8e56-b556-42e4-9584-4e49af7f4f55"],
Cell[541401, 13078, 445, 10, 25, "Print",ExpressionUUID->"04decde8-bb6e-4cbd-943c-2c2ba14ff920"],
Cell[541849, 13090, 1022, 18, 105, "Print",ExpressionUUID->"12ece114-8b5c-4023-9f25-e1ca81a3102d"],
Cell[542874, 13110, 1019, 18, 105, "Print",ExpressionUUID->"0ee71f57-7a55-4bac-be26-f25a94af6dab"],
Cell[543896, 13130, 444, 10, 25, "Print",ExpressionUUID->"9f2137f2-c662-45b2-b2ca-76fd69397bf5"],
Cell[544343, 13142, 468, 10, 45, "Print",ExpressionUUID->"8f069335-d198-423b-9ef9-749b2c2b0804"],
Cell[544814, 13154, 1023, 18, 105, "Print",ExpressionUUID->"48cf6fb6-76be-4fa2-bc64-426186b9c370"],
Cell[545840, 13174, 470, 10, 45, "Print",ExpressionUUID->"87a8db4c-44dc-4103-aa8d-dd24b239c3c7"],
Cell[546313, 13186, 468, 10, 45, "Print",ExpressionUUID->"c6c360c0-319a-48f5-b1f7-7bb363207c8e"],
Cell[546784, 13198, 445, 10, 25, "Print",ExpressionUUID->"fb865f4d-a91c-4666-a15c-7f08a99eec1e"],
Cell[547232, 13210, 1024, 18, 105, "Print",ExpressionUUID->"1f84c758-e294-414e-86e2-e61550e2ac57"],
Cell[548259, 13230, 1022, 18, 105, "Print",ExpressionUUID->"f06a3b13-3620-41bc-9ab5-1a7f4157a90c"],
Cell[549284, 13250, 444, 10, 25, "Print",ExpressionUUID->"cb637ddd-257e-4ff2-9c40-37086ef3527a"],
Cell[549731, 13262, 468, 10, 45, "Print",ExpressionUUID->"2884edf2-1a9e-4d38-a3be-6e4bf64b98af"],
Cell[550202, 13274, 1024, 18, 105, "Print",ExpressionUUID->"f5884341-f166-42d8-ac2b-b8bc730d719a"],
Cell[551229, 13294, 470, 10, 45, "Print",ExpressionUUID->"c807aabc-5362-4806-a08f-824f0507cd6d"],
Cell[551702, 13306, 1023, 18, 105, "Print",ExpressionUUID->"6913db0d-9ef1-4ab9-a768-0c16db230030"],
Cell[552728, 13326, 468, 10, 45, "Print",ExpressionUUID->"c32f3692-0171-45e4-8c60-193a9b049ed1"],
Cell[553199, 13338, 447, 10, 25, "Print",ExpressionUUID->"9dd8992a-911b-41cd-80b8-a0d9640b2da7"],
Cell[553649, 13350, 1023, 18, 105, "Print",ExpressionUUID->"4d4fad4f-f208-4930-8c94-3306a86efb4c"],
Cell[554675, 13370, 446, 10, 25, "Print",ExpressionUUID->"32aa3187-30ca-4012-804e-5f057fe1462d"],
Cell[555124, 13382, 468, 10, 45, "Print",ExpressionUUID->"65591671-701f-4792-b1b9-34e834820339"],
Cell[555595, 13394, 468, 10, 45, "Print",ExpressionUUID->"9afabb5f-f391-40fe-be2b-e15dc8992c6b"],
Cell[556066, 13406, 470, 10, 45, "Print",ExpressionUUID->"18c05f66-f39f-403b-9f1b-6dc9fed9c7a4"],
Cell[556539, 13418, 445, 10, 25, "Print",ExpressionUUID->"134897e5-6096-41f1-b7f5-0bc2119ea1e3"]
}, Open  ]],
Cell[556999, 13431, 234, 4, 33, "Output",ExpressionUUID->"9d7b0cdb-1dce-4a1d-b9ec-1801533f1e49"],
Cell[557236, 13437, 193, 2, 33, "Output",ExpressionUUID->"e7aa1e52-a893-4d91-90f0-e6c89a22b4b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[557466, 13444, 5282, 134, 242, "Input",ExpressionUUID->"261040a0-11db-4c1f-9f30-64d4763d6b3a"],
Cell[562751, 13580, 505, 11, 28, "Message",ExpressionUUID->"f0457315-a072-408e-8027-200384a20b63"],
Cell[563259, 13593, 67544, 1132, 569, "Output",ExpressionUUID->"89133be2-bb57-48fb-bcda-05503c451b34"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[630852, 14731, 576, 19, 113, "Title",ExpressionUUID->"7c6850e5-e4dc-4911-9110-3a9220dfea36"],
Cell[CellGroupData[{
Cell[631453, 14754, 29968, 802, 2553, "Input",ExpressionUUID->"42c1fe89-48fe-40a8-bb15-2096f022a980"],
Cell[661424, 15558, 420, 7, 33, "Output",ExpressionUUID->"9db8c61d-934a-413b-aa46-bf51b3cfe3d0"],
Cell[661847, 15567, 378, 5, 33, "Output",ExpressionUUID->"58eaca39-e39a-4c4f-8177-f8f5cea4f64e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[662274, 15578, 591, 19, 113, "Title",ExpressionUUID->"2c9aa79c-3292-4b83-bb56-0469fc10fb01"],
Cell[CellGroupData[{
Cell[662890, 15601, 31897, 861, 2580, "Input",ExpressionUUID->"a5509e41-7c9d-473d-9ac1-28a2e3f3717c"],
Cell[CellGroupData[{
Cell[694812, 16466, 744, 15, 45, "Print",ExpressionUUID->"2be45acc-710a-43a0-a8cb-314f00b1399e"],
Cell[695559, 16483, 744, 15, 45, "Print",ExpressionUUID->"b2cd3889-e8b7-4785-9c51-a5a4b206198f"],
Cell[696306, 16500, 760, 15, 45, "Print",ExpressionUUID->"9605f72c-d33c-4697-8a61-baad80ca2586"],
Cell[697069, 16517, 758, 15, 45, "Print",ExpressionUUID->"614a1f45-d698-43c7-bc2d-5beecd3114fe"],
Cell[697830, 16534, 757, 15, 45, "Print",ExpressionUUID->"3b7b6da5-3296-412e-bba4-c703b1b9c867"],
Cell[698590, 16551, 756, 15, 45, "Print",ExpressionUUID->"a9545c50-656f-4181-96cb-09cf8dae11b4"],
Cell[699349, 16568, 443, 10, 25, "Print",ExpressionUUID->"88aa6746-a662-4029-947d-b6999591cd07"],
Cell[699795, 16580, 443, 10, 25, "Print",ExpressionUUID->"7c1b9027-3ef0-4d1a-aeca-6d32b0f951b7"],
Cell[700241, 16592, 746, 15, 45, "Print",ExpressionUUID->"333de6dc-195f-4ac9-839d-4d0b1d409592"],
Cell[700990, 16609, 758, 15, 45, "Print",ExpressionUUID->"988bf993-d407-4773-b977-ab3a2208bb96"],
Cell[701751, 16626, 757, 15, 45, "Print",ExpressionUUID->"09b73cd7-02e5-44cb-bfb4-d49a2220075d"],
Cell[702511, 16643, 445, 10, 25, "Print",ExpressionUUID->"e0944176-5154-4069-a30c-1a5843593485"],
Cell[702959, 16655, 746, 15, 45, "Print",ExpressionUUID->"04d1cc6f-bb00-4410-8d32-5eb55d9d12be"],
Cell[703708, 16672, 758, 15, 45, "Print",ExpressionUUID->"09f3cc60-077b-40fd-859b-9cd7a945e918"],
Cell[704469, 16689, 757, 15, 45, "Print",ExpressionUUID->"28d13c9f-562f-4bc1-9484-0dfeae019e87"],
Cell[705229, 16706, 442, 10, 25, "Print",ExpressionUUID->"42bb62b1-6a65-424e-9d21-cbd264f6e379"],
Cell[705674, 16718, 744, 15, 45, "Print",ExpressionUUID->"0937fd9f-0221-48a1-b0c5-659a6d876894"],
Cell[706421, 16735, 758, 15, 45, "Print",ExpressionUUID->"8ec4ef07-f215-4831-b2e3-bd7b0f46c70c"],
Cell[707182, 16752, 757, 15, 45, "Print",ExpressionUUID->"4b2103fc-f1d0-4420-9d78-7024cc2a8bd9"],
Cell[707942, 16769, 441, 10, 25, "Print",ExpressionUUID->"5194f742-ed96-453e-aa01-5fbbf9bc7172"],
Cell[708386, 16781, 744, 15, 45, "Print",ExpressionUUID->"96af83e7-fde7-4b38-b7a2-ce0306ca4273"],
Cell[709133, 16798, 758, 15, 45, "Print",ExpressionUUID->"7490d762-1bac-461a-8b78-30443523cba2"],
Cell[709894, 16815, 757, 15, 45, "Print",ExpressionUUID->"0c05b54f-eca0-4d0f-930d-814a3e25a6b0"],
Cell[710654, 16832, 443, 10, 25, "Print",ExpressionUUID->"7267e3db-b706-464a-8d9c-b33005111c77"],
Cell[711100, 16844, 744, 15, 45, "Print",ExpressionUUID->"df36a3a4-0ad1-4fae-87d9-3f3314df8083"],
Cell[711847, 16861, 760, 15, 45, "Print",ExpressionUUID->"d3db9364-fccb-42db-8c78-0397617673b5"],
Cell[712610, 16878, 759, 15, 45, "Print",ExpressionUUID->"89459d80-1048-4076-9f93-398aa2cf9b5c"],
Cell[713372, 16895, 443, 10, 25, "Print",ExpressionUUID->"fb5ea0e3-b263-44a3-9264-8837053bebcc"],
Cell[713818, 16907, 744, 15, 45, "Print",ExpressionUUID->"eb9b93d7-4ca2-4e47-8408-88cdb3614a74"],
Cell[714565, 16924, 760, 15, 45, "Print",ExpressionUUID->"20003d50-33ae-4e7f-9db3-c172258affc9"],
Cell[715328, 16941, 759, 15, 45, "Print",ExpressionUUID->"13c287e1-f701-4152-99ca-659a4e022f89"],
Cell[716090, 16958, 443, 10, 25, "Print",ExpressionUUID->"854495f1-b0dd-4a81-b2e6-bcca643ff604"],
Cell[716536, 16970, 746, 15, 45, "Print",ExpressionUUID->"6a2940b8-3e2a-4b6d-bea9-d262d7b7700c"],
Cell[717285, 16987, 758, 15, 45, "Print",ExpressionUUID->"261740ab-5da2-43ba-a539-9bd9c5d7d7ff"],
Cell[718046, 17004, 757, 15, 45, "Print",ExpressionUUID->"098f28d0-8917-4523-b8ad-5e89627fa994"],
Cell[718806, 17021, 443, 10, 25, "Print",ExpressionUUID->"0921ad71-97bb-494b-91ac-7f7e338aa626"],
Cell[719252, 17033, 746, 15, 45, "Print",ExpressionUUID->"cc966840-02ee-4a72-b5c0-df70143ff5f9"],
Cell[720001, 17050, 760, 15, 45, "Print",ExpressionUUID->"65f266ab-607c-4eda-ba4f-f3524060c438"],
Cell[720764, 17067, 757, 15, 45, "Print",ExpressionUUID->"5b6fbb25-c4f9-4c0d-abb3-35f8954e6467"],
Cell[721524, 17084, 445, 10, 25, "Print",ExpressionUUID->"a8a36f2e-dd79-41d2-a567-c6c6c0c3e635"],
Cell[721972, 17096, 744, 15, 45, "Print",ExpressionUUID->"78618eda-11e7-4b78-bff5-3d9af7a4506c"],
Cell[722719, 17113, 757, 15, 45, "Print",ExpressionUUID->"6e74bc5f-ee73-4292-8e95-536aefffeb78"],
Cell[723479, 17130, 757, 15, 45, "Print",ExpressionUUID->"b2dfdc1c-9fcf-4b5f-b720-4f0ee83b70a9"],
Cell[724239, 17147, 443, 10, 25, "Print",ExpressionUUID->"df54a7a8-798d-48d1-9284-e17f225e2042"],
Cell[724685, 17159, 742, 15, 45, "Print",ExpressionUUID->"7c719caf-df32-464f-9a4b-5946ef6d61fc"],
Cell[725430, 17176, 757, 15, 45, "Print",ExpressionUUID->"65ae21eb-fb59-4673-a1d6-f685487f078d"],
Cell[726190, 17193, 759, 15, 45, "Print",ExpressionUUID->"5483a6d0-4f81-42f5-a265-5a54a0b5e3b7"],
Cell[726952, 17210, 443, 10, 25, "Print",ExpressionUUID->"ff6b8dba-85bd-428f-ba64-7a662f9b6570"],
Cell[727398, 17222, 746, 15, 45, "Print",ExpressionUUID->"6bd74b52-349c-432a-861f-9a47bdbee678"],
Cell[728147, 17239, 758, 15, 45, "Print",ExpressionUUID->"56cdc6d2-c9c5-41c5-b4a5-1ddf783e324e"],
Cell[728908, 17256, 757, 15, 45, "Print",ExpressionUUID->"d92f1da9-62bb-4b33-8d1b-e0e817dc5116"],
Cell[729668, 17273, 443, 10, 25, "Print",ExpressionUUID->"f97cd09a-e953-43b1-b85b-95f98c1e73a5"],
Cell[730114, 17285, 744, 15, 45, "Print",ExpressionUUID->"8e93662a-bcff-47e6-b8b1-3d555a094a59"],
Cell[730861, 17302, 758, 15, 45, "Print",ExpressionUUID->"804a776a-c4a3-4cbf-9030-8a775e5f27e0"],
Cell[731622, 17319, 757, 15, 45, "Print",ExpressionUUID->"1fb7fa88-5ed2-40dc-b620-c6bf967b1230"],
Cell[732382, 17336, 445, 10, 25, "Print",ExpressionUUID->"14b9da90-5ba7-4ec5-932c-239152213eb8"],
Cell[732830, 17348, 744, 15, 45, "Print",ExpressionUUID->"88742555-0895-44fc-b6de-e9e5f794dad5"],
Cell[733577, 17365, 758, 15, 45, "Print",ExpressionUUID->"43fcbef5-a6dc-4966-8dc5-48684b1e7eeb"],
Cell[734338, 17382, 756, 15, 45, "Print",ExpressionUUID->"173ccca0-0329-49b2-82f0-7e07cf414317"],
Cell[735097, 17399, 443, 10, 25, "Print",ExpressionUUID->"a0442c40-1fad-42b5-b6ec-9f4596979cee"],
Cell[735543, 17411, 744, 15, 45, "Print",ExpressionUUID->"7f73d862-5a8a-432d-bb61-34b104da3b67"],
Cell[736290, 17428, 758, 15, 45, "Print",ExpressionUUID->"f93ccfd7-3707-4d4f-a6d9-46bcf5846306"],
Cell[737051, 17445, 757, 15, 45, "Print",ExpressionUUID->"25315d99-5ffb-45c1-90c7-48509ccef3f9"],
Cell[737811, 17462, 445, 10, 25, "Print",ExpressionUUID->"d09bad06-f7aa-4436-a837-4e9e8cba1c9b"],
Cell[738259, 17474, 744, 15, 45, "Print",ExpressionUUID->"0f1b689b-688f-4265-9157-bdb9013f2d7f"],
Cell[739006, 17491, 758, 15, 45, "Print",ExpressionUUID->"32ab9dba-7576-4ea4-bfb3-4e938867f058"],
Cell[739767, 17508, 759, 15, 45, "Print",ExpressionUUID->"69e863e1-a48a-408a-bdc9-a290ae2314c9"],
Cell[740529, 17525, 445, 10, 25, "Print",ExpressionUUID->"d4773c91-2396-4efd-b7a7-0118a3a2e0ce"],
Cell[740977, 17537, 744, 15, 45, "Print",ExpressionUUID->"912321d1-f30f-4327-a715-006e6ff0e041"],
Cell[741724, 17554, 758, 15, 45, "Print",ExpressionUUID->"66bae033-8ef5-4bd4-87f7-aca44f32a6ed"],
Cell[742485, 17571, 756, 15, 45, "Print",ExpressionUUID->"3858eb1d-390b-479d-a08f-4e2de59f5e23"],
Cell[743244, 17588, 443, 10, 25, "Print",ExpressionUUID->"a445dcec-3d4c-437e-a0ad-9b76ac032717"],
Cell[743690, 17600, 746, 15, 45, "Print",ExpressionUUID->"41b2665e-143f-47bf-960b-bc85c657ad13"],
Cell[744439, 17617, 758, 15, 45, "Print",ExpressionUUID->"f21f5902-9c67-4be7-ae98-1c550c0ac915"],
Cell[745200, 17634, 757, 15, 45, "Print",ExpressionUUID->"d22d76fd-83eb-4347-b19d-44feb9db41e3"],
Cell[745960, 17651, 443, 10, 25, "Print",ExpressionUUID->"b9e6d56f-d8fb-43ed-acf2-265f0a013159"],
Cell[746406, 17663, 744, 15, 45, "Print",ExpressionUUID->"b2e2750e-a3d3-4d18-b4c2-d05bb8626e8b"],
Cell[747153, 17680, 758, 15, 45, "Print",ExpressionUUID->"6bac34f8-4bf0-40af-89c7-f832fbfdda0d"],
Cell[747914, 17697, 757, 15, 45, "Print",ExpressionUUID->"02c07cf0-a2d0-4a84-ba7d-bae7148d3854"],
Cell[748674, 17714, 445, 10, 25, "Print",ExpressionUUID->"fbd42e18-aead-40af-ada7-44be4c1a4ff7"],
Cell[749122, 17726, 746, 15, 45, "Print",ExpressionUUID->"17c7ed39-1513-4583-a224-69b744392ad0"],
Cell[749871, 17743, 758, 15, 45, "Print",ExpressionUUID->"63e9d698-6a60-498b-b1cd-ba59cbd8953a"],
Cell[750632, 17760, 759, 15, 45, "Print",ExpressionUUID->"c0b3becc-dc0f-46d1-a9ab-621118e56f1d"],
Cell[751394, 17777, 445, 10, 25, "Print",ExpressionUUID->"e2e19dd6-3df2-428a-afca-1e101c764366"],
Cell[751842, 17789, 746, 15, 45, "Print",ExpressionUUID->"54ca7971-871a-4e44-9acc-d80e652fb19c"],
Cell[752591, 17806, 758, 15, 45, "Print",ExpressionUUID->"d5ee6553-0563-47a0-a789-ba70b15f0f2e"],
Cell[753352, 17823, 757, 15, 45, "Print",ExpressionUUID->"bceae60e-8337-4842-92fa-ebe00e01f4a4"],
Cell[754112, 17840, 443, 10, 25, "Print",ExpressionUUID->"392a465e-3ac8-4da1-a035-827e03bb7ca1"],
Cell[754558, 17852, 744, 15, 45, "Print",ExpressionUUID->"afbb9d63-d150-4f30-b73f-3ae2b4eb32ba"],
Cell[755305, 17869, 758, 15, 45, "Print",ExpressionUUID->"0908cef6-dd38-453f-a765-1d5aaea33e15"],
Cell[756066, 17886, 759, 15, 45, "Print",ExpressionUUID->"303fb378-3a72-42bb-a41d-fa20265a56b8"],
Cell[756828, 17903, 443, 10, 25, "Print",ExpressionUUID->"83fa1c5c-b4e7-498a-b9d6-be4c9f24b769"],
Cell[757274, 17915, 744, 15, 45, "Print",ExpressionUUID->"25256798-bbb3-42df-914d-19190df5ffe8"],
Cell[758021, 17932, 758, 15, 45, "Print",ExpressionUUID->"3fdab11c-8700-4cb4-9cd2-5146e40ada58"],
Cell[758782, 17949, 757, 15, 45, "Print",ExpressionUUID->"7fe97a06-a935-43e6-b17a-0a1509128ff3"],
Cell[759542, 17966, 443, 10, 25, "Print",ExpressionUUID->"7f978825-6246-49c0-9650-320a789e32eb"],
Cell[759988, 17978, 744, 15, 45, "Print",ExpressionUUID->"1f27bf10-3902-41c0-93e8-7f54b5b3df64"],
Cell[760735, 17995, 758, 15, 45, "Print",ExpressionUUID->"c55be5b7-e9d8-4821-9ded-1e2f72f1aa52"],
Cell[761496, 18012, 757, 15, 45, "Print",ExpressionUUID->"aa8efe60-9194-43dc-afd1-1abc3dbdc117"],
Cell[762256, 18029, 443, 10, 25, "Print",ExpressionUUID->"be56cb76-5216-4720-836a-fff3f688b8f1"],
Cell[762702, 18041, 746, 15, 45, "Print",ExpressionUUID->"ed86b6a9-8451-47b7-8b59-93a6d973010e"],
Cell[763451, 18058, 760, 15, 45, "Print",ExpressionUUID->"6992505d-ef4a-4393-ba02-afb7114b226f"],
Cell[764214, 18075, 759, 15, 45, "Print",ExpressionUUID->"cf914205-62f9-49b8-904a-7de62c451084"],
Cell[764976, 18092, 440, 10, 25, "Print",ExpressionUUID->"6694af92-679e-410e-8b37-077061489145"]
}, Open  ]],
Cell[765431, 18105, 512, 8, 33, "Output",ExpressionUUID->"6d7f5cea-efda-4afc-8502-49b68f56ce2d"],
Cell[765946, 18115, 471, 6, 33, "Output",ExpressionUUID->"b160cbde-e235-4b8a-8a58-88c814a8d6b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[766454, 18126, 4545, 125, 236, "Input",ExpressionUUID->"920f49c8-5618-47ff-a58c-baf1ee4264dd"],
Cell[771002, 18253, 24973, 458, 567, "Output",ExpressionUUID->"17a151df-a112-43ab-9ee9-e0bacb985b50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[796012, 18716, 4961, 116, 182, "Input",ExpressionUUID->"21edfa5d-c6cf-4cb8-8104-377d0c8f0c6b"],
Cell[800976, 18834, 308215, 5097, 557, 276709, 4584, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d37e7b2b-483d-45d7-af98-2802e5dc6f87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1109228, 23936, 2170, 56, 92, "Input",ExpressionUUID->"dec8c92d-1368-4f24-b2f0-ec32913cc617"],
Cell[1111401, 23994, 704013, 11761, 601, 616163, 10320, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b68edf8a-d5ba-441d-a14c-f7f20ba24310"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1815451, 35760, 333, 7, 33, "Input",ExpressionUUID->"1889f875-64b4-47b6-98d2-b3bf076cdc6e"],
Cell[1815787, 35769, 345, 6, 36, "Output",ExpressionUUID->"daf7360b-31ae-4219-917e-ae6ca2ec0647"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1816169, 35780, 25389, 797, 2226, "Input",ExpressionUUID->"60582468-475b-4b0e-a62d-2dc0712e6b02"],
Cell[1841561, 36579, 237, 3, 33, "Output",ExpressionUUID->"1b5afbd8-c181-4b8e-b2bf-08e95f77f59a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1841835, 36587, 614, 15, 60, "Input",ExpressionUUID->"624e9b5d-dae3-4f89-b659-e8bf335d9d5a"],
Cell[1842452, 36604, 240, 3, 33, "Output",ExpressionUUID->"b22b0734-9664-4e2a-ad5d-76c7d11c63d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1842729, 36612, 314, 6, 46, "Input",ExpressionUUID->"3be2624e-f617-408b-adfb-07092830da77"],
Cell[1843046, 36620, 214, 3, 33, "Output",ExpressionUUID->"3469c276-979b-4e06-9ae4-8bae3794d2bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1843297, 36628, 1015, 28, 128, "Input",ExpressionUUID->"c588c586-5efd-42b2-b948-6db00a2405dd"],
Cell[1844315, 36658, 240, 3, 33, "Output",ExpressionUUID->"915ad48f-e489-4313-9fb8-fde41c06e14b"]
}, Open  ]],
Cell[1844570, 36664, 177, 3, 29, "Input",ExpressionUUID->"620d81cf-0644-4371-9bea-f5077a99cb7c"],
Cell[CellGroupData[{
Cell[1844772, 36671, 24087, 758, 2275, "Input",ExpressionUUID->"f0902f0e-d953-46b0-b840-6854bc1ec35d"],
Cell[1868862, 37431, 167, 2, 33, "Output",ExpressionUUID->"02bad7d8-8d76-49b2-ac2d-05c6e4beaec8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1869066, 37438, 398, 12, 60, "Input",ExpressionUUID->"b2279938-7e29-4dc9-be98-af60d39db58c"],
Cell[1869467, 37452, 172, 2, 33, "Output",ExpressionUUID->"0cb87165-6bf7-454f-8706-49607ea34368"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1869676, 37459, 217, 4, 46, "Input",ExpressionUUID->"5fe5b332-5c36-4b53-abb5-dea60468c830"],
Cell[1869896, 37465, 167, 2, 33, "Output",ExpressionUUID->"259ced43-9e63-47cb-82fd-80f833fedac2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1870100, 37472, 355, 9, 45, "Input",ExpressionUUID->"6b0085d3-d104-4487-a5e5-5e979d0e0237"],
Cell[1870458, 37483, 191, 2, 33, "Output",ExpressionUUID->"8befeac7-f6eb-4af0-9c09-acf2c91206e7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1870698, 37491, 542, 18, 113, "Title",ExpressionUUID->"d70e625e-f4a2-423f-be92-694f2332d3a7"],
Cell[CellGroupData[{
Cell[1871265, 37513, 8081, 219, 976, "Input",ExpressionUUID->"d2f738e7-2fd7-4f15-ad1d-6ce8250f9cc8"],
Cell[CellGroupData[{
Cell[1879371, 37736, 470, 10, 45, "Print",ExpressionUUID->"c33c1adb-fe97-4c22-be8f-09cd81a7bed2"],
Cell[1879844, 37748, 1033, 18, 105, "Print",ExpressionUUID->"f7783690-942b-4a6a-9847-227eb95a0cf7"],
Cell[1880880, 37768, 468, 10, 45, "Print",ExpressionUUID->"ef8548dd-6b8e-4f5f-913a-fe070a8ac3ee"],
Cell[1881351, 37780, 1025, 18, 105, "Print",ExpressionUUID->"4ddf4274-d98d-41b3-b607-e08ac1a2715f"],
Cell[1882379, 37800, 468, 10, 45, "Print",ExpressionUUID->"7e7f6c29-6290-44e3-842a-1e847c69a1b5"],
Cell[1882850, 37812, 447, 10, 25, "Print",ExpressionUUID->"dd7c87c4-c9c5-4dfc-a510-e01d4c3ab7da"],
Cell[1883300, 37824, 1023, 18, 105, "Print",ExpressionUUID->"bec1f201-5d5b-413c-94b6-36dcaefa29f4"],
Cell[1884326, 37844, 444, 10, 25, "Print",ExpressionUUID->"4a9090ca-608b-426c-8e32-ef053221105e"],
Cell[1884773, 37856, 468, 10, 45, "Print",ExpressionUUID->"d61538e5-86ad-4c35-800b-fb7b29d62b75"],
Cell[1885244, 37868, 468, 10, 45, "Print",ExpressionUUID->"b9da3ffa-2bf4-4ddb-88e2-1cca0c0f16c9"],
Cell[1885715, 37880, 468, 10, 45, "Print",ExpressionUUID->"017d118d-b156-48d0-8612-aab01765c9db"],
Cell[1886186, 37892, 468, 10, 45, "Print",ExpressionUUID->"45b0af28-fd32-47ac-bf47-085e8e4d0996"],
Cell[1886657, 37904, 468, 10, 45, "Print",ExpressionUUID->"883673a2-6bc3-4c3d-9f58-662f3f98e53f"],
Cell[1887128, 37916, 468, 10, 45, "Print",ExpressionUUID->"689b7a98-263a-497d-a630-a949f1140f3c"],
Cell[1887599, 37928, 445, 10, 25, "Print",ExpressionUUID->"89c16ef0-64a9-4915-bfbd-7e9740b7deac"],
Cell[1888047, 37940, 445, 10, 25, "Print",ExpressionUUID->"b6aaf843-ac85-4773-b3ea-31390f2e2d30"],
Cell[1888495, 37952, 468, 10, 45, "Print",ExpressionUUID->"c9475f17-8265-473a-bf50-03138b758776"],
Cell[1888966, 37964, 468, 10, 45, "Print",ExpressionUUID->"6325cb8e-3d49-41aa-9286-b0b68c578a51"],
Cell[1889437, 37976, 468, 10, 45, "Print",ExpressionUUID->"21a1c4f5-c68d-49e5-89cb-c395655ca2f9"],
Cell[1889908, 37988, 445, 10, 25, "Print",ExpressionUUID->"d7d280d3-a5c1-46b4-a8fe-13da4e55d77b"]
}, Open  ]],
Cell[1890368, 38001, 275, 5, 33, "Output",ExpressionUUID->"1cb0b1bb-5111-43f3-8c7f-c2874dd3c097"],
Cell[1890646, 38008, 234, 3, 33, "Output",ExpressionUUID->"a315db1e-3f6b-4a06-aa5e-a15991793982"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1890929, 38017, 552, 18, 175, "Title",ExpressionUUID->"02a89ed0-736b-4c86-8e1d-69bdf394def8"],
Cell[CellGroupData[{
Cell[1891506, 38039, 10058, 264, 1028, "Input",ExpressionUUID->"cea85809-3c5e-4af3-a984-92894fe2aad7"],
Cell[CellGroupData[{
Cell[1901589, 38307, 467, 10, 45, "Print",ExpressionUUID->"261be659-da73-4a8c-a61f-2d9db2fa8bd9"],
Cell[1902059, 38319, 1035, 18, 105, "Print",ExpressionUUID->"13362f88-b1bb-4f7c-abb2-6f2e8067f093"],
Cell[1903097, 38339, 468, 10, 45, "Print",ExpressionUUID->"e9898db7-0349-4477-a260-191ac2d1b02a"],
Cell[1903568, 38351, 468, 10, 45, "Print",ExpressionUUID->"69bd1eed-8563-4d28-9011-c6b54567d368"],
Cell[1904039, 38363, 1022, 18, 105, "Print",ExpressionUUID->"1500e8f2-71dc-43b1-9c60-04945bb8bdbd"],
Cell[1905064, 38383, 468, 10, 45, "Print",ExpressionUUID->"7ed7f2d6-4963-4978-9782-49774704a3d8"],
Cell[1905535, 38395, 445, 10, 25, "Print",ExpressionUUID->"ecc23a29-9291-4832-8b1b-2808d62e58c4"],
Cell[1905983, 38407, 1023, 18, 105, "Print",ExpressionUUID->"8a5cd368-0cb0-45eb-aae0-b4e8ba3df76d"],
Cell[1907009, 38427, 468, 10, 45, "Print",ExpressionUUID->"aec10b04-f40c-4b67-a61c-e088c5824e4e"],
Cell[1907480, 38439, 1025, 18, 105, "Print",ExpressionUUID->"1f691721-a3b3-49fe-9836-4dada923c48a"],
Cell[1908508, 38459, 443, 10, 25, "Print",ExpressionUUID->"fa28a762-7e8a-4289-a0dc-c08804f5506d"],
Cell[1908954, 38471, 468, 10, 45, "Print",ExpressionUUID->"5e081057-e3b2-47e5-9263-4b56759f9b13"],
Cell[1909425, 38483, 445, 10, 25, "Print",ExpressionUUID->"ee2ea26e-d54d-4df3-bfd9-e45a2e5d2743"],
Cell[1909873, 38495, 468, 10, 45, "Print",ExpressionUUID->"fcde4057-f336-41c3-9a76-e2c01395d48c"],
Cell[1910344, 38507, 468, 10, 45, "Print",ExpressionUUID->"a0558e52-b530-4814-b2b7-d967e8e80b89"],
Cell[1910815, 38519, 468, 10, 45, "Print",ExpressionUUID->"582b28fa-1149-49b8-b102-ca413dcc753a"],
Cell[1911286, 38531, 445, 10, 25, "Print",ExpressionUUID->"4159a587-5e9e-4a7c-aba2-4a44d362f82c"],
Cell[1911734, 38543, 1026, 18, 105, "Print",ExpressionUUID->"e48a6916-9c07-48eb-8a0f-8ac5675570fd"],
Cell[1912763, 38563, 468, 10, 45, "Print",ExpressionUUID->"141f10f3-c2c8-4ccc-8f10-f81ae6c7159d"],
Cell[1913234, 38575, 467, 10, 45, "Print",ExpressionUUID->"5408d735-394c-407e-ae97-8f5a25b073e6"],
Cell[1913704, 38587, 467, 10, 45, "Print",ExpressionUUID->"dc10d89e-740f-440c-b342-81dd66daf081"],
Cell[1914174, 38599, 468, 10, 45, "Print",ExpressionUUID->"6890fe50-5425-423c-859a-171d2bfa6f25"],
Cell[1914645, 38611, 447, 10, 25, "Print",ExpressionUUID->"d11b6b29-8769-4940-9b5c-493834713b3a"],
Cell[1915095, 38623, 470, 10, 45, "Print",ExpressionUUID->"43357377-c4eb-49f1-af90-c75a88c9b36a"],
Cell[1915568, 38635, 468, 10, 45, "Print",ExpressionUUID->"ed378d29-f859-4a3d-bfeb-792e50b91870"],
Cell[1916039, 38647, 470, 10, 45, "Print",ExpressionUUID->"6131f7fd-e74d-4dd1-8019-e9cdd5dac929"],
Cell[1916512, 38659, 447, 10, 25, "Print",ExpressionUUID->"4cc37b58-2a6c-43de-a288-b61cb437491d"],
Cell[1916962, 38671, 468, 10, 45, "Print",ExpressionUUID->"b43e28f1-c3cc-4b73-86e8-9ed950758133"],
Cell[1917433, 38683, 470, 10, 45, "Print",ExpressionUUID->"7c22d839-f523-496f-b444-8d98b8e8e642"],
Cell[1917906, 38695, 468, 10, 45, "Print",ExpressionUUID->"41fe317c-824d-4636-a048-8dd6b9109e8c"],
Cell[1918377, 38707, 445, 10, 25, "Print",ExpressionUUID->"478705c6-8ae2-4328-86d4-4698af395f85"]
}, Open  ]],
Cell[1918837, 38720, 229, 4, 33, "Output",ExpressionUUID->"3f3330cf-8cef-4754-b82a-fecdb6a18c11"],
Cell[1919069, 38726, 189, 2, 33, "Output",ExpressionUUID->"bed60b16-8e6e-4387-bee6-6f461eb3171a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1919307, 38734, 543, 18, 113, "Title",ExpressionUUID->"d8cd7aa9-c352-417f-9671-daa1c519625e"],
Cell[CellGroupData[{
Cell[1919875, 38756, 8594, 238, 1142, "Input",ExpressionUUID->"eac57cc6-12c5-4d25-85fc-4e66e8cbe70d"],
Cell[CellGroupData[{
Cell[1928494, 38998, 468, 10, 45, "Print",ExpressionUUID->"13e0a6ef-9502-4b42-ae2c-e56a13832457"],
Cell[1928965, 39010, 468, 10, 45, "Print",ExpressionUUID->"bee515a2-6af5-4243-881e-ae1bc6ddd43f"],
Cell[1929436, 39022, 1035, 18, 105, "Print",ExpressionUUID->"a2bf1a6e-2363-4fc0-80ca-30b45e0231f3"],
Cell[1930474, 39042, 1034, 18, 105, "Print",ExpressionUUID->"564fd99f-8f98-43b1-8214-ba5b1e437bb1"],
Cell[1931511, 39062, 468, 10, 45, "Print",ExpressionUUID->"bd498320-cb02-4f6a-9340-f9891b9fe992"],
Cell[1931982, 39074, 470, 10, 45, "Print",ExpressionUUID->"c149bb25-09a0-4ed6-b798-0b2eae50caf1"],
Cell[1932455, 39086, 1023, 18, 105, "Print",ExpressionUUID->"a2921013-3fe6-48c5-be51-304e9007768f"],
Cell[1933481, 39106, 1022, 18, 105, "Print",ExpressionUUID->"bfae03de-ebb9-43a4-9a4d-b22ecd4503d9"],
Cell[1934506, 39126, 470, 10, 45, "Print",ExpressionUUID->"a69a009d-8000-4064-914b-a0817177e12d"],
Cell[1934979, 39138, 445, 10, 25, "Print",ExpressionUUID->"fed4c19c-43b7-49bb-99a2-d19abbdfdb3e"],
Cell[1935427, 39150, 468, 10, 45, "Print",ExpressionUUID->"b4ef1f43-65a8-4848-a2a4-6728e392f013"],
Cell[1935898, 39162, 1026, 18, 105, "Print",ExpressionUUID->"00c92aa9-7fa6-4920-aecb-01247ad32125"],
Cell[1936927, 39182, 447, 10, 25, "Print",ExpressionUUID->"8159fabf-dca3-48e6-8fa4-66405384714b"],
Cell[1937377, 39194, 444, 10, 25, "Print",ExpressionUUID->"8562802b-51dd-471c-a142-ad63098fb23a"],
Cell[1937824, 39206, 1024, 18, 105, "Print",ExpressionUUID->"60d3f4b8-a054-4a3a-8a92-6d0bca1dc0e7"],
Cell[1938851, 39226, 444, 10, 25, "Print",ExpressionUUID->"2604af54-f9d9-492b-b3e0-834f0cf07753"],
Cell[1939298, 39238, 468, 10, 45, "Print",ExpressionUUID->"f90c7de8-caca-4ef6-a46c-1ab60fd03fff"],
Cell[1939769, 39250, 1024, 18, 105, "Print",ExpressionUUID->"a1dde016-eef0-4d44-9a80-86f02817c2dd"],
Cell[1940796, 39270, 468, 10, 45, "Print",ExpressionUUID->"27280db6-db31-448f-9123-ad2d1470ead3"],
Cell[1941267, 39282, 1024, 18, 105, "Print",ExpressionUUID->"d42a36be-334c-4cd6-a8a2-14e7b97d85b3"],
Cell[1942294, 39302, 468, 10, 45, "Print",ExpressionUUID->"6f225e4e-cfc4-4359-9b65-4941c6680528"],
Cell[1942765, 39314, 445, 10, 25, "Print",ExpressionUUID->"683610c2-311a-456c-a2d7-7c58147e1073"],
Cell[1943213, 39326, 1022, 18, 105, "Print",ExpressionUUID->"554b53ac-3079-482d-a1c0-4012de77c767"],
Cell[1944238, 39346, 468, 10, 45, "Print",ExpressionUUID->"0934e580-9fb8-44dc-956b-7dd7addc1660"],
Cell[1944709, 39358, 444, 10, 25, "Print",ExpressionUUID->"56b31850-c9ac-4a3a-ba4c-a9d8e3157e8a"],
Cell[1945156, 39370, 1024, 18, 105, "Print",ExpressionUUID->"2448ff82-7d52-487d-ba60-aa304d93f840"],
Cell[1946183, 39390, 468, 10, 45, "Print",ExpressionUUID->"9eebbf8b-1051-4b6c-a11e-923035ec10ed"],
Cell[1946654, 39402, 1022, 18, 105, "Print",ExpressionUUID->"c86abcb5-18b5-42ae-aaac-350c5c6b61dd"],
Cell[1947679, 39422, 468, 10, 45, "Print",ExpressionUUID->"b05430b0-dd1f-4e8c-b429-8bc8c317df00"],
Cell[1948150, 39434, 445, 10, 25, "Print",ExpressionUUID->"251d2a29-25a7-4d70-9f86-c960978f1446"],
Cell[1948598, 39446, 1032, 18, 105, "Print",ExpressionUUID->"06df208c-3331-4c36-a4ac-9a5786f91604"],
Cell[1949633, 39466, 444, 10, 25, "Print",ExpressionUUID->"2234c0cb-c43a-4c90-85cc-81a0f6256d86"],
Cell[1950080, 39478, 470, 10, 45, "Print",ExpressionUUID->"88764104-fda4-4738-a009-570ef8d64bda"],
Cell[1950553, 39490, 1023, 18, 105, "Print",ExpressionUUID->"855324cb-85b6-49e0-bcde-22568e3abceb"],
Cell[1951579, 39510, 468, 10, 45, "Print",ExpressionUUID->"bd3f85dd-9be6-436f-bf96-5e601be1f345"],
Cell[1952050, 39522, 1023, 18, 105, "Print",ExpressionUUID->"b9317604-5481-4ef0-911c-bc5dcb7bda59"],
Cell[1953076, 39542, 470, 10, 45, "Print",ExpressionUUID->"f61bed44-b266-4033-8c46-7e9d9ced8cbc"],
Cell[1953549, 39554, 445, 10, 25, "Print",ExpressionUUID->"f2035f57-42c8-4cd9-9bd5-0e22d5f85245"],
Cell[1953997, 39566, 1035, 18, 105, "Print",ExpressionUUID->"9470d9a6-13e2-4f0e-8330-a28d31c8a6bb"],
Cell[1955035, 39586, 444, 10, 25, "Print",ExpressionUUID->"2d1eb28b-aef6-48f9-884c-6f68df0b1298"],
Cell[1955482, 39598, 470, 10, 45, "Print",ExpressionUUID->"44c119ec-1c51-4697-af18-6935ccfdb902"],
Cell[1955955, 39610, 1036, 18, 105, "Print",ExpressionUUID->"387d8fe7-8cac-4a45-9ec1-f9d825f4cef1"],
Cell[1956994, 39630, 468, 10, 45, "Print",ExpressionUUID->"b81c7b63-d252-437c-a4dd-940f439e77ed"],
Cell[1957465, 39642, 1023, 18, 105, "Print",ExpressionUUID->"98ff79b7-cda1-4fc2-bea1-0d8b24cf2687"],
Cell[1958491, 39662, 468, 10, 45, "Print",ExpressionUUID->"d1573370-a8e4-4e66-bcf3-69d585530673"],
Cell[1958962, 39674, 447, 10, 25, "Print",ExpressionUUID->"267c4b37-e613-4fe1-9017-6b0c6110b72e"],
Cell[1959412, 39686, 1025, 18, 105, "Print",ExpressionUUID->"472457be-aea7-4563-841d-9b3789cd8f74"],
Cell[1960440, 39706, 444, 10, 25, "Print",ExpressionUUID->"41bea401-88b1-487b-b248-46175c7b560e"],
Cell[1960887, 39718, 467, 10, 45, "Print",ExpressionUUID->"1814b064-d222-4b37-a6bf-b06fd7036d40"],
Cell[1961357, 39730, 470, 10, 45, "Print",ExpressionUUID->"23bcfc66-2e1a-4f91-a00a-4ab8983aa8cd"],
Cell[1961830, 39742, 468, 10, 45, "Print",ExpressionUUID->"97970344-f77d-4ead-a576-b940d9d921ff"],
Cell[1962301, 39754, 445, 10, 25, "Print",ExpressionUUID->"a34aae7f-809a-4651-a217-a2733dd0f69f"],
Cell[1962749, 39766, 467, 10, 45, "Print",ExpressionUUID->"a8147f72-059b-45c8-a56e-631d49132761"],
Cell[1963219, 39778, 468, 10, 45, "Print",ExpressionUUID->"1093ed46-e975-4abb-9686-e4209b657e03"],
Cell[1963690, 39790, 468, 10, 45, "Print",ExpressionUUID->"eefd2f90-7813-4775-b922-26c2fc4f88ad"],
Cell[1964161, 39802, 445, 10, 25, "Print",ExpressionUUID->"9e8cf2e6-f5a5-46b9-a4f8-ea00958b3824"]
}, Open  ]],
Cell[1964621, 39815, 227, 4, 33, "Output",ExpressionUUID->"7edb7b5f-75e7-4ed5-b493-87da21c07f71"],
Cell[1964851, 39821, 189, 2, 33, "Output",ExpressionUUID->"bd4f6a0e-2e38-4b5a-ac45-a16009fbbe05"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1965089, 39829, 553, 18, 175, "Title",ExpressionUUID->"0eaa386d-5319-448a-b1c9-b791aab5ae78"],
Cell[CellGroupData[{
Cell[1965667, 39851, 10077, 277, 1178, "Input",ExpressionUUID->"5c46eda5-5301-4ae2-b5bb-624226b63541"],
Cell[CellGroupData[{
Cell[1975769, 40132, 468, 10, 45, "Print",ExpressionUUID->"5e0326db-ec8e-4532-b30a-4c419a15c2eb"],
Cell[1976240, 40144, 468, 10, 45, "Print",ExpressionUUID->"5cf97329-1f58-4562-ba76-06b9421f947a"],
Cell[1976711, 40156, 1025, 18, 105, "Print",ExpressionUUID->"6c138405-a7c8-453b-9770-318604e13045"],
Cell[1977739, 40176, 468, 10, 45, "Print",ExpressionUUID->"da75d5f7-526c-49cd-b40a-b966ad8fb396"],
Cell[1978210, 40188, 1035, 18, 105, "Print",ExpressionUUID->"5f7cc4a1-f612-4ae8-ac31-1c3bb49db711"],
Cell[1979248, 40208, 1022, 18, 105, "Print",ExpressionUUID->"b419a6d3-9e90-4d29-bd09-2129aab7300a"],
Cell[1980273, 40228, 468, 10, 45, "Print",ExpressionUUID->"8d4a84a4-056a-4c5f-83c4-3b31db1be227"],
Cell[1980744, 40240, 468, 10, 45, "Print",ExpressionUUID->"4a083e2c-e66b-46b7-aa41-5925d4dadaf4"],
Cell[1981215, 40252, 1034, 18, 105, "Print",ExpressionUUID->"399405ca-dc5c-4202-a011-4b1518076834"],
Cell[1982252, 40272, 444, 10, 25, "Print",ExpressionUUID->"0bc1c6a3-4029-4102-ac5c-5f35debecf4c"],
Cell[1982699, 40284, 1023, 18, 105, "Print",ExpressionUUID->"7727d1d6-0872-4147-9504-e8e969266c5f"],
Cell[1983725, 40304, 444, 10, 25, "Print",ExpressionUUID->"d716a855-5ef3-413b-bad9-1c652a549fe7"],
Cell[1984172, 40316, 468, 10, 45, "Print",ExpressionUUID->"c796b29a-5ff9-404a-b886-026477ddedbd"],
Cell[1984643, 40328, 445, 10, 25, "Print",ExpressionUUID->"6bfbef4b-a0d6-451d-bd6a-bae79ccb44b5"],
Cell[1985091, 40340, 1022, 18, 105, "Print",ExpressionUUID->"ca164bfe-9500-44e7-abb5-e3390924c1fb"],
Cell[1986116, 40360, 444, 10, 25, "Print",ExpressionUUID->"41206ac1-203c-44b4-853e-a3da51d89741"],
Cell[1986563, 40372, 468, 10, 45, "Print",ExpressionUUID->"7500cb73-1e22-4c0a-a9cc-157dac4e63c4"],
Cell[1987034, 40384, 1023, 18, 105, "Print",ExpressionUUID->"24e4d770-c687-4247-99cf-371f51fe3da4"],
Cell[1988060, 40404, 468, 10, 45, "Print",ExpressionUUID->"701fdc15-3889-4966-9bdd-a0f9fff17326"],
Cell[1988531, 40416, 1022, 18, 105, "Print",ExpressionUUID->"8a1ffa28-b789-4aa4-b1ea-042fa22a91c9"],
Cell[1989556, 40436, 468, 10, 45, "Print",ExpressionUUID->"4a13b2c8-6183-4292-8288-0c7b3533cfcd"],
Cell[1990027, 40448, 445, 10, 25, "Print",ExpressionUUID->"e1deae12-515c-446e-9c99-fef53247d901"],
Cell[1990475, 40460, 1025, 18, 105, "Print",ExpressionUUID->"9727096e-7179-4abe-927b-cb1810dd0227"],
Cell[1991503, 40480, 444, 10, 25, "Print",ExpressionUUID->"8e33eb33-0d4a-489f-9e54-6f547ec4643e"],
Cell[1991950, 40492, 468, 10, 45, "Print",ExpressionUUID->"89afb27f-43df-40c0-9054-854d40fe052c"],
Cell[1992421, 40504, 1024, 18, 105, "Print",ExpressionUUID->"19962508-e670-48c4-a7e6-58eb6f9036f9"],
Cell[1993448, 40524, 468, 10, 45, "Print",ExpressionUUID->"ab9b049e-54c1-4e43-aa1f-7102531704f6"],
Cell[1993919, 40536, 1024, 18, 105, "Print",ExpressionUUID->"6cdd1b37-af6e-473c-8833-0d73a0ab3283"],
Cell[1994946, 40556, 468, 10, 45, "Print",ExpressionUUID->"d3c02e69-a797-4295-9103-590a896c174a"],
Cell[1995417, 40568, 447, 10, 25, "Print",ExpressionUUID->"95fb42c5-f279-41dd-983e-b829f3d50ef1"],
Cell[1995867, 40580, 1025, 18, 105, "Print",ExpressionUUID->"58d9d21c-af92-4fbf-96d2-f855e4f50f20"],
Cell[1996895, 40600, 444, 10, 25, "Print",ExpressionUUID->"1281a98e-8bec-4de0-b6fd-175a7baa07ba"],
Cell[1997342, 40612, 468, 10, 45, "Print",ExpressionUUID->"763f89ee-6d08-4159-86fb-df29bc852b51"],
Cell[1997813, 40624, 468, 10, 45, "Print",ExpressionUUID->"f075afe2-ebd9-4a0d-84d2-e012b0c296d8"],
Cell[1998284, 40636, 1023, 18, 105, "Print",ExpressionUUID->"677d1abb-92a2-4fc4-a61c-48ddec116ad3"],
Cell[1999310, 40656, 468, 10, 45, "Print",ExpressionUUID->"8a5dd701-a4d0-4edf-bc52-59f519631892"],
Cell[1999781, 40668, 447, 10, 25, "Print",ExpressionUUID->"ac227c54-3f24-42ec-9c14-0363abd784ba"],
Cell[2000231, 40680, 1023, 18, 105, "Print",ExpressionUUID->"ba464c12-b0da-4313-9378-74fc3f874152"],
Cell[2001257, 40700, 1024, 18, 105, "Print",ExpressionUUID->"fd2e55d7-603f-4095-8926-5f74097884ac"],
Cell[2002284, 40720, 443, 10, 25, "Print",ExpressionUUID->"de4073fc-d686-4789-9f43-fab58641a59d"],
Cell[2002730, 40732, 470, 10, 45, "Print",ExpressionUUID->"77002927-af4c-4b68-80fb-93853afc8c1e"],
Cell[2003203, 40744, 468, 10, 45, "Print",ExpressionUUID->"d666ef65-52f0-433b-a8f6-6d179ccfcfcb"],
Cell[2003674, 40756, 470, 10, 45, "Print",ExpressionUUID->"2e6f1eb5-35ba-4d40-a2bd-3db9621a4339"],
Cell[2004147, 40768, 447, 10, 25, "Print",ExpressionUUID->"413ae1a6-0d3b-441d-b9bf-49eaf294c685"],
Cell[2004597, 40780, 1025, 18, 105, "Print",ExpressionUUID->"250f70a5-3890-4637-b1f5-3efeb00dbaa6"],
Cell[2005625, 40800, 1026, 18, 105, "Print",ExpressionUUID->"ee3f772c-caf1-4cd5-bd66-7228c31a7eb2"],
Cell[2006654, 40820, 1024, 18, 105, "Print",ExpressionUUID->"45273a60-6d06-4a3a-a37b-b641e898fa8a"],
Cell[2007681, 40840, 446, 10, 25, "Print",ExpressionUUID->"439e19a2-4fb2-4b18-b088-3061a2dae885"],
Cell[2008130, 40852, 468, 10, 45, "Print",ExpressionUUID->"1503801b-a735-4e5f-a89e-9e29c0641c16"],
Cell[2008601, 40864, 470, 10, 45, "Print",ExpressionUUID->"66f9d67a-6205-4fd5-b4e8-e665a3d494f7"],
Cell[2009074, 40876, 470, 10, 45, "Print",ExpressionUUID->"76c6deb8-35ce-4403-b25d-307ca5d6d2d1"],
Cell[2009547, 40888, 445, 10, 25, "Print",ExpressionUUID->"7bb37379-e072-4e5b-8354-d6be8b8928a3"],
Cell[2009995, 40900, 1023, 18, 105, "Print",ExpressionUUID->"3f9a3d4f-5d0c-4e18-99ca-fd14e1b8bde9"],
Cell[2011021, 40920, 467, 10, 45, "Print",ExpressionUUID->"cd91c6c3-fc92-41f0-afa8-5ca56e908836"],
Cell[2011491, 40932, 468, 10, 45, "Print",ExpressionUUID->"9bf2dfc7-a616-411e-9852-541e7b52dc9c"],
Cell[2011962, 40944, 470, 10, 45, "Print",ExpressionUUID->"4df6b017-8f2f-445f-be08-06eab305e7a9"],
Cell[2012435, 40956, 444, 10, 25, "Print",ExpressionUUID->"897591de-f1e5-4222-89c5-f7e751880709"]
}, Open  ]],
Cell[2012894, 40969, 206, 4, 33, "Output",ExpressionUUID->"ae6367bc-8664-4475-a700-453ef78235ab"],
Cell[2013103, 40975, 169, 2, 33, "Output",ExpressionUUID->"d9a9f393-2a66-4b48-95a5-dc30668c6259"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2013309, 40982, 4507, 123, 237, "Input",ExpressionUUID->"7a220dcb-84f7-42f1-8e36-9435603abb15"],
Cell[2017819, 41107, 10079, 217, 569, "Output",ExpressionUUID->"f107c54d-3765-42bd-9702-1482fae3655b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2027935, 41329, 4259, 119, 237, "Input",ExpressionUUID->"d3b85dfd-1773-4aec-ba14-f5b2402a2d0d"],
Cell[2032197, 41450, 9921, 215, 569, "Output",ExpressionUUID->"5780ebe6-7cf8-4bbe-8037-8d9c9be055df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2042155, 41670, 3882, 104, 201, "Input",ExpressionUUID->"dc7c75de-5aba-4ac0-a97e-953e64361953"],
Cell[2046040, 41776, 503, 11, 28, "Message",ExpressionUUID->"6fa456c8-6cb5-4f01-b251-5d5bb95bdb46"],
Cell[2046546, 41789, 7128, 165, 535, "Output",ExpressionUUID->"3dbd81a1-fad6-4284-8276-6befbcc4087a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2053711, 41959, 4506, 124, 242, "Input",ExpressionUUID->"3a8324b8-3986-407e-861d-6b27c23fca80"],
Cell[2058220, 42085, 74682, 1248, 569, "Output",ExpressionUUID->"42b3f857-10cf-4510-96f0-17a47de5d522"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2132939, 43338, 5181, 134, 242, "Input",ExpressionUUID->"d96df2df-591a-477d-bdd4-be9980225082"],
Cell[2138123, 43474, 12880, 266, 569, "Output",ExpressionUUID->"f74b7c1a-5aac-4c82-b509-124eb7afc2fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2151040, 43745, 2355, 58, 92, "Input",ExpressionUUID->"f6535961-de31-46e6-a6f4-922bf5b8f7cd"],
Cell[2153398, 43805, 193250, 3402, 601, "Output",ExpressionUUID->"d76bec0a-1936-46e7-b1be-9ef0b3ba0eb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2346685, 47212, 331, 7, 33, "Input",ExpressionUUID->"e7f525c6-a1d8-43a8-9804-5a9044ed46bb"],
Cell[2347019, 47221, 248, 4, 85, "Output",ExpressionUUID->"f23bf794-8b74-4599-973e-0b23a7f2f9e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2347304, 47230, 1591, 39, 92, "Input",ExpressionUUID->"95631c07-a5d1-4a87-9c84-07a01f078a52"],
Cell[2348898, 47271, 176495, 3126, 557, "Output",ExpressionUUID->"6ede9591-db7f-4903-8d61-33eba416e986"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2525430, 50402, 2341, 61, 92, "Input",ExpressionUUID->"7acf76d5-da3c-4438-a2f3-2dea6771d914"],
Cell[2527774, 50465, 177339, 3147, 609, "Output",ExpressionUUID->"6f17f6f7-c5f8-4ada-b965-02d43e2e06db"]
}, Open  ]]
}, Open  ]],
Cell[2705140, 53616, 72, 0, 98, "Title",ExpressionUUID->"899582bd-6fb3-453a-a4da-14920d46d869"]
}
]
*)

